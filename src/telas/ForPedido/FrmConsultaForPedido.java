/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmConsultaEntrada.java
 *
 * Created on 06/05/2011, 12:39:36
 */

package telas.ForPedido;

import Interfaces.ItelaConsulta;
import Regras.Formatacao;
import Regras.FornecedorController;
import beanController.NfDuplicatas;
import beanController.NfProdutos;
import beanController.NotaEletronica;
import com.toedter.calendar.JTextFieldDateEditor;
import controler.Config;
import controler.relatoriosJasper;
import facade.ForPedidoFacade;
import facade.ProdutoFacade;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.net.URL;
import java.sql.SQLException;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import model.*;
import telas.Fornecedor.FrmConsultaFornecedor;


/**
 *
 * @author Wolverine
 */
public class FrmConsultaForPedido extends javax.swing.JFrame implements ItelaConsulta {

    private String datePattern;
    private String maskPattern;
    private char placeHolder;
    private Config config;
    private PedidoListaTableModel pedidoModel;
    private List<Forpedido> listaPedido;
    private List<Forpedproduto> listaPedidoProduto;
    private PedidoProdutoTableModel pedidoProdutoModel;
    private ItelaConsulta telaConsulta;
    private int adicionarPedido;
    private Fornecedor fornecedor;
    
    /** Creates new form FrmConsultaEntrada */
    public FrmConsultaForPedido(Config config, List<Forpedido> listaPedido, ItelaConsulta telaConsulta) {
        this.listaPedidoProduto = new ArrayList<Forpedproduto>();
        datePattern = "dd/MM/yyyy";
        maskPattern = "##/##/##";
        placeHolder = '_';
        this.telaConsulta = telaConsulta;
        initComponents();
        dataInicialjDateChooser.setDate(Formatacao.SomarDiasData(new Date(), -30));
        dataFinaljDateChooser.setDate(new Date());
        this.config = config;
        if (listaPedido==null){
            this.listaPedido = new ArrayList<Forpedido>();
            String sql = "SELECT f FROM Forpedido f where f.registrado<>'SIM' and f.empresa=" + this.config.getEmpresa().getIdempresa() + " order by f.idForPedido";
            setData(sql);
        }else {
            this.listaPedido = listaPedido;
        }
        setForPedidoModel();        
        URL url = this.getClass().getResource("/imagens/logo_mini.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
    
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BarradeTarefasjToolBar = new javax.swing.JToolBar();
        AdicionarjButton = new javax.swing.JButton();
        EditarjButton = new javax.swing.JButton();
        ExcluirjButton = new javax.swing.JButton();
        SeparadordeTarefasjSeparator = new javax.swing.JToolBar.Separator();
        ImprimirjButton = new javax.swing.JButton();
        RelatoriojButton = new javax.swing.JButton();
        FecharrjButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        pedidoProdutojTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        PedidoListajTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        razaosocialjTextField = new javax.swing.JTextField();
        buscaBancojButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        dataInicialjDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
            maskPattern, placeHolder));
    jLabel2 = new javax.swing.JLabel();
    dataFinaljDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
        maskPattern, placeHolder));
jLabel3 = new javax.swing.JLabel();
jButton1 = new javax.swing.JButton();
registradojCheckBox = new javax.swing.JCheckBox();

setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
setTitle("Consulta de Pedidos de Compra");
getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

BarradeTarefasjToolBar.setFloatable(false);
BarradeTarefasjToolBar.setRollover(true);

AdicionarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/novo.png"))); // NOI18N
AdicionarjButton.setText("Adicionar");
AdicionarjButton.setToolTipText("Adicionar Associado");
AdicionarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
AdicionarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
AdicionarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
AdicionarjButton.setName(""); // NOI18N
AdicionarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
AdicionarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
AdicionarjButton.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        AdicionarjButtonAdicionarAssociado(evt);
    }
    });
    BarradeTarefasjToolBar.add(AdicionarjButton);

    EditarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/alterar.png"))); // NOI18N
    EditarjButton.setText("Editar");
    EditarjButton.setToolTipText("Editar Associado");
    EditarjButton.setEnabled(false);
    EditarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    EditarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
    EditarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
    EditarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
    EditarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    EditarjButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            EditarjButtonEditarCadastroAssociado(evt);
        }
    });
    BarradeTarefasjToolBar.add(EditarjButton);

    ExcluirjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/excluir.png"))); // NOI18N
    ExcluirjButton.setText("Excluir");
    ExcluirjButton.setToolTipText("Excluir Associado");
    ExcluirjButton.setEnabled(false);
    ExcluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    ExcluirjButton.setMaximumSize(new java.awt.Dimension(80, 90));
    ExcluirjButton.setMinimumSize(new java.awt.Dimension(80, 90));
    ExcluirjButton.setPreferredSize(new java.awt.Dimension(80, 90));
    ExcluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    ExcluirjButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ExcluirjButtonActionPerformed(evt);
        }
    });
    BarradeTarefasjToolBar.add(ExcluirjButton);
    BarradeTarefasjToolBar.add(SeparadordeTarefasjSeparator);

    ImprimirjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/impressao.png"))); // NOI18N
    ImprimirjButton.setText("Imprimir");
    ImprimirjButton.setToolTipText("Imprimir");
    ImprimirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    ImprimirjButton.setMaximumSize(new java.awt.Dimension(80, 90));
    ImprimirjButton.setMinimumSize(new java.awt.Dimension(80, 90));
    ImprimirjButton.setPreferredSize(new java.awt.Dimension(80, 90));
    ImprimirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    ImprimirjButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ImprimirjButtonActionPerformed(evt);
        }
    });
    BarradeTarefasjToolBar.add(ImprimirjButton);

    RelatoriojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/relatorio.png"))); // NOI18N
    RelatoriojButton.setText("Relatórios");
    RelatoriojButton.setToolTipText("Relatórios");
    RelatoriojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    RelatoriojButton.setMaximumSize(new java.awt.Dimension(80, 90));
    RelatoriojButton.setMinimumSize(new java.awt.Dimension(80, 90));
    RelatoriojButton.setPreferredSize(new java.awt.Dimension(80, 90));
    RelatoriojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    RelatoriojButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            RelatoriojButtonActionPerformed(evt);
        }
    });
    BarradeTarefasjToolBar.add(RelatoriojButton);

    FecharrjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/voltar.png"))); // NOI18N
    FecharrjButton.setText("Fechar");
    FecharrjButton.setToolTipText("Fechar");
    FecharrjButton.setFocusable(false);
    FecharrjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    FecharrjButton.setMaximumSize(new java.awt.Dimension(80, 90));
    FecharrjButton.setMinimumSize(new java.awt.Dimension(80, 90));
    FecharrjButton.setPreferredSize(new java.awt.Dimension(80, 90));
    FecharrjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    FecharrjButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            FecharrjButtonFecharAssociado(evt);
        }
    });
    BarradeTarefasjToolBar.add(FecharrjButton);

    getContentPane().add(BarradeTarefasjToolBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 390, 510, 80));

    pedidoProdutojTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Código", "Descrição", "Unidade", "Quantidade", "Fabricante"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jScrollPane1.setViewportView(pedidoProdutojTable);
    pedidoProdutojTable.getColumnModel().getColumn(0).setResizable(false);
    pedidoProdutojTable.getColumnModel().getColumn(0).setPreferredWidth(5);
    pedidoProdutojTable.getColumnModel().getColumn(1).setResizable(false);
    pedidoProdutojTable.getColumnModel().getColumn(1).setPreferredWidth(145);
    pedidoProdutojTable.getColumnModel().getColumn(2).setResizable(false);
    pedidoProdutojTable.getColumnModel().getColumn(2).setPreferredWidth(10);
    pedidoProdutojTable.getColumnModel().getColumn(3).setResizable(false);
    pedidoProdutojTable.getColumnModel().getColumn(3).setPreferredWidth(10);
    pedidoProdutojTable.getColumnModel().getColumn(4).setResizable(false);
    pedidoProdutojTable.getColumnModel().getColumn(4).setPreferredWidth(10);

    getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 60, 590, 310));

    PedidoListajTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Nº Pedido", "Fornecedor", "Data Emissão", "Data Entrega", "Cond Pagto"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, true, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    PedidoListajTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            PedidoListajTableMouseClicked(evt);
        }
    });
    jScrollPane2.setViewportView(PedidoListajTable);
    PedidoListajTable.getColumnModel().getColumn(0).setResizable(false);
    PedidoListajTable.getColumnModel().getColumn(0).setPreferredWidth(10);
    PedidoListajTable.getColumnModel().getColumn(1).setResizable(false);
    PedidoListajTable.getColumnModel().getColumn(1).setPreferredWidth(110);
    PedidoListajTable.getColumnModel().getColumn(2).setResizable(false);
    PedidoListajTable.getColumnModel().getColumn(2).setPreferredWidth(20);
    PedidoListajTable.getColumnModel().getColumn(3).setResizable(false);
    PedidoListajTable.getColumnModel().getColumn(3).setPreferredWidth(20);
    PedidoListajTable.getColumnModel().getColumn(4).setResizable(false);
    PedidoListajTable.getColumnModel().getColumn(4).setPreferredWidth(20);

    getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 470, 310));

    jLabel1.setText("Razão Social Fornecedor");
    getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

    razaosocialjTextField.setEditable(false);
    getContentPane().add(razaosocialjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 280, -1));

    buscaBancojButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/magnifier.png"))); // NOI18N
    buscaBancojButton1.setToolTipText("Pesquisa Fornecedor");
    buscaBancojButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            buscaBancojButton1ActionPerformed(evt);
        }
    });
    getContentPane().add(buscaBancojButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 20, 20));

    jButton2.setText("Remover Fornecedor");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });
    getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, -1, -1));

    dataInicialjDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dataInicialjDateChooserFocusGained(evt);
        }
    });
    getContentPane().add(dataInicialjDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 30, 100, -1));

    jLabel2.setText("Data Inicial");
    getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 10, -1, -1));

    dataFinaljDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dataFinaljDateChooserFocusGained(evt);
        }
    });
    getContentPane().add(dataFinaljDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 30, 100, -1));

    jLabel3.setText("Data Final");
    getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, -1, -1));

    jButton1.setText("Pesquisar");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });
    getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 30, -1, -1));

    registradojCheckBox.setText("Pedido Registrado");
    getContentPane().add(registradojCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 30, -1, -1));

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AdicionarjButtonAdicionarAssociado(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdicionarjButtonAdicionarAssociado
        this.adicionarPedido = 2;
        new FrmConsultaFornecedor(this);
}//GEN-LAST:event_AdicionarjButtonAdicionarAssociado

    private void EditarjButtonEditarCadastroAssociado(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarjButtonEditarCadastroAssociado
        int linha = PedidoListajTable.getSelectedRow();
        if (linha>=0) {
             ForPedido forPedido = new ForPedido();
             forPedido.setForPedido(listaPedido.get(linha));
             forPedido.setListaPedidoProduto(listaPedidoProduto);
             new FrmPedidoFornecedor(localizarFornecedor(forPedido.getForPedido().getFornecedor()), config, forPedido, this);
        }
}//GEN-LAST:event_EditarjButtonEditarCadastroAssociado

    private void ExcluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirjButtonActionPerformed
        int linha = PedidoListajTable.getSelectedRow();
        if (linha>=0) {
            ForPedidoFacade forPedidoFacade = new ForPedidoFacade();
            for(int i=0;i<listaPedido.size();i++){
                try {
                    forPedidoFacade.excluirForPedProduto(listaPedidoProduto.get(i));
                } catch (SQLException ex) {
                    Logger.getLogger(FrmConsultaForPedido.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            try {
                forPedidoFacade.excluirForPedido(listaPedido.get(linha));
            } catch (SQLException ex) {
                Logger.getLogger(FrmConsultaForPedido.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Pedido Excluido");
        }
}//GEN-LAST:event_ExcluirjButtonActionPerformed

    private void ImprimirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImprimirjButtonActionPerformed
        int linha = PedidoListajTable.getSelectedRow();
        if (linha >= 0) {
            String url = ("telas/ForPedido/reportForPedido.jasper");
            Map parameters = new HashMap();
            try {
                parameters.put("numeroPedido", this.listaPedido.get(linha).getIdForPedido());
                parameters.put("idempresa", this.config.getEmpresa().getIdempresa());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Não foi possível gerar o relatório");
                ex.printStackTrace();
            }
            new relatoriosJasper(url, parameters);
        }
}//GEN-LAST:event_ImprimirjButtonActionPerformed

    private void RelatoriojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RelatoriojButtonActionPerformed
        for (int i=0; i<this.listaPedido.size();i++){
            setPedidoProdutoModel(listaPedido.get(i));
            for(int c=0;c<this.listaPedidoProduto.size();c++){
                salvarProdutoDataPedido(this.listaPedido.get(i).getDataEntrega(), listaPedidoProduto.get(c).getProduto());
            }
        }
    }//GEN-LAST:event_RelatoriojButtonActionPerformed

    private void FecharrjButtonFecharAssociado(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FecharrjButtonFecharAssociado
        this.dispose();
}//GEN-LAST:event_FecharrjButtonFecharAssociado

    private void PedidoListajTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PedidoListajTableMouseClicked
        int linha = PedidoListajTable.getSelectedRow();
        if (linha >= 0) {
            setPedidoProdutoModel(listaPedido.get(linha));
            EditarjButton.setEnabled(true);
            ExcluirjButton.setEnabled(true);
            if (evt.getClickCount() == 2) {
                if (!(telaConsulta == null)) {
                    telaConsulta.setForPedido(listaPedido.get(linha));
                    this.dispose();
                }
            }
        }
    }//GEN-LAST:event_PedidoListajTableMouseClicked

    private void buscaBancojButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaBancojButton1ActionPerformed
        this.adicionarPedido = 1;
        new FrmConsultaFornecedor(this);
    }//GEN-LAST:event_buscaBancojButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.fornecedor = null;
        razaosocialjTextField.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void dataInicialjDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataInicialjDateChooserFocusGained

   }//GEN-LAST:event_dataInicialjDateChooserFocusGained

    private void dataFinaljDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataFinaljDateChooserFocusGained

   }//GEN-LAST:event_dataFinaljDateChooserFocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String iData = Formatacao.ConvercaoDataSql(dataInicialjDateChooser.getDate());
        String fData = Formatacao.ConvercaoDataSql(dataFinaljDateChooser.getDate());
        String sql = "SELECT f FROM Forpedido f where f.dataEmissao>='" + iData 
                    + "'  and f.dataEmissao<='" + fData + "'";
        String sqlFornecedor = "";
        if (this.fornecedor!=null){
            sqlFornecedor = " and f.fornecedor=" + this.fornecedor.getIdfornecedor();
        }
        
        String registrado = " and f.registrado<>'SIM'";
        String sqlFinal = " and f.empresa=" + this.config.getEmpresa().getIdempresa() + " order by f.idForPedido";
        if (this.fornecedor != null) {
            sql = sql + sqlFornecedor;
        }
        if (!registradojCheckBox.isSelected()){
            sql = sql + registrado;
        }
        sql = sql + sqlFinal;
        setData(sql);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdicionarjButton;
    private javax.swing.JToolBar BarradeTarefasjToolBar;
    private javax.swing.JButton EditarjButton;
    private javax.swing.JButton ExcluirjButton;
    private javax.swing.JButton FecharrjButton;
    private javax.swing.JButton ImprimirjButton;
    private javax.swing.JTable PedidoListajTable;
    private javax.swing.JButton RelatoriojButton;
    private javax.swing.JToolBar.Separator SeparadordeTarefasjSeparator;
    private javax.swing.JButton buscaBancojButton1;
    private com.toedter.calendar.JDateChooser dataFinaljDateChooser;
    private com.toedter.calendar.JDateChooser dataInicialjDateChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable pedidoProdutojTable;
    private javax.swing.JTextField razaosocialjTextField;
    private javax.swing.JCheckBox registradojCheckBox;
    // End of variables declaration//GEN-END:variables

    private void setForPedidoModel(){
        pedidoModel = new PedidoListaTableModel(listaPedido);
        PedidoListajTable.setModel(pedidoModel);
        PedidoListajTable.getColumnModel().getColumn(0).setPreferredWidth(5);
        PedidoListajTable.getColumnModel().getColumn(1).setPreferredWidth(145);
        PedidoListajTable.getColumnModel().getColumn(2).setPreferredWidth(10);
        PedidoListajTable.getColumnModel().getColumn(3).setPreferredWidth(10);
        PedidoListajTable.getColumnModel().getColumn(4).setPreferredWidth(10);
        PedidoListajTable.repaint();
    }
    
    private void setPedidoProdutoModel(Forpedido forPedido){
         ForPedidoFacade forPedidoFacade = new ForPedidoFacade();
        try {
            listaPedidoProduto = forPedidoFacade.consultarForPedidoProduto(forPedido);
        } catch (SQLException ex) {
            Logger.getLogger(FrmConsultaForPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.RIGHT);
        pedidoProdutoModel = new PedidoProdutoTableModel(listaPedidoProduto, this.config.getEmpresa().getIdempresa(), forPedido.getFornecedor());
        pedidoProdutojTable.setModel(pedidoProdutoModel);
        pedidoProdutojTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        pedidoProdutojTable.getColumnModel().getColumn(1).setPreferredWidth(110);
        pedidoProdutojTable.getColumnModel().getColumn(2).setPreferredWidth(20);
        pedidoProdutojTable.getColumnModel().getColumn(3).setCellRenderer(renderer);
        pedidoProdutojTable.getColumnModel().getColumn(3).setPreferredWidth(20);
        pedidoProdutojTable.getColumnModel().getColumn(4).setCellRenderer(renderer);
        pedidoProdutojTable.getColumnModel().getColumn(4).setPreferredWidth(20);
        pedidoProdutojTable.repaint();
    }

    public void setData(Object objeto) {
        String sql = null;
        if (objeto==null){
            sql = "SELECT f FROM Forpedido f where f.registrado<>'SIM' and f.empresa=" + this.config.getEmpresa().getIdempresa() + " order by f.idForPedido";
        }else sql = (String) objeto;
        ForPedidoFacade forPedidoFacade = new ForPedidoFacade();
        try {
            listaPedido = forPedidoFacade.consultarForPedido(sql);
        } catch (SQLException ex) {
            Logger.getLogger(FrmConsultaForPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
        setForPedidoModel();
    }

    public void setBanco(Banco banco) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setModelProduto(Produto produto, Estoque estoque) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setNFe(List<NfProdutos> listaProdutos, List<NfDuplicatas> listaDuplicatas, NotaEletronica nota, Fornecedor fornecedor) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setAlterarValorVenda(Estoque estoque) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setFornecedor(Object objeto) {
        this.fornecedor = new Fornecedor();
        fornecedor = (Fornecedor) objeto;
        if (fornecedor!=null){
            if (this.adicionarPedido==1){
                razaosocialjTextField.setText(this.fornecedor.getNomeFantasia());
            }else {
                new FrmPedidoFornecedor(fornecedor, config, new ForPedido(), this);
            }
        }
    }

    public void setForPedido(Object objeto) {
        setData(null);
        setForPedidoModel();
        this.repaint();
    }
    
    public void salvarProdutoDataPedido(Date dataPedido, int idProduto){
        Produto produto = new Produto();
        ProdutoFacade produtoFacade = new ProdutoFacade();
        try {
            produto = produtoFacade.consultarProdutoid(idProduto);
        } catch (Exception ex) {
            Logger.getLogger(FrmVisualizarPedidoForProduto.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Erro Cosultar Produto " +ex);
        }
        if (produto!=null){
            try {
                produto.setDataPedido(dataPedido);
                produtoFacade.salvarProduto(produto);
            } catch (Exception ex) {
                Logger.getLogger(FrmVisualizarPedidoForProduto.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Erro Salvar Produto " + ex);
            }
        }
    }
    
    public Fornecedor localizarFornecedor(int idFornecedor){
        FornecedorController fornecedorController = new FornecedorController();
        return fornecedorController.consultarFornecedor(idFornecedor);
    }

    public void setPlanoContas(Object objeto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setCliente(Object objeto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setProdutoXML(Produto produto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setArquivo(File arquivo) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}


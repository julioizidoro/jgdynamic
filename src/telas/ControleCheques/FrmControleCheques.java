/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package telas.ControleCheques;

import Regras.ClienteController;
import Regras.ControleChequeController;
import Regras.EstoqueController;
import Regras.Formatacao;
import controler.Config;
import controler.UsuarioLogado;
import controler.relatoriosJasper;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import model.Cliente;
import model.Contaspagar;
import model.Contolechequefornecedor;
import model.Controlecheques;
import model.Fornecedor;
import model.Planoconta;
import telas.Cliente.FrmConsultaClientes;
import telas.ContasPagar.IContasPagar;
import telas.Fornecedor.FrmConsultaFornecedor;

/**
 *
 * @author wolverine
 */
public class FrmControleCheques extends javax.swing.JFrame implements ItelaControleCheque{
    
    private String datePattern;
    private String maskPattern;
    private char placeHolder;
    private Cliente cliente;
    
    private ControleChequesTableModel model;
    private List<ControleChequeBean> listaCheqque;
    private Config config;
    private UsuarioLogado usuarioLogado;
    
    private  DefaultTableCellRenderer rendererCor;
    private IContasPagar telaContas;
    private Fornecedor fornecedor;
    
    private List<ControleChequeBean> listaFornecedor;

    /**
     * Creates new form FrmControleCheques
     */
    public FrmControleCheques(Config config, UsuarioLogado usuarioLogado, IContasPagar telaContas) {
        this.config = config;
        this.usuarioLogado = usuarioLogado;
        this.telaContas = telaContas;
        datePattern = "dd/MM/yyyy";
        maskPattern = "##/##/##";
        placeHolder = '_';
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo_mini.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        this.rendererCor = new DefaultTableCellRenderer(){
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                        boolean isSelected, boolean hasFocus, int row, int column) {
                    Component comp = super.getTableCellRendererComponent(table, value,
                            isSelected, hasFocus, row, column);
                    if (value.equals("SIM")){
                        comp.setBackground(Color.red);
                    }else {
                        comp.setBackground(Color.white);
                    }
                    return comp;
                }
        };
        if (telaContas==null){
            pagamentojButton.setEnabled(false);
        }else pagamentojButton.setEnabled(true);
        carregarListaCheques(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu6 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        Cliente = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nomeClientejTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        buscaBancojButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        numeroChequejTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        valorChequejTextField = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        controleChequesjTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        pagamentojButton = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        jMenu3.setText("jMenu3");

        jMenu6.setText("File");
        jMenuBar2.add(jMenu6);

        jMenu7.setText("Edit");
        jMenuBar2.add(jMenu7);

        jMenuItem2.setText("jMenuItem2");

        jMenuItem3.setText("jMenuItem3");

        jMenuItem4.setText("jMenuItem4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Controle de Cheques");

        Cliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Cliente");

        jButton1.setText("Consultar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buscaBancojButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/magnifier.png"))); // NOI18N
        buscaBancojButton1.setToolTipText("Pesquisa Cliente");
        buscaBancojButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaBancojButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("No. Cheque");

        jLabel3.setText("Valor Cheque ");

        valorChequejTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        valorChequejTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                valorChequejTextFieldKeyReleased(evt);
            }
        });

        jButton2.setText("Limpar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ClienteLayout = new javax.swing.GroupLayout(Cliente);
        Cliente.setLayout(ClienteLayout);
        ClienteLayout.setHorizontalGroup(
            ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ClienteLayout.createSequentialGroup()
                        .addComponent(nomeClientejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscaBancojButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(ClienteLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(39, 39, 39)
                                .addComponent(jLabel3))
                            .addGroup(ClienteLayout.createSequentialGroup()
                                .addComponent(numeroChequejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(valorChequejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2))
                    .addComponent(jLabel1))
                .addContainerGap(188, Short.MAX_VALUE))
        );
        ClienteLayout.setVerticalGroup(
            ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClienteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ClienteLayout.createSequentialGroup()
                        .addGroup(ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomeClientejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(numeroChequejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(valorChequejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(buscaBancojButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2)))
                .addContainerGap())
        );

        controleChequesjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        controleChequesjTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                controleChequesjTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(controleChequesjTable);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton3.setText("Cadastar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Depositar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Fornecedor");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        pagamentojButton.setText("Pagamento");
        pagamentojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagamentojButtonActionPerformed(evt);
            }
        });

        jButton7.setText("Devolvido");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Fechar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jButton3)
                .addGap(32, 32, 32)
                .addComponent(jButton4)
                .addGap(29, 29, 29)
                .addComponent(jButton5)
                .addGap(34, 34, 34)
                .addComponent(pagamentojButton)
                .addGap(36, 36, 36)
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(pagamentojButton)
                    .addComponent(jButton7)
                    .addComponent(jButton8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscaBancojButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaBancojButton1ActionPerformed
        new FrmConsultaClientes(config, usuarioLogado, this);
    }//GEN-LAST:event_buscaBancojButton1ActionPerformed

    private void controleChequesjTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_controleChequesjTableKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.listaCheqque == null) {
                listaCheqque = new ArrayList<ControleChequeBean>();
            }
            int linha = controleChequesjTable.getSelectedRow();
            if (linha >= 0) {
                if (listaCheqque.get(linha).getMarcado().equalsIgnoreCase("NÃO")){
                    listaCheqque.get(linha).setMarcado("SIM");
                }else {
                    listaCheqque.get(linha).setMarcado("NÃO");
                }
            }
        }

    }//GEN-LAST:event_controleChequesjTableKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        nomeClientejTextField.setText("");
        valorChequejTextField.setText("");
        numeroChequejTextField.setText("");
        cliente = null;
        carregarListaCheques(null);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String sql=null;
        if (cliente!=null){
            sql = "Select c from Controlecheques c where c.cliente=" + cliente.getIdcliente() + " order by c.dataEmissao";
        }else {
            if (numeroChequejTextField.getText().length()>0){
                sql = "Select c from Controlecheques c where c.numeroCheque='" + numeroChequejTextField.getText() + "' order by c.dataEmissao";
            }else {
                if (valorChequejTextField.getText().length()>0){
                    double valorCheque = Formatacao.ConvercaoMonetariaDouble(valorChequejTextField.getText());
                    sql = "Select c from Controlecheques c where c.valorCheque=" + valorCheque + " order by c.dataEmissao";
                }
            }
        }
        carregarListaCheques(sql);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void valorChequejTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorChequejTextFieldKeyReleased
        valorChequejTextField.setText(Formatacao.decinalValorMonetario(valorChequejTextField.getText()));
    }//GEN-LAST:event_valorChequejTextFieldKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        gerarDeposito();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        new FrmConsultaFornecedor(this);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void pagamentojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagamentojButtonActionPerformed
        if (this.listaFornecedor==null){
             gerarChequesFornecedor();
         }        
         this.telaContas.setListaCheques(listaCheqque, 0);
         this.dispose();
    }//GEN-LAST:event_pagamentojButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new FrmCadastrarCheques(this, config);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int linha = controleChequesjTable.getSelectedRow();
        if (linha>=0){
            ControleChequeController controleChequeController = new ControleChequeController();
            listaCheqque.get(linha).getCheque().setSituacao("Devolvido");
            controleChequeController.salvarCehque(listaCheqque.get(linha).getCheque());
            carregarModelCheque();
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Cliente;
    private javax.swing.JButton buscaBancojButton1;
    private javax.swing.JTable controleChequesjTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomeClientejTextField;
    private javax.swing.JTextField numeroChequejTextField;
    private javax.swing.JButton pagamentojButton;
    private javax.swing.JTextField valorChequejTextField;
    // End of variables declaration//GEN-END:variables

    public void carregarListaCheques(String sql){
        if (sql==null){
            sql = "Select c from Controlecheques c where situacao='CAIXA' order by c.dataEmissao";
        }
        ControleChequeController controleChequeController = new ControleChequeController();
        if (listaCheqque!=null){
            listaCheqque.removeAll(listaCheqque);
        }
        List<Controlecheques> lista = controleChequeController.listarCheques(sql);
        ClienteController clienteController = new ClienteController();
        if ((lista!=null) && (lista.size()>0)){
            listaCheqque = new ArrayList<ControleChequeBean>();
            for(int i=0;i<lista.size();i++){
                Cliente cliente = new Cliente();
                cliente = clienteController.consultarClienteId(lista.get(i).getCliente());
                ControleChequeBean controleChequeBean = new ControleChequeBean();
                controleChequeBean.setCheque(lista.get(i));
                controleChequeBean.setCliente(cliente);
                listaCheqque.add(controleChequeBean);
            }
        }
        carregarModel();
    }
    
    public void carregarModel(){
        
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.RIGHT);
        if (listaCheqque==null){
            listaCheqque = new ArrayList<ControleChequeBean>();
        }
        model = new ControleChequesTableModel(listaCheqque);
        controleChequesjTable.setModel(model);
        controleChequesjTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        controleChequesjTable.getColumnModel().getColumn(1).setPreferredWidth(300);
        controleChequesjTable.getColumnModel().getColumn(2).setPreferredWidth(40);
        controleChequesjTable.getColumnModel().getColumn(3).setPreferredWidth(40);
        controleChequesjTable.getColumnModel().getColumn(4).setCellRenderer(renderer);
        controleChequesjTable.getColumnModel().getColumn(4).setPreferredWidth(40);
        controleChequesjTable.getColumnModel().getColumn(5).setPreferredWidth(40);
        controleChequesjTable.getColumnModel().getColumn(6).setCellRenderer(this.rendererCor);
        controleChequesjTable.getColumnModel().getColumn(6).setPreferredWidth(20);
        controleChequesjTable.repaint();
    }

   
    public void gerarDeposito(){
        List<ControleChequeBean> listaDeposito = new ArrayList<ControleChequeBean>();
        double valorDeposito =0;
        for(int i=0; i< listaCheqque.size();i++){
            if (listaCheqque.get(i).getMarcado().equalsIgnoreCase("SIM")){
                listaDeposito.add(listaCheqque.get(i));
                valorDeposito = valorDeposito + listaCheqque.get(i).getCheque().getValorCheque();
            }
        }
        if (listaDeposito.size()>0){
            new FrmDeposito(config, usuarioLogado, listaDeposito, valorDeposito, this);
        }else {
            JOptionPane.showMessageDialog(rootPane, "Sem cheques selecionado para Deposito");
        }
    }
    
    public void gerarChequesFornecedor(){
    listaFornecedor = new ArrayList<ControleChequeBean>();
        for(int i=0; i< listaCheqque.size();i++){
            if (listaCheqque.get(i).getMarcado().equalsIgnoreCase("SIM")){
                listaFornecedor.add(listaCheqque.get(i));
            }
        }
    }


    public void consultarFornecedor(Fornecedor fornecedor) {
        if (fornecedor!=null){
            this.fornecedor = fornecedor;
            gerarChequesFornecedor();
            salvarChequesFornecedor();
            salvarSituacaoCheque("Fornecedor", "Fornecedor");
            carregarModelCheque();
        }
    }


    public void consultarCliente(Cliente cliente) {
        this.cliente = cliente;
        nomeClientejTextField.setText(cliente.getNome());
    }

    public void consultarPlanoContas(Planoconta planoConta) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void conultarContasPagar(List<Contaspagar> listaPagamento) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    public void salvarChequesFornecedor(){
        ControleChequeController controleChequeController = new  ControleChequeController();
        for(int i=0;i<listaFornecedor.size();i++){
            Contolechequefornecedor contolechequefornecedor = new Contolechequefornecedor();
            contolechequefornecedor.setControlecheques(listaFornecedor.get(i).getCheque().getIdControleCheques());
            contolechequefornecedor.setDataFornecedor(new Date());
            contolechequefornecedor.setFornecedor(this.fornecedor.getIdfornecedor());
            controleChequeController.salvarFornecedor(contolechequefornecedor);
        }
        imprimirRelatorioChequesFornecedor();
    }
    
    public void salvarSituacaoCheque(String local, String situacao){
        ControleChequeController controleChequeController = new ControleChequeController();
        for(int i=0;i<listaFornecedor.size();i++){
            Controlecheques controlecheques = new Controlecheques();
            controlecheques = listaFornecedor.get(i).getCheque();
            controlecheques.setLocal(local);
            controlecheques.setSituacao(situacao);
            controleChequeController.salvarCehque(controlecheques);
        }
    }

    public void carregarModelCheque() {
        carregarListaCheques(null);
    }
    
    public void imprimirRelatorioChequesFornecedor() {
        if (this.fornecedor != null) {
            String url = ("telas/ControleCheques/chequesFornecedor.jasper");
            Map parameters = new HashMap();
            try {
                parameters.put("nomeFantasia", this.config.getEmpresa().getNomeFantasia());
                parameters.put("RazaoSocial", this.config.getEmpresa().getRazaoSocial());
                parameters.put("data", Formatacao.ConvercaoDataSql(new Date()));
                parameters.put("fornecedor", this.fornecedor.getIdfornecedor());
                parameters.put("idempresa", this.config.getEmpresa().getIdempresa());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Não foi possível gerar o relatório " + ex);
                ex.printStackTrace();
            }
            new relatoriosJasper(url, parameters);

        }
    }


}

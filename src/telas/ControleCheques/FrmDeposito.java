/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package telas.ControleCheques;

import Regras.BancoController;
import Regras.ControleChequeController;
import Regras.Formatacao;
import Regras.MovimentoBancoController;
import Regras.MovimentoCaixaController;
import com.toedter.calendar.JTextFieldDateEditor;
import controler.Config;
import controler.UsuarioLogado;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import model.Banco;
import model.ChequeMovBanco;
import model.Cliente;
import model.Contaspagar;
import model.Controlecheques;
import model.Fornecedor;
import model.Movimentobanco;
import model.Movimentocaixa;
import model.Planoconta;
import telas.PlanoContas.FrmConsultaPlanoContas;

/**
 *
 * @author wolverine
 */
public class FrmDeposito extends javax.swing.JFrame implements ItelaControleCheque{
    
    private String datePattern;
    private String maskPattern;
    private char placeHolder;
    
    private Config config;
    private UsuarioLogado usuarioLogado;
    private List<ControleChequeBean> listaCheuqes;
    private double valor;
    private Planoconta planoConta;
    private Banco banco;
    private ItelaControleCheque telaCheque;

    /**
     * Creates new form FrmDeposito
     */
    public FrmDeposito(Config config, UsuarioLogado usuarioLogado, List<ControleChequeBean> listaCheques, double valor, ItelaControleCheque telaCheque) {
        datePattern = "dd/MM/yyyy";
        maskPattern = "##/##/##";
        placeHolder = '_';
        this.config = config;
        this.telaCheque = telaCheque;
        this.listaCheuqes = listaCheques;
        this.usuarioLogado = usuarioLogado;
        this.valor = valor;
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo_mini.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        iniciarDeposito();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        bancojComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        valorjTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        dataDepositojDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
            maskPattern, placeHolder));
    planoContasjTextField = new javax.swing.JTextField();
    jLabel4 = new javax.swing.JLabel();
    jButton3 = new javax.swing.JButton();
    jPanel2 = new javax.swing.JPanel();
    jButton1 = new javax.swing.JButton();
    jButton2 = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jLabel1.setText("Banco");

    jLabel2.setText("Valor");

    valorjTextField.setEditable(false);
    valorjTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

    jLabel3.setText("Data Deposito");

    dataDepositojDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dataDepositojDateChooserFocusGained(evt);
        }
    });

    planoContasjTextField.setEditable(false);

    jLabel4.setText("Plano de Conta");

    jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/magnifier.png"))); // NOI18N
    jButton3.setToolTipText("Pesquisa Plano de Contas");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3consultaPlanoContas(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bancojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(valorjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(dataDepositojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addComponent(jLabel4)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(planoContasjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(4, 4, 4)
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(bancojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel4)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addComponent(planoContasjTextField))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(jLabel3))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(valorjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(dataDepositojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap())
    );

    jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jButton1.setText("Confirmar");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    jButton2.setText("Cancelar");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addGap(44, 44, 44)
            .addComponent(jButton1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton2)
            .addGap(50, 50, 50))
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton1)
                .addComponent(jButton2))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dataDepositojDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataDepositojDateChooserFocusGained

    }//GEN-LAST:event_dataDepositojDateChooserFocusGained

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3consultaPlanoContas(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3consultaPlanoContas
        new FrmConsultaPlanoContas(this);
    }//GEN-LAST:event_jButton3consultaPlanoContas

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.banco = new Banco();
        banco = (Banco) bancojComboBox.getSelectedItem();
        if (verificarCamposDeposito()){
            lancarDeposito();
        }
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox bancojComboBox;
    private com.toedter.calendar.JDateChooser dataDepositojDateChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField planoContasjTextField;
    private javax.swing.JTextField valorjTextField;
    // End of variables declaration//GEN-END:variables
    public void iniciarDeposito(){
        BancoController bancoController = new BancoController();
        List<Banco> listaBanco = bancoController.listar();
        for(int i=0;i<listaBanco.size();i++){
            bancojComboBox.addItem(listaBanco.get(i));
        }
        valorjTextField.setText(Formatacao.foramtarDoubleString(valor));
        dataDepositojDateChooser.setDate(new Date());
    }
    
    public void salvarMovimentoCaixa(){
        MovimentoCaixaController movimentoCaixaController = new MovimentoCaixaController();
        Movimentocaixa mvCaixa = new Movimentocaixa();
        mvCaixa.setDataMovimento(dataDepositojDateChooser.getDate());
        mvCaixa.setDescricao("Deposito Bancário e Cheques");
        mvCaixa.setEmpresa(this.config.getEmpresa().getIdempresa());
        mvCaixa.setPlanoconta(this.planoConta.getIdplanoconta());
        mvCaixa.setUsuarioLancamento(this.usuarioLogado.getUsuario().getLogin());
        mvCaixa.setValorEntrada(0.0f);
        Double valorDeposito = valor;
        mvCaixa.setValorSaida(valorDeposito.floatValue());
        movimentoCaixaController.salvarCaixa(mvCaixa);
    }
    
    public void lancarDeposito(){
        MovimentoBancoController movimentoBancoController = new MovimentoBancoController();
        Movimentobanco mvBanco = new Movimentobanco();
        Banco banco = (Banco) bancojComboBox.getSelectedItem();
        mvBanco.setBanco(banco.getIdbanco());
        mvBanco.setDataLancamento(dataDepositojDateChooser.getDate());
        mvBanco.setDataMovimento(dataDepositojDateChooser.getDate());
        mvBanco.setDescricao("Deposito em Cheques");
        mvBanco.setEmpresa(this.config.getEmpresa().getIdempresa());
        mvBanco.setPlanoconta(planoConta.getIdplanoconta());
        Double valorDeposito = valor;
        mvBanco.setValorEntrada(valorDeposito.floatValue());
        mvBanco.setValorSaida(0.0f);
        mvBanco = movimentoBancoController.salvarBanco(mvBanco);
        salvarCheques(mvBanco);
        salvarMovimentoCaixa();
        salvarSituacaoCheque();
    }
    
    public void salvarCheques(Movimentobanco movimentoBanco){
        ControleChequeController controleChequeController = new ControleChequeController();
        for(int i=0;i<listaCheuqes.size();i++){
            ChequeMovBanco chequeMovBanco = new ChequeMovBanco();
            chequeMovBanco.setControlecheques(listaCheuqes.get(i).getCheque().getIdControleCheques());
            chequeMovBanco.setMovimentobanco(movimentoBanco.getIdmovimentoBanco());
            chequeMovBanco = controleChequeController.salvarChequeMovBanco(chequeMovBanco);
        }
        
    }

    public void consultarPlanoContas(Planoconta planoConta) {
        if (planoConta!=null){
            this.planoConta = planoConta;
            planoContasjTextField.setText(planoConta.getNumeroConta() + " - " + planoConta.getDescricao());
        }
    }
    
    public boolean verificarCamposDeposito(){
        if (dataDepositojDateChooser.getDate()==null){
            JOptionPane.showMessageDialog(null, "Data de Deposito Inválida");
            return false;
        }else if (this.planoConta==null){
            JOptionPane.showMessageDialog(null, "Plano de Contas não Selecionado");
            return false;
        }else if (this.banco==null){
            JOptionPane.showMessageDialog(null, "Selecione o Banco para Deposito");
            return false;
        }
        return true;
    }

    public void conultarContasPagar(List<Contaspagar> listaPagamento) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void consultarFornecedor(Fornecedor fornecedor) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void consultarCliente(Cliente cliente) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    public void salvarSituacaoCheque(){
        ControleChequeController controleChequeController = new ControleChequeController();
        for(int i=0;i<listaCheuqes.size();i++){
            Controlecheques controlecheques = new Controlecheques();
            controlecheques = listaCheuqes.get(i).getCheque();
            controlecheques.setLocal("Banco");
            controlecheques.setSituacao("Depositado");
            controleChequeController.salvarCehque(controlecheques);
            if (telaCheque!=null){
                telaCheque.carregarModelCheque();
            }
        }
    }

    public void carregarModelCheque() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    
    
}

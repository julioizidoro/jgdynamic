/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmConsultaEntrada.java
 *
 * Created on 06/05/2011, 12:39:36
 */

package telas.Entrada;

import Interfaces.ItelaConsulta;
import beanController.NfDuplicatas;
import beanController.NfProdutos;
import beanController.NotaEletronica;
import controler.Config;
import controler.relatoriosJasper;
import facade.EntradaFacade;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.net.URL;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.*;

/**
 *
 * @author Wolverine
 */
public final class FrmConsultarSituacaoEntrada extends javax.swing.JFrame implements ItelaConsulta{

    private List<Docentrada> listaEntrada;
    private SituacaoEntradaTableModel modelSituacao;
    private Config config;
    

    /** Creates new form FrmConsultaEntrada */
    public FrmConsultarSituacaoEntrada(Config config) {
        this.config = config;
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo_mini.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        setData(null);
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BarradeTarefasjToolBar = new javax.swing.JToolBar();
        AdicionarjButton = new javax.swing.JButton();
        EditarjButton = new javax.swing.JButton();
        ExcluirjButton = new javax.swing.JButton();
        atualizarjButton = new javax.swing.JButton();
        SeparadordeTarefasjSeparator = new javax.swing.JToolBar.Separator();
        ImprimirjButton = new javax.swing.JButton();
        finalizarjButton = new javax.swing.JButton();
        FecharrjButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        EntradajTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BarradeTarefasjToolBar.setFloatable(false);
        BarradeTarefasjToolBar.setRollover(true);

        AdicionarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/novo.png"))); // NOI18N
        AdicionarjButton.setText("Adicionar");
        AdicionarjButton.setToolTipText("Adicionar Associado");
        AdicionarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        AdicionarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        AdicionarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        AdicionarjButton.setName(""); // NOI18N
        AdicionarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        AdicionarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        AdicionarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdicionarjButtonAdicionarAssociado(evt);
            }
        });
        BarradeTarefasjToolBar.add(AdicionarjButton);

        EditarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/alterar.png"))); // NOI18N
        EditarjButton.setText("Editar");
        EditarjButton.setToolTipText("Editar Associado");
        EditarjButton.setEnabled(false);
        EditarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EditarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        EditarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        EditarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        EditarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        EditarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarjButtonEditarCadastroAssociado(evt);
            }
        });
        BarradeTarefasjToolBar.add(EditarjButton);

        ExcluirjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/excluir.png"))); // NOI18N
        ExcluirjButton.setText("Excluir");
        ExcluirjButton.setToolTipText("Excluir Associado");
        ExcluirjButton.setEnabled(false);
        ExcluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ExcluirjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        ExcluirjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        ExcluirjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        ExcluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ExcluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirjButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar.add(ExcluirjButton);

        atualizarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/excluir.png"))); // NOI18N
        atualizarjButton.setText("Atualizar");
        atualizarjButton.setToolTipText("Excluir Associado");
        atualizarjButton.setFocusable(false);
        atualizarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        atualizarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        atualizarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        atualizarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        atualizarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        atualizarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarjButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar.add(atualizarjButton);
        BarradeTarefasjToolBar.add(SeparadordeTarefasjSeparator);

        ImprimirjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/impressao.png"))); // NOI18N
        ImprimirjButton.setText("Imprimir");
        ImprimirjButton.setToolTipText("Imprimir");
        ImprimirjButton.setEnabled(false);
        ImprimirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ImprimirjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        ImprimirjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        ImprimirjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        ImprimirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ImprimirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImprimirjButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar.add(ImprimirjButton);

        finalizarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/relatorio.png"))); // NOI18N
        finalizarjButton.setText("Finalizar");
        finalizarjButton.setToolTipText("Relatórios");
        finalizarjButton.setEnabled(false);
        finalizarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        finalizarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        finalizarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        finalizarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        finalizarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        finalizarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizarjButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar.add(finalizarjButton);

        FecharrjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/voltar.png"))); // NOI18N
        FecharrjButton.setText("Fechar");
        FecharrjButton.setToolTipText("Fechar");
        FecharrjButton.setFocusable(false);
        FecharrjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        FecharrjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        FecharrjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        FecharrjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        FecharrjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        FecharrjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FecharrjButtonFecharAssociado(evt);
            }
        });
        BarradeTarefasjToolBar.add(FecharrjButton);

        getContentPane().add(BarradeTarefasjToolBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 300, 590, 80));

        EntradajTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Fornecedor", "Nº Documento", "Data Registro", "Situação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        EntradajTable.getTableHeader().setReorderingAllowed(false);
        EntradajTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EntradajTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(EntradajTable);
        EntradajTable.getColumnModel().getColumn(0).setResizable(false);
        EntradajTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        EntradajTable.getColumnModel().getColumn(1).setResizable(false);
        EntradajTable.getColumnModel().getColumn(1).setPreferredWidth(350);
        EntradajTable.getColumnModel().getColumn(2).setResizable(false);
        EntradajTable.getColumnModel().getColumn(2).setPreferredWidth(20);
        EntradajTable.getColumnModel().getColumn(3).setResizable(false);
        EntradajTable.getColumnModel().getColumn(3).setPreferredWidth(20);
        EntradajTable.getColumnModel().getColumn(4).setResizable(false);
        EntradajTable.getColumnModel().getColumn(4).setPreferredWidth(40);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 870, 270));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AdicionarjButtonAdicionarAssociado(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdicionarjButtonAdicionarAssociado
        new FrmSituacaoEntrada(config, this);
}//GEN-LAST:event_AdicionarjButtonAdicionarAssociado

    private void EditarjButtonEditarCadastroAssociado(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarjButtonEditarCadastroAssociado
        int linha = EntradajTable.getSelectedRow();
        if (linha>=0){
            new FrmSituacaoEntrada(config, this, listaEntrada.get(linha));
        }else {
            JOptionPane.showMessageDialog(null, "Selecione uma Nota Fiscal");
        }
}//GEN-LAST:event_EditarjButtonEditarCadastroAssociado

    private void ExcluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirjButtonActionPerformed
        int linha = EntradajTable.getSelectedRow();
        EntradaFacade entradaFacade = new EntradaFacade();
        if (linha>=0){
            if (listaEntrada.get(linha).getSituacao().equalsIgnoreCase("Aguardando")){
                try {
                    entradaFacade.excluirDocEntrada(listaEntrada.get(linha));
                } catch (SQLException ex) {
                    Logger.getLogger(FrmConsultarSituacaoEntrada.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else {
                JOptionPane.showMessageDialog(null, "Exclussão negada");
            }
        }
}//GEN-LAST:event_ExcluirjButtonActionPerformed

    private void ImprimirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImprimirjButtonActionPerformed
        int linha = EntradajTable.getSelectedRow();
        if (linha >= 0) {
            String url = ("telas/Entrada/reportEntradaSituacao.jasper");
            Map parameters = new HashMap();
            try {
                parameters.put("idDocEntrada", this.listaEntrada.get(linha).getIdDocEntrada());
                parameters.put("idEmpresa", this.config.getEmpresa().getIdempresa());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Não foi possível gerar o relatório " + ex);
                ex.printStackTrace();
            }
            new relatoriosJasper(url, parameters);
        }
}//GEN-LAST:event_ImprimirjButtonActionPerformed

    private void finalizarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizarjButtonActionPerformed
        EntradaFacade entradaFacade = new EntradaFacade();
        int linha = EntradajTable.getSelectedRow();
        if (linha>=0){
            listaEntrada.get(linha).setSituacao("Finalizada");
            try {
                entradaFacade.salvarEntradaDoc(listaEntrada.get(linha));
                setData(null);
            } catch (SQLException ex) {
                Logger.getLogger(FrmConsultarSituacaoEntrada.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else {
            JOptionPane.showMessageDialog(null, "Selecione uma Nota Fiscal");
        }
    }//GEN-LAST:event_finalizarjButtonActionPerformed

    private void FecharrjButtonFecharAssociado(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FecharrjButtonFecharAssociado
        this.dispose();
}//GEN-LAST:event_FecharrjButtonFecharAssociado

    private void EntradajTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EntradajTableMouseClicked
        if (evt.getClickCount()==1){
            setModelProduto(null, null);
            EditarjButton.setEnabled(true);
            ExcluirjButton.setEnabled(true);
            finalizarjButton.setEnabled(true);
            ImprimirjButton.setEnabled(true);
        }
    }//GEN-LAST:event_EntradajTableMouseClicked

    private void atualizarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarjButtonActionPerformed
       setData(null);
    }//GEN-LAST:event_atualizarjButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdicionarjButton;
    private javax.swing.JToolBar BarradeTarefasjToolBar;
    private javax.swing.JButton EditarjButton;
    private javax.swing.JTable EntradajTable;
    private javax.swing.JButton ExcluirjButton;
    private javax.swing.JButton FecharrjButton;
    private javax.swing.JButton ImprimirjButton;
    private javax.swing.JToolBar.Separator SeparadordeTarefasjSeparator;
    private javax.swing.JButton atualizarjButton;
    private javax.swing.JButton finalizarjButton;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    public void setModelProduto(Produto produto, Estoque estoque){
   
    }

    public void setData(Object objeto) {
        EntradaFacade entradaFacade = new EntradaFacade();
        try {
            this.listaEntrada = entradaFacade.pesquisarEntradaSituacao("Finalizada", this.config.getEmpresa().getIdempresa());
        } catch (Exception ex) {
            Logger.getLogger(FrmConsultarSituacaoEntrada.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (listaEntrada==null){
            modelSituacao = new SituacaoEntradaTableModel(new ArrayList<Docentrada>());
        }else modelSituacao = new SituacaoEntradaTableModel(listaEntrada);
        EntradajTable.setModel(modelSituacao);
        EntradajTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        EntradajTable.getColumnModel().getColumn(1).setPreferredWidth(350);
        EntradajTable.getColumnModel().getColumn(2).setPreferredWidth(20);
        EntradajTable.getColumnModel().getColumn(3).setPreferredWidth(20);
        EntradajTable.getColumnModel().getColumn(4).setPreferredWidth(40);
       this.repaint();
    }

    public void setBanco(Banco banco) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setNFe(List<NfProdutos> listaProdutos, List<NfDuplicatas> listaDuplicatas, NotaEletronica nota, Fornecedor fornecedor) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setAlterarValorVenda(Estoque estoque) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

   public void setFornecedor(Object objeto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setForPedido(Object objeto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setPlanoContas(Object objeto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setCliente(Object objeto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setProdutoXML(Produto produto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setArquivo(File arquivo) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}

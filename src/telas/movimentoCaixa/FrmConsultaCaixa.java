//*
 //* To change this template, choose Tools | Templates
 //* and open the template in the editor.
 //*///

/*
 * FrmConsultaCaixa.java
 *
 * Created on 23/09/2009, 14:02:05
 */

package telas.movimentoCaixa;


import Regras.Formatacao;
import com.toedter.calendar.JTextFieldDateEditor;
import controler.Config;
import Interfaces.ItelaModel;
import controler.ConfiguracaoSistema;
import controler.Sigap;
import controler.relatoriosJasper;
import facade.MovimentoCaixaFacade;
import java.awt.Component;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.net.URL;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import model.Movimentocaixa;
import telas.FrmSalvarAquivo;

/**
 *
 * @author Wolverine
 */
public class FrmConsultaCaixa extends javax.swing.JFrame  implements ItelaModel{

    private ConsultaMovimentoCaixaTableModel model;
    private Movimentocaixa caixa;
    private DefaultTableCellRenderer renderer;
    private Config config;
     private String datePattern;
    private String maskPattern;
    private char placeHolder;
    private List<Double> listaSaldo;
   

    /** Creates new form FrmConsultaCaixa */
    public FrmConsultaCaixa(Config config) {
           this.config = config;
           datePattern = "dd/MM/yyyy";
           maskPattern = "##/##/##";
           placeHolder = '_';
            this.renderer = new DefaultTableCellRenderer(){
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                        boolean isSelected, boolean hasFocus, int row, int column) {

                    String valorFormatado;
                    if (value instanceof Double) {
                        Double valor = (Double) value;

                        NumberFormat format = NumberFormat.getCurrencyInstance();
                        format.setMinimumFractionDigits(2);
                        valorFormatado = format.format(valor);
                    } else {
                        valorFormatado = value.toString();
                    }

                    Component comp = super.getTableCellRendererComponent(table, valorFormatado,
                            isSelected, hasFocus, row, column);

                    return comp;
                }
        };
        renderer.setHorizontalAlignment(SwingConstants.RIGHT);


     
        initComponents();
        datacaixaInicialjDateChooser.setDate(new Date());
         try {
             MovimentoCaixaFacade facade = new MovimentoCaixaFacade();

            List<Movimentocaixa> listaCaixa = new ArrayList<Movimentocaixa>();
            listaCaixa = facade.consutlarMovimentoCaixa(Formatacao.ConvercaoDataSql(datacaixaInicialjDateChooser.getDate()));
            model = new ConsultaMovimentoCaixaTableModel(listaCaixa);
       } catch (Exception ex) {
           ex.printStackTrace();
           model = new ConsultaMovimentoCaixaTableModel(new ArrayList<Movimentocaixa>());
       }
        URL url = this.getClass().getResource("/imagens/logo_mini.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        ConsultaCaixajTable.setModel(model);
        ConsultaCaixajTable.setDefaultRenderer(Double.class, renderer);
        ConsultaCaixajTable.getColumnModel().getColumn(0).setPreferredWidth(30);
        ConsultaCaixajTable.getColumnModel().getColumn(1).setPreferredWidth(20);
        ConsultaCaixajTable.getColumnModel().getColumn(2).setPreferredWidth(300);
        ConsultaCaixajTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        ConsultaCaixajTable.getColumnModel().getColumn(4).setPreferredWidth(50);
        this.setVisible(true);
    
    }


    public Movimentocaixa getCaixa() {
        return caixa;
    }

    public void setCaixa(Movimentocaixa caixa) {
        this.caixa = caixa;
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AssociadosjPanel = new javax.swing.JPanel();
        HistoricojTextField = new javax.swing.JTextField();
        TabeladeAssociadosScrollPane = new javax.swing.JScrollPane();
        ConsultaCaixajTable = new javax.swing.JTable();
        NomedoAssociadojLabel = new javax.swing.JLabel();
        BarradeTarefasjToolBar = new javax.swing.JToolBar();
        caixaAdicionarjButton = new javax.swing.JButton();
        estornojButton = new javax.swing.JButton();
        caixaPesquisarjButton = new javax.swing.JButton();
        SeparadordeTarefasjSeparator = new javax.swing.JToolBar.Separator();
        caixaImprimirjButton = new javax.swing.JButton();
        caixaVisualizarjButton = new javax.swing.JButton();
        caixaVisualizarjButton1 = new javax.swing.JButton();
        caixaRelatoriojButton = new javax.swing.JButton();
        caixaVoltarjButton = new javax.swing.JButton();
        datacaixaFinaljDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
            maskPattern, placeHolder));
    jLabel1 = new javax.swing.JLabel();
    jButton1 = new javax.swing.JButton();
    datacaixaInicialjDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
        maskPattern, placeHolder));
jLabel2 = new javax.swing.JLabel();

setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
setTitle("Consulta Movimento de Caixa");
setIconImages(null);
setResizable(false);
getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

AssociadosjPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
AssociadosjPanel.setPreferredSize(new java.awt.Dimension(800, 600));
AssociadosjPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

HistoricojTextField.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyReleased(java.awt.event.KeyEvent evt) {
        HistoricojTextFieldKeyReleased(evt);
    }
    });
    AssociadosjPanel.add(HistoricojTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 350, -1));

    ConsultaCaixajTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "No. Lancamento", "Data", "Histórico", "Valor Entrada", "Valor Saída"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    ConsultaCaixajTable.setToolTipText("");
    ConsultaCaixajTable.setAutoscrolls(false);
    ConsultaCaixajTable.getColumnModel().getColumn(0).setPreferredWidth(30);
    ConsultaCaixajTable.getColumnModel().getColumn(1).setPreferredWidth(30);
    ConsultaCaixajTable.getColumnModel().getColumn(2).setPreferredWidth(300);
    ConsultaCaixajTable.getColumnModel().getColumn(3).setPreferredWidth(30);
    ConsultaCaixajTable.getColumnModel().getColumn(4).setPreferredWidth(30);
    ConsultaCaixajTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            ConsultaCaixajTableMouseClicked(evt);
        }
    });
    TabeladeAssociadosScrollPane.setViewportView(ConsultaCaixajTable);
    if (ConsultaCaixajTable.getColumnModel().getColumnCount() > 0) {
        ConsultaCaixajTable.getColumnModel().getColumn(0).setPreferredWidth(20);
        ConsultaCaixajTable.getColumnModel().getColumn(1).setPreferredWidth(20);
        ConsultaCaixajTable.getColumnModel().getColumn(2).setResizable(false);
        ConsultaCaixajTable.getColumnModel().getColumn(2).setPreferredWidth(300);
        ConsultaCaixajTable.getColumnModel().getColumn(3).setPreferredWidth(30);
        ConsultaCaixajTable.getColumnModel().getColumn(4).setPreferredWidth(30);
    }

    AssociadosjPanel.add(TabeladeAssociadosScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 820, 250));

    NomedoAssociadojLabel.setText("Histórico");
    AssociadosjPanel.add(NomedoAssociadojLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));

    BarradeTarefasjToolBar.setFloatable(false);
    BarradeTarefasjToolBar.setRollover(true);

    caixaAdicionarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/dinheiromais.png"))); // NOI18N
    caixaAdicionarjButton.setText("Lançar");
    caixaAdicionarjButton.setToolTipText("Voltar");
    caixaAdicionarjButton.setFocusable(false);
    caixaAdicionarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    caixaAdicionarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
    caixaAdicionarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
    caixaAdicionarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
    caixaAdicionarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    caixaAdicionarjButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            caixaAdicionarjButtonActionPerformed(evt);
        }
    });
    BarradeTarefasjToolBar.add(caixaAdicionarjButton);

    estornojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/dinheiromenos.png"))); // NOI18N
    estornojButton.setText("Estornar");
    estornojButton.setToolTipText("Excluir Lançamento");
    estornojButton.setEnabled(false);
    estornojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    estornojButton.setMaximumSize(new java.awt.Dimension(80, 90));
    estornojButton.setMinimumSize(new java.awt.Dimension(80, 90));
    estornojButton.setPreferredSize(new java.awt.Dimension(80, 90));
    estornojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    estornojButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            estornojButtonActionPerformed(evt);
        }
    });
    BarradeTarefasjToolBar.add(estornojButton);

    caixaPesquisarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
    caixaPesquisarjButton.setText("Pesquisar");
    caixaPesquisarjButton.setToolTipText("Pesquisar Lançamento");
    caixaPesquisarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    caixaPesquisarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
    caixaPesquisarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
    caixaPesquisarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
    caixaPesquisarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    caixaPesquisarjButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            caixaPesquisarjButtonActionPerformed(evt);
        }
    });
    BarradeTarefasjToolBar.add(caixaPesquisarjButton);
    BarradeTarefasjToolBar.add(SeparadordeTarefasjSeparator);

    caixaImprimirjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/impressao.png"))); // NOI18N
    caixaImprimirjButton.setText("Imprimir");
    caixaImprimirjButton.setToolTipText("Imprimir");
    caixaImprimirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    caixaImprimirjButton.setMaximumSize(new java.awt.Dimension(80, 90));
    caixaImprimirjButton.setMinimumSize(new java.awt.Dimension(80, 90));
    caixaImprimirjButton.setPreferredSize(new java.awt.Dimension(80, 90));
    caixaImprimirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    caixaImprimirjButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            caixaImprimirjButtonActionPerformed(evt);
        }
    });
    BarradeTarefasjToolBar.add(caixaImprimirjButton);

    caixaVisualizarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/visualizar.png"))); // NOI18N
    caixaVisualizarjButton.setText("Visualizar");
    caixaVisualizarjButton.setToolTipText("Visualizar Lançamento");
    caixaVisualizarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    caixaVisualizarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
    caixaVisualizarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
    caixaVisualizarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
    caixaVisualizarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    caixaVisualizarjButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            caixaVisualizarjButtonActionPerformed(evt);
        }
    });
    BarradeTarefasjToolBar.add(caixaVisualizarjButton);

    caixaVisualizarjButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/logoExcel.png"))); // NOI18N
    caixaVisualizarjButton1.setText("Excel");
    caixaVisualizarjButton1.setToolTipText("Exportar para Excel");
    caixaVisualizarjButton1.setFocusable(false);
    caixaVisualizarjButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    caixaVisualizarjButton1.setMaximumSize(new java.awt.Dimension(80, 90));
    caixaVisualizarjButton1.setMinimumSize(new java.awt.Dimension(80, 90));
    caixaVisualizarjButton1.setPreferredSize(new java.awt.Dimension(80, 90));
    caixaVisualizarjButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    caixaVisualizarjButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            caixaVisualizarjButton1ActionPerformed(evt);
        }
    });
    BarradeTarefasjToolBar.add(caixaVisualizarjButton1);

    caixaRelatoriojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/relatorio.png"))); // NOI18N
    caixaRelatoriojButton.setText("Relatórios");
    caixaRelatoriojButton.setToolTipText("Relatórios");
    caixaRelatoriojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    caixaRelatoriojButton.setMaximumSize(new java.awt.Dimension(80, 90));
    caixaRelatoriojButton.setMinimumSize(new java.awt.Dimension(80, 90));
    caixaRelatoriojButton.setPreferredSize(new java.awt.Dimension(80, 90));
    caixaRelatoriojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    caixaRelatoriojButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            caixaRelatoriojButtonActionPerformed(evt);
        }
    });
    BarradeTarefasjToolBar.add(caixaRelatoriojButton);

    caixaVoltarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/voltar.png"))); // NOI18N
    caixaVoltarjButton.setText("Voltar");
    caixaVoltarjButton.setToolTipText("Voltar");
    caixaVoltarjButton.setFocusable(false);
    caixaVoltarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    caixaVoltarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
    caixaVoltarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
    caixaVoltarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
    caixaVoltarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    caixaVoltarjButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            caixaVoltarjButtonActionPerformed(evt);
        }
    });
    BarradeTarefasjToolBar.add(caixaVoltarjButton);

    AssociadosjPanel.add(BarradeTarefasjToolBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, 650, 80));

    datacaixaFinaljDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            datacaixaFinaljDateChooserFocusGained(evt);
        }
    });
    AssociadosjPanel.add(datacaixaFinaljDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 120, -1));

    jLabel1.setText("Data Final");
    AssociadosjPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, -1, -1));

    jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/magnifier.png"))); // NOI18N
    jButton1.setText("Procurar");
    jButton1.setToolTipText("Procurar Lancamento pela data");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });
    AssociadosjPanel.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, -1, -1));

    datacaixaInicialjDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            datacaixaInicialjDateChooserFocusGained(evt);
        }
    });
    AssociadosjPanel.add(datacaixaInicialjDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 120, -1));

    jLabel2.setText("Data Inicial");
    AssociadosjPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

    getContentPane().add(AssociadosjPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 430));

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void caixaVoltarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaVoltarjButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_caixaVoltarjButtonActionPerformed

    private void caixaAdicionarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaAdicionarjButtonActionPerformed
        try {
            try {
                new FrmLancamentoCaixa(this, null, this.config);
            } catch (ParseException ex) {
                Logger.getLogger(FrmConsultaCaixa.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Lançar no Caixa\n" + ex);
        }
    }//GEN-LAST:event_caixaAdicionarjButtonActionPerformed

    private void estornojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estornojButtonActionPerformed
        if (ConsultaCaixajTable.getSelectedRow()>=0){
            int linha = ConsultaCaixajTable.getSelectedRow();
            try {
                caixa = model.getMovimentocaixa(linha);
                MovimentoCaixaFacade facade = new MovimentoCaixaFacade();
                facade.excluirCaixa(caixa);
                setModel(null);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Erro Salvar Estorno \\n " + ex);
            }
        }
    }//GEN-LAST:event_estornojButtonActionPerformed

    private void HistoricojTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HistoricojTextFieldKeyReleased
        try {
            MovimentoCaixaFacade facade = new MovimentoCaixaFacade();
            List<Movimentocaixa> listaCaixa = facade.conusltarMovimentoCaixas(HistoricojTextField.getText(), Formatacao.ConvercaoDataSql(datacaixaFinaljDateChooser.getDate()));
            model = new ConsultaMovimentoCaixaTableModel(listaCaixa);
            ConsultaCaixajTable.setModel(model);
        } catch (Exception ex) {
            Logger.getLogger(FrmConsultaCaixa.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_HistoricojTextFieldKeyReleased

    private void caixaPesquisarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaPesquisarjButtonActionPerformed
    }//GEN-LAST:event_caixaPesquisarjButtonActionPerformed

    private void caixaVisualizarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaVisualizarjButtonActionPerformed
        try {
            if (ConsultaCaixajTable.getSelectedRow()>=0){
                caixa = model.getMovimentocaixa(ConsultaCaixajTable.getSelectedRow());
                try {
                    new FrmLancamentoCaixa(this, caixa, this.config);
                } catch (ParseException ex) {
                    Logger.getLogger(FrmConsultaCaixa.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmConsultaCaixa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_caixaVisualizarjButtonActionPerformed

    private void caixaImprimirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaImprimirjButtonActionPerformed
    }//GEN-LAST:event_caixaImprimirjButtonActionPerformed

    private void ConsultaCaixajTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConsultaCaixajTableMouseClicked
       if (evt.getClickCount()>0){
           estornojButton.setEnabled(true);
       }
    }//GEN-LAST:event_ConsultaCaixajTableMouseClicked

    private void caixaRelatoriojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaRelatoriojButtonActionPerformed
       new FrmRelatorioData(this);
    }//GEN-LAST:event_caixaRelatoriojButtonActionPerformed

    private void datacaixaFinaljDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_datacaixaFinaljDateChooserFocusGained
        
}//GEN-LAST:event_datacaixaFinaljDateChooserFocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (datacaixaFinaljDateChooser.getDate()!=null){
            setModel(null);
        }else {
            JOptionPane.showMessageDialog(null, "Verificar campo Data");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void caixaVisualizarjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaVisualizarjButton1ActionPerformed
        new FrmSalvarAquivo(this);
    }//GEN-LAST:event_caixaVisualizarjButton1ActionPerformed

    private void datacaixaInicialjDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_datacaixaInicialjDateChooserFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_datacaixaInicialjDateChooserFocusGained

    /**
    * @param args the command line arguments
    */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AssociadosjPanel;
    private javax.swing.JToolBar BarradeTarefasjToolBar;
    private javax.swing.JTable ConsultaCaixajTable;
    private javax.swing.JTextField HistoricojTextField;
    private javax.swing.JLabel NomedoAssociadojLabel;
    private javax.swing.JToolBar.Separator SeparadordeTarefasjSeparator;
    private javax.swing.JScrollPane TabeladeAssociadosScrollPane;
    private javax.swing.JButton caixaAdicionarjButton;
    private javax.swing.JButton caixaImprimirjButton;
    private javax.swing.JButton caixaPesquisarjButton;
    private javax.swing.JButton caixaRelatoriojButton;
    private javax.swing.JButton caixaVisualizarjButton;
    private javax.swing.JButton caixaVisualizarjButton1;
    private javax.swing.JButton caixaVoltarjButton;
    private com.toedter.calendar.JDateChooser datacaixaFinaljDateChooser;
    private com.toedter.calendar.JDateChooser datacaixaInicialjDateChooser;
    private javax.swing.JButton estornojButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    public void setModel(List listaModel) {
        MovimentoCaixaFacade facade = new MovimentoCaixaFacade();
        try {
            List<Movimentocaixa> listaCaixa;
            if (listaModel==null){
                listaCaixa = facade.consutlarMovimentoCaixa(Formatacao.ConvercaoDataSql(datacaixaFinaljDateChooser.getDate()));
            }else listaCaixa = listaModel;
            model = new ConsultaMovimentoCaixaTableModel(listaCaixa);
       } catch (Exception ex) {
           ex.printStackTrace();
           model = new ConsultaMovimentoCaixaTableModel(new ArrayList<Movimentocaixa>());
       }
        ConsultaCaixajTable.setModel(model);
        ConsultaCaixajTable.setDefaultRenderer(Double.class, renderer);
        ConsultaCaixajTable.getColumnModel().getColumn(0).setPreferredWidth(30);
        ConsultaCaixajTable.getColumnModel().getColumn(1).setPreferredWidth(20);
        ConsultaCaixajTable.getColumnModel().getColumn(2).setPreferredWidth(300);
        ConsultaCaixajTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        ConsultaCaixajTable.getColumnModel().getColumn(4).setPreferredWidth(50);
    }

    public void imprimirData(Date dataInicial, Date dataFinal) {
        gerarSaldos(dataInicial, dataFinal);
        if (listaSaldo.size()>0){
            Double valorEntrada = listaSaldo.get(0);
            Double valorSaida = listaSaldo.get(1);
            Double saldoAnterior = listaSaldo.get(2) - listaSaldo.get(3);
            Double saldoAtual = valorEntrada + saldoAnterior -(valorSaida);
            String url = ("telas/movimentoCaixa/movimentoCaixa.jasper");
            Map parameters = new HashMap();
            try {
                parameters.put("idEmpresa", this.config.getEmpresa().getIdempresa());
                parameters.put("dataInicial", dataInicial);
                parameters.put("dataFinal", dataFinal);
                parameters.put("saldoAnterior", saldoAnterior);
                parameters.put("valorEntrada", valorEntrada);
                parameters.put("valorSaida", valorSaida);
                parameters.put("saldoAtual", saldoAtual);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Não foi possível gerar o relatório " + ex);
                ex.printStackTrace();
            }
            new relatoriosJasper(url, parameters);
        }
    }
    
    private  void gerarSaldos(Date dataInicial, Date dataFinal) {
        MovimentoCaixaFacade facade = new MovimentoCaixaFacade();
        DateFormat df = new SimpleDateFormat("yyyy/MM/dd");
        try {
            listaSaldo = facade.calculaSaldosRelatorio(df.format(dataInicial), df.format(dataFinal));
        } catch (SQLException ex) {
            Logger.getLogger(FrmConsultaCaixa.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro calcular saldos Relatório " + ex);
        }
    }
    
    
    public void exportarExcel(String caminho, String nomeArquivo) {
        Sigap utilitario = new Sigap();
        ConfiguracaoSistema configura = new ConfiguracaoSistema();
        configura = (ConfiguracaoSistema) utilitario.deserializarConfiguracao();
        String banco = configura.getBdNome();
        String local = configura.getBdlocal();
        String senha = configura.getBdSenha();
        String usuario = configura.getBdusuario();
        String porta = configura.getBdporta();
        MovimentoCaixaFacade movimentoCaixaFacade = new MovimentoCaixaFacade();
        try {
            movimentoCaixaFacade.ExportarExcel(nomeArquivo, local, porta, senha, banco, usuario, caminho,
                    Formatacao.ConvercaoDataSql(datacaixaInicialjDateChooser.getDate()), Formatacao.ConvercaoDataSql(datacaixaFinaljDateChooser.getDate()));
        } catch (IOException ex) {
            Logger.getLogger(FrmConsultaCaixa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}

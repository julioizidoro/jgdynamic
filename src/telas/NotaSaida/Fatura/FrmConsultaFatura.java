/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package telas.NotaSaida.Fatura;

import Regras.ContasReceberController;
import controler.Config;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import model.Cliente;
import model.Contasreceber;
import model.Faturasreceber;
import telas.NotaSaida.INotaSaidaBean;

/**
 *
 * @author Wolverine
 */
public class FrmConsultaFatura extends javax.swing.JFrame {
    
    private List<FaturaBean> listaFaturas;
    private List<DuplicataBean> listaDuplicata;
    private FaturaTableModel modelFatura;
    private DuplicataTableModel modelDuplicata;
    private Cliente cliente;
    private Config config;
    private INotaSaidaBean telaNotaSaida;
    private FaturaBean faturaBean;

    /**
     * Creates new form FrmConsultaFatura
     */
    public FrmConsultaFatura(Cliente cliente, Config config, INotaSaidaBean telaNotaSaida) {
        this.telaNotaSaida = telaNotaSaida;
        this.config = config;
        this.cliente = cliente;
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo_mini.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        carregarFaturas();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        faturajTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        duplicatajTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consultar Faturas");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        faturajTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nº Fatura", "Valor Original", "Valor Desconto", "Valor Líquido"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        faturajTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                faturajTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(faturajTable);
        faturajTable.getColumnModel().getColumn(0).setResizable(false);
        faturajTable.getColumnModel().getColumn(1).setResizable(false);
        faturajTable.getColumnModel().getColumn(2).setResizable(false);
        faturajTable.getColumnModel().getColumn(3).setResizable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        duplicatajTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nº Duplicata", "Data Vencimento", "Valor Duplicata"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(duplicatajTable);
        duplicatajTable.getColumnModel().getColumn(0).setResizable(false);
        duplicatajTable.getColumnModel().getColumn(1).setResizable(false);
        duplicatajTable.getColumnModel().getColumn(2).setResizable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/door_in.png"))); // NOI18N
        jButton1.setText("Fechar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tick.png"))); // NOI18N
        jButton2.setText("Adicionar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(23, 23, 23))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(189, 189, 189))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void faturajTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_faturajTableMouseClicked
        int linha = faturajTable.getSelectedRow();
        if (linha>=0){
            faturaBean = listaFaturas.get(linha);
            carregarDuplicatas(listaFaturas.get(linha).getIdFatura());
        }
    }//GEN-LAST:event_faturajTableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (faturaBean!=null){
            if (listaDuplicata!=null){
                telaNotaSaida.carregarFaturas(faturaBean, listaDuplicata);
                this.dispose();
            }else JOptionPane.showMessageDialog(rootPane, "Lista Duplicatas Zerada");
        }else JOptionPane.showMessageDialog(rootPane, "Fatura não Selecionada");
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable duplicatajTable;
    private javax.swing.JTable faturajTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables

    public void carregarFaturas(){
        String sqlFatura = "select f from Faturasreceber f where f.contasreceberpagamento=1 and f.cliente=" + cliente.getIdcliente() + " order by f.dataVencimento";
        ContasReceberController contasReceberController = new ContasReceberController();
        List<Faturasreceber> listaFaturasReceber = contasReceberController.listarFaturas(sqlFatura);
        listaFaturas = new ArrayList<FaturaBean>();
        if (listaFaturasReceber!=null){
            for(int i=0;i<listaFaturasReceber.size();i++){
                FaturaBean fatura = new FaturaBean();
                fatura.setNumero(listaFaturasReceber.get(i).getNumeroFatura());
                Double valor = listaFaturasReceber.get(i).getValorDesconto();
                fatura.setValorDesconto(valor.floatValue());
                valor = listaFaturasReceber.get(i).getValorFatura();
                fatura.setValorOrigianl(valor.floatValue());
                valor = listaFaturasReceber.get(i).getValorFatura() - listaFaturasReceber.get(i).getValorDesconto();
                fatura.setValorLiquido(valor.floatValue());
                fatura.setIdFatura(listaFaturasReceber.get(i).getIdFaturasReceber());
                listaFaturas.add(fatura);
            }
        }
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.RIGHT);
        modelFatura = new FaturaTableModel(listaFaturas);
        faturajTable.setModel(modelFatura);
        faturajTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        faturajTable.getColumnModel().getColumn(1).setCellRenderer(renderer);
        faturajTable.getColumnModel().getColumn(1).setPreferredWidth(50);
        faturajTable.getColumnModel().getColumn(2).setCellRenderer(renderer);
        faturajTable.getColumnModel().getColumn(2).setPreferredWidth(50);
        faturajTable.getColumnModel().getColumn(3).setCellRenderer(renderer);
        faturajTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        faturajTable.repaint();
    }
    
    public void carregarDuplicatas(int idFatura){
        String sqlDuplicata = "select c from Contasreceber c where c.contasreceberpagamento=1  and c.cliente.idcliente=" + cliente.getIdcliente() + " and c.numeroFatura=" + idFatura +  " order by c.numeroDocumento";
        ContasReceberController contasReceberController = new ContasReceberController();
        List<Contasreceber> listaParcelas = contasReceberController.listarContas(sqlDuplicata);
        listaDuplicata = new ArrayList<DuplicataBean>();
        if (listaParcelas!=null){
            for(int i=0;i<listaParcelas.size();i++){
                DuplicataBean duplicata = new  DuplicataBean();
                duplicata.setDataVencimento(listaParcelas.get(i).getDataVencimento());
                duplicata.setNumero(listaParcelas.get(i).getNumeroDocumento());
                Double valor = listaParcelas.get(i).getValorConta();
                duplicata.setValor(valor.floatValue());
                listaDuplicata.add(duplicata);
            }
        }
        modelDuplicata = new DuplicataTableModel(listaDuplicata);
        duplicatajTable.setModel(modelDuplicata);
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.RIGHT);
        duplicatajTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        duplicatajTable.getColumnModel().getColumn(1).setPreferredWidth(50);
        duplicatajTable.getColumnModel().getColumn(2).setCellRenderer(renderer);
        duplicatajTable.getColumnModel().getColumn(2).setPreferredWidth(50);
        duplicatajTable.repaint();
    }

}

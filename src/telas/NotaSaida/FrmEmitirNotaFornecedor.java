/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package telas.NotaSaida;

import Regras.AliquotaController;
import Regras.CodigoFiscalController;
import Regras.EntradaProdutoController;
import Regras.EstoqueController;
import Regras.Formatacao;
import Regras.FornecedorController;
import Regras.CestController;
import Regras.MunicipiosController;
import Regras.NotaSaidaController;
import Regras.ParametroLocalController;
import Regras.ProdutoController;
import com.toedter.calendar.JTextFieldDateEditor;
import controler.Config;
import controler.UsuarioLogado;
import facade.TerminalVendasFacade;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import model.Aliquota;
import model.Cliente;
import model.Codigofiscal;
import model.Docentrada;
import model.Estoque;
import model.Fornecedor;
import model.Ibpt;
import model.Municipios;
import model.Nfentrada;
import model.Notasaida;
import model.ParametrosLocal;
import model.Produto;
import model.Terminalcliente;
import model.Terminalproduto;
import telas.ContasReceber.CreditoBean;
import telas.Entrada.FrmConsultaEntrada;
import telas.Fornecedor.FrmConsultaFornecedor;
import telas.Municipios.FrmConsultaMunicipios;
import telas.NotaSaida.Fatura.DuplicataBean;
import telas.NotaSaida.Fatura.DuplicataTableModel;
import telas.NotaSaida.Fatura.FaturaBean;

/**
 *
 * @author wolverine
 */
public class FrmEmitirNotaFornecedor extends javax.swing.JFrame implements INotaSaidaBean{

    private String datePattern;
    private String maskPattern;
    private char placeHolder;
    private NotaSaidaBean notaSaidaBean;
    private List<NotaSaidaProdutoBean> listaProdutoBean;
    private Config config;
    private ListaProdutoSaidaBeanTableModel modelProduto;
    private UsuarioLogado usuarioLogado;
    private FileWriter arquivo;
    private String caminhoXML;
    private File arquivoXML;
    private boolean notaCarregarda;
    private String chaveAutorizacao;
    private ParametrosLocal parametrosLocal;
    private DuplicataTableModel modelDuplicata;
    private INotaSaidaBean telaConsulta;
    private String numeroECFVenda;
    private int numeroNFE;
   

    /**
     * Creates new form FrmEmitirNotaSaida
     */
    public FrmEmitirNotaFornecedor(Config config, UsuarioLogado usuarioLogado, INotaSaidaBean telaConsulta) {
        notaSaidaBean = new NotaSaidaBean();
        this.telaConsulta = telaConsulta;
        this.notaCarregarda = false;
        notaSaidaBean.setNumeroOrdemECF("0");
        this.usuarioLogado = usuarioLogado;
        listaProdutoBean = new ArrayList<NotaSaidaProdutoBean>();
        datePattern = "dd/MM/yyyy";
        maskPattern = "##/##/##";
        placeHolder = '_';
        this.config = config;
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo_mini.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        carregarComboBoxCFOP();
        gerarNumeroNFe();
        ParametroLocalController parametroLocalController = new ParametroLocalController();
        parametrosLocal = parametroLocalController.localizarEmpresa(this.config.getEmpresa().getIdparametros());
        dataEmissaojDateChooser.setDate(new Date());
        seriejTextField.setText(String.valueOf(config.getEmpresa().getSerieNFe()));
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comSTjComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        semSTjComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        tipoNFejComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        numeroNFejTextField = new javax.swing.JTextField();
        seriejTextField = new javax.swing.JTextField();
        naturezaOperacaojTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dataEmissaojDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
            maskPattern, placeHolder));
    jLabel7 = new javax.swing.JLabel();
    jLabel8 = new javax.swing.JLabel();
    totalProdutojTextField = new javax.swing.JTextField();
    jLabel9 = new javax.swing.JLabel();
    totalNotajTextField = new javax.swing.JTextField();
    jButton1 = new javax.swing.JButton();
    jLabel23 = new javax.swing.JLabel();
    jPanel4 = new javax.swing.JPanel();
    gerarjButton = new javax.swing.JButton();
    valorDescontojTextField = new javax.swing.JTextField();
    jLabel16 = new javax.swing.JLabel();
    jLabel17 = new javax.swing.JLabel();
    valorTributosjTextField = new javax.swing.JTextField();
    tipoOperacaojComboBox = new javax.swing.JComboBox();
    jLabel22 = new javax.swing.JLabel();
    jScrollPane2 = new javax.swing.JScrollPane();
    infojTextArea = new javax.swing.JTextArea();
    jLabel31 = new javax.swing.JLabel();
    valorDescontoCalculadojTextField = new javax.swing.JTextField();
    jButton16 = new javax.swing.JButton();
    jLabel43 = new javax.swing.JLabel();
    despAcessoriasjTextField = new javax.swing.JTextField();
    jPanel2 = new javax.swing.JPanel();
    jLabel10 = new javax.swing.JLabel();
    nomejTextField = new javax.swing.JTextField();
    jLabel11 = new javax.swing.JLabel();
    cpfjFormattedTextField = new javax.swing.JFormattedTextField();
    rgjTextField = new javax.swing.JTextField();
    jLabel12 = new javax.swing.JLabel();
    foneFixojFormattedTextField = new javax.swing.JFormattedTextField();
    jLabel13 = new javax.swing.JLabel();
    emailjTextField = new javax.swing.JTextField();
    jLabel15 = new javax.swing.JLabel();
    complementojTextField = new javax.swing.JTextField();
    jLabel24 = new javax.swing.JLabel();
    numerojTextField = new javax.swing.JTextField();
    jLabel25 = new javax.swing.JLabel();
    jLabel26 = new javax.swing.JLabel();
    logradourojTextFiel = new javax.swing.JTextField();
    cidadejTextField = new javax.swing.JTextField();
    jLabel27 = new javax.swing.JLabel();
    cepjFormattedTextField = new javax.swing.JFormattedTextField();
    jLabel28 = new javax.swing.JLabel();
    bairrojTextField = new javax.swing.JTextField();
    jLabel29 = new javax.swing.JLabel();
    jLabel30 = new javax.swing.JLabel();
    jButton7 = new javax.swing.JButton();
    contribuintejComboBox = new javax.swing.JComboBox();
    estadojTextField = new javax.swing.JTextField();
    jButton6 = new javax.swing.JButton();
    jPanel3 = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    produtojTable = new javax.swing.JTable();
    jButton3 = new javax.swing.JButton();
    jButton4 = new javax.swing.JButton();
    jButton5 = new javax.swing.JButton();
    jButton8 = new javax.swing.JButton();
    jButton9 = new javax.swing.JButton();
    jButton10 = new javax.swing.JButton();
    jPanel5 = new javax.swing.JPanel();
    jLabel14 = new javax.swing.JLabel();
    formaPagamentojComboBox = new javax.swing.JComboBox();
    jPanel6 = new javax.swing.JPanel();
    jLabel18 = new javax.swing.JLabel();
    numeroFaturajTextField = new javax.swing.JTextField();
    jLabel19 = new javax.swing.JLabel();
    valorOriginalFaturajTextField = new javax.swing.JTextField();
    jLabel20 = new javax.swing.JLabel();
    valorDescontoFaturajTextField = new javax.swing.JTextField();
    jLabel21 = new javax.swing.JLabel();
    valorLiquidoFaturajTextField = new javax.swing.JTextField();
    jPanel10 = new javax.swing.JPanel();
    jScrollPane3 = new javax.swing.JScrollPane();
    duplicatajTable1 = new javax.swing.JTable();
    jPanel11 = new javax.swing.JPanel();
    jScrollPane4 = new javax.swing.JScrollPane();
    duplicatajTable = new javax.swing.JTable();
    jPanel12 = new javax.swing.JPanel();
    jLabel36 = new javax.swing.JLabel();
    numeroDuplicatajTextField = new javax.swing.JTextField();
    jLabel37 = new javax.swing.JLabel();
    dataVencimentoDuplicatajDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
        maskPattern, placeHolder));
jLabel38 = new javax.swing.JLabel();
valorDuplicatajTextField = new javax.swing.JTextField();
jButton14 = new javax.swing.JButton();
jButton15 = new javax.swing.JButton();
jPanel8 = new javax.swing.JPanel();
jPanel9 = new javax.swing.JPanel();
jLabel32 = new javax.swing.JLabel();
chaveACessojTextField = new javax.swing.JTextField();
jLabel33 = new javax.swing.JLabel();
codigoUFjTextField = new javax.swing.JTextField();
mesanojTextField = new javax.swing.JTextField();
jLabel34 = new javax.swing.JLabel();
jLabel35 = new javax.swing.JLabel();
cnpjreferenciajTextField = new javax.swing.JTextField();
jLabel40 = new javax.swing.JLabel();
sereireferenciajTextField = new javax.swing.JTextField();
numeroNFereferenciajTextField = new javax.swing.JTextField();
jLabel41 = new javax.swing.JLabel();
jLabel39 = new javax.swing.JLabel();
modeloreferenciajTextField = new javax.swing.JTextField();
jButton2 = new javax.swing.JButton();
jPanel13 = new javax.swing.JPanel();
jLabel44 = new javax.swing.JLabel();
nomeTransportadorajTextField = new javax.swing.JTextField();
modalidadefretejComboBox = new javax.swing.JComboBox();
jLabel45 = new javax.swing.JLabel();
jLabel46 = new javax.swing.JLabel();
cnpjtransportadorajTextField = new javax.swing.JTextField();
ietransportadorajTextField = new javax.swing.JTextField();
jLabel47 = new javax.swing.JLabel();
uftransportadorajTextField = new javax.swing.JTextField();
jLabel48 = new javax.swing.JLabel();
jLabel49 = new javax.swing.JLabel();
enderecotransportadorajTextField = new javax.swing.JTextField();
jLabel50 = new javax.swing.JLabel();
ciadetransportadorajTextField = new javax.swing.JTextField();
jLabel51 = new javax.swing.JLabel();
nvolumesjTextField = new javax.swing.JTextField();
evolumesjTextField = new javax.swing.JTextField();
jLabel52 = new javax.swing.JLabel();
pesobrutojTextField = new javax.swing.JTextField();
jLabel53 = new javax.swing.JLabel();
pesoliquidojTextField = new javax.swing.JTextField();
jLabel54 = new javax.swing.JLabel();
jLabel55 = new javax.swing.JLabel();
jLabel56 = new javax.swing.JLabel();
jLabel57 = new javax.swing.JLabel();

javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
jPanel7.setLayout(jPanel7Layout);
jPanel7Layout.setHorizontalGroup(
    jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGap(0, 100, Short.MAX_VALUE)
    );
    jPanel7Layout.setVerticalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 100, Short.MAX_VALUE)
    );

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Emitir NF-e");

    jLabel1.setText("CFOP com ST");

    jLabel2.setText("CFOP sem ST");

    jLabel3.setText("Tipo de NF-e");

    tipoNFejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Saida", "Entrada" }));

    jLabel4.setText("No. da NF-e");

    jLabel5.setText("Série");

    numeroNFejTextField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            numeroNFejTextFieldFocusLost(evt);
        }
    });

    seriejTextField.setEditable(false);

    naturezaOperacaojTextField.setText("Devolução de Mercadorias");

    jLabel6.setText("Natureza da Operação");

    dataEmissaojDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dataEmissaojDateChooserFocusGained(evt);
        }
    });

    jLabel7.setText("Data Emissão");

    jLabel8.setText("Total Produtos");

    totalProdutojTextField.setEditable(false);
    totalProdutojTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    totalProdutojTextField.setText("0");

    jLabel9.setText("Total da Nota");

    totalNotajTextField.setEditable(false);
    totalNotajTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    totalNotajTextField.setText("0");

    jButton1.setText("Calcular");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    jLabel23.setText("Informações Adcionais");

    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    gerarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tick.png"))); // NOI18N
    gerarjButton.setText("Gerar NF-e");
    gerarjButton.setToolTipText("Gerar NF-e");
    gerarjButton.setEnabled(false);
    gerarjButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            gerarjButtonActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addGap(356, 356, 356)
            .addComponent(gerarjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(376, Short.MAX_VALUE))
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(gerarjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    valorDescontojTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    valorDescontojTextField.setText("0");

    jLabel16.setText("Valor Desconto");

    jLabel17.setText("Valor Tributos");

    valorTributosjTextField.setEditable(false);
    valorTributosjTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    valorTributosjTextField.setText("0");

    tipoOperacaojComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Venda", "Devolução", "Remessa", "Compra", "Transferencia", "Importação", "Consignação" }));
    tipoOperacaojComboBox.setSelectedIndex(1);
    tipoOperacaojComboBox.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            tipoOperacaojComboBoxItemStateChanged(evt);
        }
    });

    jLabel22.setText("Tipo de Operação");

    infojTextArea.setColumns(1);
    infojTextArea.setRows(6);
    jScrollPane2.setViewportView(infojTextArea);

    jLabel31.setText("Calculado Desc");

    valorDescontoCalculadojTextField.setEditable(false);
    valorDescontoCalculadojTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    valorDescontoCalculadojTextField.setText("0");

    jButton16.setText("Somar Valores");
    jButton16.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton16ActionPerformed(evt);
        }
    });

    jLabel43.setText("Desp Acessorias");

    despAcessoriasjTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    despAcessoriasjTextField.setText("0");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jScrollPane2)
                    .addContainerGap())
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(semSTjComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comSTjComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tipoNFejComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(numeroNFejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(23, 23, 23)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(seriejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(naturezaOperacaojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel23)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(dataEmissaojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(totalProdutojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel43)
                                .addComponent(despAcessoriasjTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(17, 17, 17)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(valorDescontojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tipoOperacaojComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel22)
                                        .addGap(184, 184, 184)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(valorDescontoCalculadojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(valorTributosjTextField)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(totalNotajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel9))
                                            .addGap(133, 133, 133)))))))
                    .addGap(0, 8, Short.MAX_VALUE))))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(comSTjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(semSTjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3)
                .addComponent(jLabel22))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tipoNFejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(tipoOperacaojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(numeroNFejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(seriejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(naturezaOperacaojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(totalProdutojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(23, 23, 23)
                                    .addComponent(dataEmissaojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addComponent(valorTributosjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(totalNotajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton1)))))))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(64, 64, 64)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel43)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(despAcessoriasjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel16)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(valorDescontojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel31)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(valorDescontoCalculadojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jButton16)
                .addComponent(jLabel23))
            .addGap(5, 5, 5)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(31, 31, 31))
    );

    jTabbedPane1.addTab("Dados da NF-e", jPanel1);

    jLabel10.setText("Nome");

    nomejTextField.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            nomejTextFieldActionPerformed(evt);
        }
    });

    jLabel11.setText("Nº CNPJ");

    cpfjFormattedTextField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            cpfjFormattedTextFieldFocusLost(evt);
        }
    });

    jLabel12.setText("Inscrição Estadual");

    jLabel13.setText("Fone Fixo");

    jLabel15.setText("E-mail");

    jLabel24.setText("Logradouro");

    jLabel25.setText("Número");

    jLabel26.setText("Complemento");

    cidadejTextField.setEditable(false);
    cidadejTextField.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cidadejTextFieldActionPerformed(evt);
        }
    });

    jLabel27.setText("Cidade");

    jLabel28.setText("CEP");

    jLabel29.setText("Bairro");

    jLabel30.setText("Estado");

    jButton7.setText("Consultar Fornecedor");
    jButton7.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton7ActionPerformed(evt);
        }
    });

    contribuintejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1 - Contribuinto do ICMS", "2 - Contribuinte isento de IE", "9 - Não Contribuinto do ICMS" }));

    estadojTextField.setEditable(false);

    jButton6.setText("Pesquisar");
    jButton6.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton6ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(logradourojTextFiel, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel24))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel25)
                        .addComponent(numerojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(complementojTextField)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel26)
                            .addGap(0, 0, Short.MAX_VALUE))))
                .addComponent(nomejTextField)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel29)
                        .addComponent(bairrojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(27, 27, 27)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel28)
                        .addComponent(cepjFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(13, 13, 13)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(cidadejTextField)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton6)
                            .addGap(30, 30, 30))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel27)
                            .addGap(18, 18, 18)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(estadojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton7))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel11)
                        .addComponent(cpfjFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(rgjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12))
                    .addGap(9, 9, 9)
                    .addComponent(contribuintejComboBox, 0, 284, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(foneFixojFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel15)
                        .addComponent(emailjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jLabel10)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel10)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(nomejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(12, 12, 12)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(jLabel12))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cpfjFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rgjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(contribuintejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24)
                        .addComponent(jLabel25)
                        .addComponent(jLabel26))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(complementojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(numerojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(logradourojTextFiel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel29)
                        .addComponent(jLabel28)
                        .addComponent(jLabel27)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bairrojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cepjFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cidadejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(estadojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton6))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jButton7))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(jLabel15))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(foneFixojFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(emailjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addContainerGap(281, Short.MAX_VALUE))
    );

    jTabbedPane1.addTab("Fornecedor", jPanel2);

    produtojTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null}
        },
        new String [] {
            "Código", "Descrição", "Unidade", "NCM", "Quantidade", "Valor Unitario", "Valor Total"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    produtojTable.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            produtojTableKeyPressed(evt);
        }
    });
    jScrollPane1.setViewportView(produtojTable);
    if (produtojTable.getColumnModel().getColumnCount() > 0) {
        produtojTable.getColumnModel().getColumn(0).setResizable(false);
        produtojTable.getColumnModel().getColumn(1).setResizable(false);
        produtojTable.getColumnModel().getColumn(2).setResizable(false);
        produtojTable.getColumnModel().getColumn(3).setResizable(false);
        produtojTable.getColumnModel().getColumn(4).setResizable(false);
        produtojTable.getColumnModel().getColumn(5).setResizable(false);
        produtojTable.getColumnModel().getColumn(6).setResizable(false);
    }

    jButton3.setText("Incluir Produtos Venda");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });

    jButton4.setText("Excluir Produtos");
    jButton4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton4ActionPerformed(evt);
        }
    });

    jButton5.setText("Alterar NCM");
    jButton5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton5ActionPerformed(evt);
        }
    });

    jButton8.setText("Alterar Valor");
    jButton8.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton8ActionPerformed(evt);
        }
    });

    jButton9.setText("Alterar Valor Outras");
    jButton9.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton9ActionPerformed(evt);
        }
    });

    jButton10.setText("Alterar CEST");
    jButton10.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton10ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jButton3)
                    .addGap(18, 18, 18)
                    .addComponent(jButton5)
                    .addGap(33, 33, 33)
                    .addComponent(jButton10)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                    .addComponent(jButton8)
                    .addGap(37, 37, 37)
                    .addComponent(jButton9)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jButton4)
                    .addGap(40, 40, 40))
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(jScrollPane1)
                    .addContainerGap())))
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton5)
                .addComponent(jButton4)
                .addComponent(jButton3)
                .addComponent(jButton8)
                .addComponent(jButton9)
                .addComponent(jButton10))
            .addGap(18, 18, 18))
    );

    jTabbedPane1.addTab("Produtos", jPanel3);

    jLabel14.setText("Forma de Pagamento");

    formaPagamentojComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A VISTA", "A PRAZO", "OUTROS" }));

    jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jLabel18.setText("Nº Fatura");

    jLabel19.setText("Valor Original R$");

    valorOriginalFaturajTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

    jLabel20.setText("Valor Desconto R$");

    valorDescontoFaturajTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

    jLabel21.setText("Valor Líquido");

    valorLiquidoFaturajTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
    jPanel6.setLayout(jPanel6Layout);
    jPanel6Layout.setHorizontalGroup(
        jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel6Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(valorDescontoFaturajTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .addComponent(numeroFaturajTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING))
                .addComponent(jLabel20))
            .addGap(18, 18, 18)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jLabel21)
                .addComponent(jLabel19)
                .addComponent(valorOriginalFaturajTextField)
                .addComponent(valorLiquidoFaturajTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel6Layout.setVerticalGroup(
        jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel6Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel18)
                .addComponent(jLabel19))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(numeroFaturajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(valorOriginalFaturajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel20)
                .addComponent(jLabel21))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(valorDescontoFaturajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(valorLiquidoFaturajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(23, Short.MAX_VALUE))
    );

    jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    duplicatajTable1.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null}
        },
        new String [] {
            "Nº Duplicata", "Data Vencimento", "Valor Duplicata R$"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jScrollPane3.setViewportView(duplicatajTable1);
    if (duplicatajTable1.getColumnModel().getColumnCount() > 0) {
        duplicatajTable1.getColumnModel().getColumn(0).setResizable(false);
        duplicatajTable1.getColumnModel().getColumn(1).setResizable(false);
        duplicatajTable1.getColumnModel().getColumn(2).setResizable(false);
    }

    javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
    jPanel10.setLayout(jPanel10Layout);
    jPanel10Layout.setHorizontalGroup(
        jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel10Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanel10Layout.setVerticalGroup(
        jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel10Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    duplicatajTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null}
        },
        new String [] {
            "Nº Duplicata", "Data Vencimento", "Valor Duplicata R$"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jScrollPane4.setViewportView(duplicatajTable);
    if (duplicatajTable.getColumnModel().getColumnCount() > 0) {
        duplicatajTable.getColumnModel().getColumn(0).setResizable(false);
        duplicatajTable.getColumnModel().getColumn(1).setResizable(false);
        duplicatajTable.getColumnModel().getColumn(2).setResizable(false);
    }

    javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
    jPanel11.setLayout(jPanel11Layout);
    jPanel11Layout.setHorizontalGroup(
        jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel11Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanel11Layout.setVerticalGroup(
        jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel11Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addContainerGap())
    );

    jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jLabel36.setText("Nº Duplicata");

    jLabel37.setText("Data Vencimento");

    dataVencimentoDuplicatajDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dataVencimentoDuplicatajDateChooserFocusGained(evt);
        }
    });

    jLabel38.setText("Valor Duplicata R$");

    valorDuplicatajTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

    jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tick.png"))); // NOI18N
    jButton14.setText("Incluir");
    jButton14.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton14ActionPerformed(evt);
        }
    });

    jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cross.png"))); // NOI18N
    jButton15.setText("Excluir");
    jButton15.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton15ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
    jPanel12.setLayout(jPanel12Layout);
    jPanel12Layout.setHorizontalGroup(
        jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel12Layout.createSequentialGroup()
            .addGap(19, 19, 19)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel36)
                .addComponent(numeroDuplicatajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(22, 22, 22)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel37)
                .addComponent(dataVencimentoDuplicatajDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(32, 32, 32)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(valorDuplicatajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
            .addContainerGap())
    );
    jPanel12Layout.setVerticalGroup(
        jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel12Layout.createSequentialGroup()
            .addGap(25, 25, 25)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel36)
                .addComponent(jLabel37)
                .addComponent(jLabel38))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(numeroDuplicatajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(dataVencimentoDuplicatajDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valorDuplicatajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton15)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(jPanel12Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jButton14)
            .addGap(0, 0, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
    jPanel5.setLayout(jPanel5Layout);
    jPanel5Layout.setHorizontalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel5Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(1094, 1094, 1094)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jLabel14)
                .addComponent(formaPagamentojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel5Layout.setVerticalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel5Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel14)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(formaPagamentojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGap(92, 92, 92)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 110, Short.MAX_VALUE)))
            .addContainerGap())
    );

    jTabbedPane1.addTab("Dados de Cobrança", jPanel5);

    jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jLabel32.setText("Cahve de Acesso");

    jLabel33.setText("Código UF");

    jLabel34.setText("AAMM");

    jLabel35.setText("CNPJ");

    jLabel40.setText("Série");

    jLabel41.setText("Número Nota Fiscal");

    jLabel39.setText("Modelo Doc Fiscal");

    jButton2.setText("Buscar NF-e");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
    jPanel9.setLayout(jPanel9Layout);
    jPanel9Layout.setHorizontalGroup(
        jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel9Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jLabel32)
                .addComponent(chaveACessojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel33)
                        .addComponent(codigoUFjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(modeloreferenciajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel39))
                    .addGap(50, 50, 50)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(mesanojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel34)
                        .addComponent(jLabel40)
                        .addComponent(sereireferenciajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel35)
                        .addComponent(cnpjreferenciajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel41)
                        .addComponent(numeroNFereferenciajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
            .addComponent(jButton2)
            .addGap(22, 22, 22))
    );
    jPanel9Layout.setVerticalGroup(
        jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel9Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel32)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(chaveACessojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel33)
                .addComponent(jLabel34)
                .addComponent(jLabel35))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(codigoUFjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(mesanojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cnpjreferenciajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(15, 15, 15)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel40)
                        .addComponent(jLabel41))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sereireferenciajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(numeroNFereferenciajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2)))
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addComponent(jLabel39)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(modeloreferenciajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
    jPanel8.setLayout(jPanel8Layout);
    jPanel8Layout.setHorizontalGroup(
        jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel8Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(294, Short.MAX_VALUE))
    );
    jPanel8Layout.setVerticalGroup(
        jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel8Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(333, Short.MAX_VALUE))
    );

    jTabbedPane1.addTab("Documento Fiscal Referenciado", jPanel8);

    jLabel44.setText("Nome / Razão Social");

    modalidadefretejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0 - Por conta do Emitente", "1 - Por conta do destinatário/remetente", "2 - Por conta de terceiros", "9 - Sem frete" }));

    jLabel45.setText("Frete pro conta");

    jLabel46.setText("CNPJ Transportadora");

    jLabel47.setText("Inscrição Estadual");

    jLabel48.setText("Sigla Estado");

    jLabel49.setText("Endereço Completo");

    jLabel50.setText("Cidade");

    jLabel51.setText("Quantiade Volumes");

    nvolumesjTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    nvolumesjTextField.setText("0");

    evolumesjTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);

    jLabel52.setText("Espécie");

    pesobrutojTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    pesobrutojTextField.setText("0");

    jLabel53.setText("Peso Bruto");

    pesoliquidojTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    pesoliquidojTextField.setText("0");

    jLabel54.setText("Peso Líquido");

    jLabel55.setForeground(new java.awt.Color(0, 51, 255));
    jLabel55.setText(" 1 - Isncrição estadual informar somente números");

    jLabel56.setForeground(new java.awt.Color(0, 51, 255));
    jLabel56.setText("2 - Se for isento de inscricção estadual informar a palavra ISENTO");

    jLabel57.setForeground(new java.awt.Color(0, 51, 255));
    jLabel57.setText("3 - Se possuir inscrição estadual informar a sigla do Estado");

    javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
    jPanel13.setLayout(jPanel13Layout);
    jPanel13Layout.setHorizontalGroup(
        jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel13Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel13Layout.createSequentialGroup()
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel13Layout.createSequentialGroup()
                            .addGap(4, 4, 4)
                            .addComponent(jLabel51))
                        .addComponent(nvolumesjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(27, 27, 27)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(evolumesjTextField)
                        .addGroup(jPanel13Layout.createSequentialGroup()
                            .addComponent(jLabel52)
                            .addGap(0, 67, Short.MAX_VALUE)))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pesobrutojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel53))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel54)
                        .addComponent(pesoliquidojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel13Layout.createSequentialGroup()
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(enderecotransportadorajTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomeTransportadorajTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel44, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel13Layout.createSequentialGroup()
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cnpjtransportadorajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel46))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel47)
                                    .addComponent(ietransportadorajTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))))
                        .addComponent(jLabel49))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel50)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel45)
                            .addComponent(modalidadefretejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(uftransportadorajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel48)
                            .addComponent(ciadetransportadorajTextField))))
                .addComponent(jLabel55)
                .addComponent(jLabel56)
                .addComponent(jLabel57))
            .addContainerGap(344, Short.MAX_VALUE))
    );
    jPanel13Layout.setVerticalGroup(
        jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel13Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel44)
                .addComponent(jLabel45))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(nomeTransportadorajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(modalidadefretejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel46)
                .addComponent(jLabel47)
                .addComponent(jLabel48))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(cnpjtransportadorajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(ietransportadorajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(uftransportadorajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel49)
                .addComponent(jLabel50))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(enderecotransportadorajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(ciadetransportadorajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel51)
                .addComponent(jLabel52)
                .addComponent(jLabel53)
                .addComponent(jLabel54))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(nvolumesjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(evolumesjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(pesobrutojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(pesoliquidojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(44, 44, 44)
            .addComponent(jLabel55)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel56)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel57)
            .addContainerGap(210, Short.MAX_VALUE))
    );

    jTabbedPane1.addTab("Transporte", jPanel13);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 955, Short.MAX_VALUE)
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jTabbedPane1)
            .addContainerGap())
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dataEmissaojDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataEmissaojDateChooserFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_dataEmissaojDateChooserFocusGained

    private void nomejTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomejTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomejTextFieldActionPerformed

    private void cpfjFormattedTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cpfjFormattedTextFieldFocusLost
    }//GEN-LAST:event_cpfjFormattedTextFieldFocusLost

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int linha = produtojTable.getSelectedRow();
        if (linha>=0){
            listaProdutoBean.remove(linha);
            setModelProduto();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       int linha = produtojTable.getSelectedRow();
       if (linha>=0){
           String ncm = "";
           ncm = JOptionPane.showInputDialog("Informe NCM Somente Numeros");
           listaProdutoBean.get(linha).getProduto().setNcm(ncm);
           ProdutoController produtoController = new ProdutoController();
           Produto prod = produtoController.consultarProdutoid(listaProdutoBean.get(linha).getProduto().getIdProduto());
           if (prod!=null){
               prod.setNcm(ncm);
               produtoController.salvarProduto(prod);
           }
           setModelProduto();
       }else{
           JOptionPane.showMessageDialog(rootPane, "Selecione um produto");
       }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        new FrmConsultaFornecedor(this);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void cidadejTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cidadejTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cidadejTextFieldActionPerformed

    private void gerarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerarjButtonActionPerformed
        try {
            apagarArquivoSaidaAcbr();
        } catch (IOException ex) {
            Logger.getLogger(FrmEmitirNotaFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        gerarjButton.setText("Aguarde Gerando NF-e");
        String erro = validarDadosNFe();
        if (erro != null) {
            JOptionPane.showMessageDialog(rootPane, erro);
            gerarjButton.setText("Gerar NF-e");
        } else {
            notaSaidaBean.setDataEmissao((dataEmissaojDateChooser.getDate()));
            notaSaidaBean.setDataSaida((dataEmissaojDateChooser.getDate()));
            notaSaidaBean.setFormaPagamento(formaPagamentojComboBox.getSelectedItem().toString());
            notaSaidaBean.setListaProdutos(listaProdutoBean);
            notaSaidaBean.setNaturezaOperacao(naturezaOperacaojTextField.getText());
            notaSaidaBean.setCodigo(numeroNFejTextField.getText());
            notaSaidaBean.setNuemro(numeroNFejTextField.getText());
            notaSaidaBean.setTipo(tipoNFejComboBox.getSelectedItem().toString());
            notaSaidaBean.setSerie1(seriejTextField.getText());
            notaSaidaBean.setSerie2("");
            if (notaSaidaBean.getFatura() != null) {
                notaSaidaBean.getFatura().setNumero(numeroFaturajTextField.getText());
                notaSaidaBean.getFatura().setValorDesconto(Formatacao.formatarStringfloat(valorDescontoFaturajTextField.getText()));
                notaSaidaBean.getFatura().setValorLiquido(Formatacao.formatarStringfloat(valorLiquidoFaturajTextField.getText()));
                notaSaidaBean.getFatura().setValorOrigianl(Formatacao.formatarStringfloat(valorOriginalFaturajTextField.getText()));
            }
            //calcularTotaisNotaFiscal();
            notaSaidaBean.setInfoTexto("EMPRESA ENQUADRADA NO SIMPLES NACIONAL");
            try {
                gerarArquivoNFe();
//                salvarNumeroNFe();
                String texto = "NFE.CriarEnviarNFeSefaz("
                        + this.config.getCaminhoNFe() + "ctexto.txt,1)";
                gerarArquivoAcbr(texto);
                Timer timer = new Timer();
                timer.schedule(new RemindTask(), 10 * 1000);
            } catch (IOException ex) {
                Logger.getLogger(FrmEmitirNotaFornecedor.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_gerarjButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (verificarCFOP()) {
            try {
                new FrmSelecionarClienteTerminal(this);
            } catch (Exception ex) {
                Logger.getLogger(FrmEmitirNotaFornecedor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (notaSaidaBean.getCodigoMunicipio().equalsIgnoreCase("0")) {
            JOptionPane.showMessageDialog(rootPane, "Erro Código Municipio");
        } else {
            calcularTotaisNotaFiscal();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void dataVencimentoDuplicatajDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataVencimentoDuplicatajDateChooserFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_dataVencimentoDuplicatajDateChooserFocusGained

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        

    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        new FrmConsultaMunicipios(this);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void tipoOperacaojComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tipoOperacaojComboBoxItemStateChanged
        if (tipoOperacaojComboBox.getSelectedItem().toString().equalsIgnoreCase("Venda")){
            naturezaOperacaojTextField.setText("Venda de Mercadorias");
        }else if (tipoOperacaojComboBox.getSelectedItem().toString().equalsIgnoreCase("Devolução")){
            naturezaOperacaojTextField.setText("Devolucao de Mercadorias");
        }else if (tipoOperacaojComboBox.getSelectedItem().toString().equalsIgnoreCase("Remessa")){
            naturezaOperacaojTextField.setText("Remessa de Mercadorias");
        }
    }//GEN-LAST:event_tipoOperacaojComboBoxItemStateChanged

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        somarValoresNFe();
    }//GEN-LAST:event_jButton16ActionPerformed

    private void produtojTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_produtojTableKeyPressed
       
    }//GEN-LAST:event_produtojTableKeyPressed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        int linha = produtojTable.getSelectedRow();
        if (linha>=0){
            String svalor = JOptionPane.showInputDialog("Informe novo Valor no Formato 1000,00");
            Float fvalor = Formatacao.formatarStringfloat(svalor);
            listaProdutoBean.get(linha).setValorUnitario(fvalor);
            listaProdutoBean.get(linha).setValortotal(fvalor * listaProdutoBean.get(linha).getQuantidade());
            calcularTotaisNotaFiscal();
            setModelProduto();
        }else JOptionPane.showMessageDialog(rootPane, "Selecione um  produto");
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new FrmConsultaEntrada(config, this);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void numeroNFejTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numeroNFejTextFieldFocusLost
        int numeroAtual = Integer.parseInt(numeroNFejTextField.getText());
        if (numeroAtual!=numeroNFE){
            JOptionPane.showMessageDialog(null, "Número da NF-e fora da sequência");
        }
    }//GEN-LAST:event_numeroNFejTextFieldFocusLost

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        int linha = produtojTable.getSelectedRow();
        if (linha>=0){
            String svalor = JOptionPane.showInputDialog("Informe novo Valor no Formato 1000,00");
            Float fvalor = Formatacao.formatarStringfloat(svalor);
            listaProdutoBean.get(linha).setValoracessorios(fvalor);
            calcularTotaisNotaFiscal();
            setModelProduto();
        }else JOptionPane.showMessageDialog(rootPane, "Selecione um  produto");
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        int linha = produtojTable.getSelectedRow();
       if (linha>=0){
           String cest = "";
           cest = JOptionPane.showInputDialog("Informe CEST");
           listaProdutoBean.get(linha).getProduto().setCest(cest);
           ProdutoController produtoController = new ProdutoController();
           Produto prod = produtoController.consultarProdutoid(listaProdutoBean.get(linha).getProduto().getIdProduto());
           if (prod!=null){
               prod.setCest(cest);
               produtoController.salvarProduto(prod);
           }
           setModelProduto();
       }else{
           JOptionPane.showMessageDialog(rootPane, "Selecione um produto");
       }
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param ags the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bairrojTextField;
    private javax.swing.JFormattedTextField cepjFormattedTextField;
    private javax.swing.JTextField chaveACessojTextField;
    private javax.swing.JTextField ciadetransportadorajTextField;
    private javax.swing.JTextField cidadejTextField;
    private javax.swing.JTextField cnpjreferenciajTextField;
    private javax.swing.JTextField cnpjtransportadorajTextField;
    private javax.swing.JTextField codigoUFjTextField;
    private javax.swing.JComboBox comSTjComboBox;
    private javax.swing.JTextField complementojTextField;
    private javax.swing.JComboBox contribuintejComboBox;
    private javax.swing.JFormattedTextField cpfjFormattedTextField;
    private com.toedter.calendar.JDateChooser dataEmissaojDateChooser;
    private com.toedter.calendar.JDateChooser dataVencimentoDuplicatajDateChooser;
    private javax.swing.JTextField despAcessoriasjTextField;
    private javax.swing.JTable duplicatajTable;
    private javax.swing.JTable duplicatajTable1;
    private javax.swing.JTextField emailjTextField;
    private javax.swing.JTextField enderecotransportadorajTextField;
    private javax.swing.JTextField estadojTextField;
    private javax.swing.JTextField evolumesjTextField;
    private javax.swing.JFormattedTextField foneFixojFormattedTextField;
    private javax.swing.JComboBox formaPagamentojComboBox;
    private javax.swing.JButton gerarjButton;
    private javax.swing.JTextField ietransportadorajTextField;
    private javax.swing.JTextArea infojTextArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField logradourojTextFiel;
    private javax.swing.JTextField mesanojTextField;
    private javax.swing.JComboBox modalidadefretejComboBox;
    private javax.swing.JTextField modeloreferenciajTextField;
    private javax.swing.JTextField naturezaOperacaojTextField;
    private javax.swing.JTextField nomeTransportadorajTextField;
    private javax.swing.JTextField nomejTextField;
    private javax.swing.JTextField numeroDuplicatajTextField;
    private javax.swing.JTextField numeroFaturajTextField;
    private javax.swing.JTextField numeroNFejTextField;
    private javax.swing.JTextField numeroNFereferenciajTextField;
    private javax.swing.JTextField numerojTextField;
    private javax.swing.JTextField nvolumesjTextField;
    private javax.swing.JTextField pesobrutojTextField;
    private javax.swing.JTextField pesoliquidojTextField;
    private javax.swing.JTable produtojTable;
    private javax.swing.JTextField rgjTextField;
    private javax.swing.JComboBox semSTjComboBox;
    private javax.swing.JTextField sereireferenciajTextField;
    private javax.swing.JTextField seriejTextField;
    private javax.swing.JComboBox tipoNFejComboBox;
    private javax.swing.JComboBox tipoOperacaojComboBox;
    private javax.swing.JTextField totalNotajTextField;
    private javax.swing.JTextField totalProdutojTextField;
    private javax.swing.JTextField uftransportadorajTextField;
    private javax.swing.JTextField valorDescontoCalculadojTextField;
    private javax.swing.JTextField valorDescontoFaturajTextField;
    private javax.swing.JTextField valorDescontojTextField;
    private javax.swing.JTextField valorDuplicatajTextField;
    private javax.swing.JTextField valorLiquidoFaturajTextField;
    private javax.swing.JTextField valorOriginalFaturajTextField;
    private javax.swing.JTextField valorTributosjTextField;
    // End of variables declaration//GEN-END:variables
    public void setModelProduto(){
        if (listaProdutoBean==null){
            listaProdutoBean = new ArrayList<NotaSaidaProdutoBean>();
        }
        modelProduto = new ListaProdutoSaidaBeanTableModel(listaProdutoBean);
        produtojTable.setModel(modelProduto);
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.RIGHT);
        produtojTable.getColumnModel().getColumn(0).setPreferredWidth(30);
        produtojTable.getColumnModel().getColumn(1).setPreferredWidth(250);
        produtojTable.getColumnModel().getColumn(2).setPreferredWidth(30);
        produtojTable.getColumnModel().getColumn(3).setPreferredWidth(80);
        produtojTable.getColumnModel().getColumn(4).setCellRenderer(renderer);
        produtojTable.getColumnModel().getColumn(4).setPreferredWidth(50);
        produtojTable.getColumnModel().getColumn(5).setCellRenderer(renderer);
        produtojTable.getColumnModel().getColumn(5).setPreferredWidth(50);
        produtojTable.getColumnModel().getColumn(6).setCellRenderer(renderer);
        produtojTable.getColumnModel().getColumn(6).setPreferredWidth(50);
        produtojTable.getColumnModel().getColumn(7).setCellRenderer(renderer);
        produtojTable.getColumnModel().getColumn(7).setPreferredWidth(80);
        produtojTable.getColumnModel().getColumn(8).setCellRenderer(renderer);
        produtojTable.getColumnModel().getColumn(8).setPreferredWidth(50);
        produtojTable.getColumnModel().getColumn(9).setPreferredWidth(80);
        produtojTable.repaint();
        String msg = verificarNCM();
        if (msg.length()>5){
            JOptionPane.showMessageDialog(renderer, msg);
        }
        if (valorTributosjTextField.getText().equalsIgnoreCase("0")){
            calcularTotaisNotaFiscal();
        }
    }




    public void incluirProdutoVenda(Object objeto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public String pesquisarAliquota(int idAliquota){
        AliquotaController aliquotaController = new AliquotaController();
        Aliquota aliquota = aliquotaController.buscarAliquotaid(idAliquota);
        if (aliquota!=null){
            return aliquota.getDescricao();
        }
        return "";
    }

    public void consultarCliente(Cliente cliente) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public String getCodigoMunicipio(int idMunicipio){
        MunicipiosController municipiosController = new MunicipiosController();
        Municipios municipios = municipiosController.getMunicipio(idMunicipio);
        if (municipios!=null){
            return municipios.getCodigo();
        }else return "0";
    }

    public void carregarComboBoxCFOP(){
        CodigoFiscalController codigoFiscalController = new CodigoFiscalController();
        List<Codigofiscal> listaCodigoFiscal = codigoFiscalController.listarCodigoFiscal("SST");
        if (listaCodigoFiscal!=null){
            for(int i=0;i<listaCodigoFiscal.size();i++){
                comSTjComboBox.addItem(listaCodigoFiscal.get(i));
            }
        }
        listaCodigoFiscal = codigoFiscalController.listarCodigoFiscal("CST");
        if (listaCodigoFiscal!=null){
            for(int i=0;i<listaCodigoFiscal.size();i++){
                semSTjComboBox.addItem(listaCodigoFiscal.get(i));
            }
        }
    }

   public void gerarArquivoAcbr(String texto) {
        try {
            FileWriter acbr = new FileWriter(new File(this.config.getCaminhoAcbr() + "ENTNFE.txt"));
            acbr.write(texto);
            acbr.close();
        } catch (IOException ex) {
            Logger.getLogger(FrmEmitirNotaFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }

   }

   public void lerArquivoSaidaAcbr() throws IOException{
        File arqSaida = new File(this.config.getCaminhoAcbr() + "sainfe.txt");
        String xml = null;
        BufferedReader leitor = null;
        FileReader sainfe;
        while (!arqSaida.exists()) {
            arqSaida = new File(this.config.getCaminhoAcbr() + "sainfe.txt");
        }
        if (!arqSaida.exists()){
            JOptionPane.showMessageDialog(rootPane, "Arquivo de Saída não Localizado");
        }
        sainfe = new FileReader(arqSaida);
        leitor = new BufferedReader(sainfe);
        xml = leitor.readLine();
        String linha = xml.substring(0, 2);
        if (linha.equalsIgnoreCase("OK")) {
            if (verificarRetornoNFe(leitor)){
                JOptionPane.showMessageDialog(rootPane, "Nota Fiscal Gerada com Sucesso");
                gerarjButton.setText("Gerar NF-e");
                gerarjButton.setEnabled(false);
                carregarCahveAutorizacao(leitor);
                new FrmLocalizarArquivoNFe(this, this.config.getCaminhoNFe());
            }
        }else {
            leitor.close();
            JOptionPane.showMessageDialog(rootPane, "Erro oa gerar Nota Fiscal");
            arqSaida = new File(this.config.getCaminhoAcbr() + "LOG.txt");
            if (arqSaida.exists()){
                System.out.println("ok");
            }
            sainfe = new FileReader(arqSaida);
            leitor = new BufferedReader(sainfe);
            gerarjButton.setText("Gerar NF-e");
            new FrmMostrarErroNotaSaida(leitor);
            leitor.close();
            arqSaida.delete();
            apagarArquivoSaidaAcbr();
        }
        leitor.close();
    }

   public void gerarArquivoNFe() throws IOException{
        arquivo = new FileWriter(new File(this.config.getCaminhoNFe() + "cTexto.txt"));
        notaSaidaBean.setHoraSaida(Formatacao.foramtarHoraString());
        //Identificaoção
        arquivo.write("NOTAFISCAL|1" + "\r\n");
        gerarDadosNotaFiscal();
        gerarDadosNotaReferenciada();
        gerarDadosEmitente();
        gerarDadosDestinatario();
        gerarDadosProduto();
        gerarTotaisSimplesNacional();
        gerarTrasnporte();
        if (notaSaidaBean.getFormaPagamento().equalsIgnoreCase("A PRAZO")){
            if (notaSaidaBean.getFatura()!=null){
                gerarFatura();
                if (notaSaidaBean.getFatura().getListaDuplicata()!=null){
                    gerarDuplicatas();
                }
            }
        }
        arquivo.close();
    }

    public void gerarDadosNotaFiscal() throws IOException{
        arquivo.write("A|3.10||" + "\r\n");
        arquivo.write("B|"); //B01
        arquivo.write("42|");//Codigo do Estado SC=42 B02
        arquivo.write("|"); //B03
        arquivo.write(validarTamanho(notaSaidaBean.getNaturezaOperacao()) + "|"); //B04
        arquivo.write(verificarFormaPagamento() + "|"); //B05
        arquivo.write("55|"); //B06
        arquivo.write(notaSaidaBean.getSerie1()+ "|");//B07
        arquivo.write(notaSaidaBean.getNuemro() + "|");//B08
        arquivo.write(converterDataUTC() + "|");//B09
        arquivo.write(converterDataUTC() + "|");//B10
        arquivo.write(verificarTipoNFe() + "|"); //B11
        arquivo.write(verficiarOepracao()+ "|");//Identificador da Oepração 1 - Estadual 2- Fora do Estado 3 - Exterior //B11a
        arquivo.write("4205407|");//Codigo Municipio //B12
        arquivo.write("1|");//Formato de Impressao do Danfe //B21
        arquivo.write("1|");//Forma de Emissao da NF-e //B22
        arquivo.write("|");//Digito verificar do Chave de acesso na informar na importacao //B23
        if (config.getAmbientenfe().equalsIgnoreCase("1")){
            arquivo.write("1|");//Identificaocao do Hambiente produção  //B24
        }else if (config.getAmbientenfe().equalsIgnoreCase("2")){
            arquivo.write("2|");//Identificaocao do Hambiente Homologação  //B24
        }
        if (tipoOperacaojComboBox.getSelectedItem().toString().equalsIgnoreCase("Venda")){
            arquivo.write("1|");//finalidade da Emissao da NF-e 1 - Normal //B25
        }else if (tipoOperacaojComboBox.getSelectedItem().toString().equalsIgnoreCase("Remessa")){
            arquivo.write("1|");//finalidade da Emissao da NF-e 1 - Normal //B25
        }else arquivo.write("4|");//finalidade da Emissao da NF-e 4 - Devolução/Retorno //B25
        if (tipoOperacaojComboBox.getSelectedItem().toString().equalsIgnoreCase("Venda")){
            arquivo.write("1|");//Indica operacao consumidor final 0 - Nao   1-Cosumidor final //B25a
        }else arquivo.write("0|");//Indica operacao consumidor final 0 - Nao   0-Não  //B25a
        arquivo.write("1|");//Indica de presença do comprador //B25b
        arquivo.write("0|" + parametrosLocal.getVersaonfe());//Processo de emissao da NF-e B26 e B27
        arquivo.write("|||");
        arquivo.write("\r\n");
    }

    public void gerarDadosNotaReferenciada() throws IOException {
        if (tipoOperacaojComboBox.getSelectedItem().toString().equalsIgnoreCase("Devolução")) {
            arquivo.write("BA01|");//BA01
            arquivo.write(chaveACessojTextField.getText() + "|" + "\r\n"); //BA02
            arquivo.write("BA03|");//BA03
            arquivo.write(codigoUFjTextField.getText() + "|"); //BA04
            arquivo.write(mesanojTextField.getText() + "|"); //BA05
            arquivo.write(retirarPontos(cnpjreferenciajTextField.getText()) + "|"); //BA06
            arquivo.write(modeloreferenciajTextField.getText() + "|"); //BA07
            arquivo.write(sereireferenciajTextField.getText() + "|"); //BA08
            arquivo.write(numeroNFereferenciajTextField.getText() + "|"); //BA09
            arquivo.write("\r\n");
        }
    }

    public void gerarDadosEmitente() throws IOException{
        // Dados do Emitente

        arquivo.write("C|");//Classe Dados do Emitente //C01
        arquivo.write(validarTamanho(config.getEmpresa().getRazaoSocial()) + "|");//RazaoSocial
        arquivo.write(validarTamanho(config.getEmpresa().getNomeFantasia()) + "|");//Nome Fantasia
        arquivo.write(retirarPontos(config.getEmpresa().getInscricaoEstadual() + "|"));//Inscricao Estadual
        arquivo.write("|");//Inscricao Estadual ST
        arquivo.write(config.getEmpresa().getInscricaoMunicipal() + "|"); //Inscricao Municipal
        arquivo.write(config.getEmpresa().getCnae() + "|"); //Numero da Codigo Ativadade Economoca
        arquivo.write(config.getEmpresa().getCrt() + "|"); //Se a empresa e enquadrada ou nao no Simples
        arquivo.write("\r\n");

        //Dados do CNPJ
        arquivo.write("C02|");
        arquivo.write(retirarPontos(config.getEmpresa().getCnpj()) + "|" + "\r\n");

        //Dados do Endereco
        arquivo.write("C05|");
        arquivo.write(validarTamanho(config.getEmpresa().getTipoLogradouro() + " " +  config.getEmpresa().getLogradouro()) + "|");
        arquivo.write(config.getEmpresa().getNumero() + "|");
        arquivo.write(validarTamanho(config.getEmpresa().getComplemento()) + "|");
        arquivo.write(validarTamanho(config.getEmpresa().getBairro()) + "|");
        arquivo.write(consultarCodgioMunicipio(config.getEmpresa().getMunicipios()) + "|");
        arquivo.write(validarTamanho(config.getEmpresa().getCidade()) + "|");
        arquivo.write(config.getEmpresa().getUf() + "|");
        arquivo.write(retirarPontos(config.getEmpresa().getCep()) + "|");
        arquivo.write("1058" + "|");//Codigo Pais
        arquivo.write("Brasil" + "|"); //Pais
        arquivo.write(retirarPontos(config.getEmpresa().getFoneComercial()) + "|");
        arquivo.write("\r\n");
    }

    public void gerarDadosDestinatario() throws IOException{
        //Dados do Destinatario
        arquivo.write("E|");//E01
        arquivo.write(validarTamanho(nomejTextField.getText()) + "|"); //E04
        arquivo.write(verificarClienteICMS()+ "|");//E16a
        arquivo.write(retirarPontos(rgjTextField.getText())+ "|");//E17
        arquivo.write("||");//E18 e E18a
        arquivo.write(emailjTextField.getText() + "|");//E19
        arquivo.write("\r\n");
        if (cpfjFormattedTextField.getText().length()==14){
            arquivo.write("E03|"); //E03
        }else if (cpfjFormattedTextField.getText().length()==18){
            arquivo.write("E02|"); //E02
        }
        arquivo.write(retirarPontos(cpfjFormattedTextField.getText()) + "|"); //E02 ou E03
        arquivo.write("\r\n");

        //Endereco do Destinatario
        arquivo.write("E05|"); //E05
        arquivo.write(validarTamanho(logradourojTextFiel.getText()) + "|");//E06
        arquivo.write(numerojTextField.getText() + "|");//E07
        arquivo.write(validarTamanho(complementojTextField.getText()) + "|");//E08
        arquivo.write(validarTamanho(bairrojTextField.getText()) + "|"); //E09
        arquivo.write(notaSaidaBean.getCodigoMunicipio() + "|");//E10
        arquivo.write(validarTamanho(cidadejTextField.getText()) + "|");//E11
        arquivo.write(estadojTextField.getText() + "|");//E12
        arquivo.write(retirarPontos(cepjFormattedTextField.getText()) + "|");//E12
        arquivo.write("1058" + "|");//E14
        arquivo.write("Brasil" + "|");//E15
        arquivo.write(retirarPontos(foneFixojFormattedTextField.getText()) + "|");//E16
        arquivo.write("\r\n");
    }

    public void gerarAutorizacaoDownloadXML() throws IOException{
        arquivo.write("G50|");
        if (cpfjFormattedTextField.getText().length()==14){
            arquivo.write("G52|"); //G52
        }else if (cpfjFormattedTextField.getText().length()==18){
            arquivo.write("G51|"); //G51
        }
        arquivo.write(retirarPontos(cpfjFormattedTextField.getText()) + "|"); //E52 ou E51

    }

    public void gerarDadosProduto() throws IOException{
        for (int i = 0; i < listaProdutoBean.size(); i++) {
            arquivo.write("H|");
            arquivo.write((i+1) + "|");//Numero do item
            arquivo.write("VALOR APROXIMADO DOS TRIBUTOS R$ " + Formatacao.foramtarDoubleString(listaProdutoBean.get(i).getValorTributoFederal() + listaProdutoBean.get(i).getValorTributoEstadual()) +"|");//Informacoes Adicionais
            arquivo.write("\r\n");
            arquivo.write("I|");
            arquivo.write(String.valueOf(listaProdutoBean.get(i).getProduto().getReferencia()) + "|");
            arquivo.write(verificarCodgioBarras(listaProdutoBean.get(i).getProduto().getIdProduto()) + "|");//codigo Barras
            arquivo.write(listaProdutoBean.get(i).getProduto().getDescricao() + "|");
            arquivo.write(listaProdutoBean.get(i).getProduto().getNcm() + "|");
            arquivo.write("|");
            arquivo.write(listaProdutoBean.get(i).getCfop() + "|");
            arquivo.write(listaProdutoBean.get(i).getProduto().getUnidade() + "|");
            arquivo.write(FormatarValoreMonetarios(Formatacao.foramtarDoubleString(listaProdutoBean.get(i).getQuantidade())) +"00" + "|");
            arquivo.write(FormatarValoreMonetarios(Formatacao.foramtarDoubleString(listaProdutoBean.get(i).getValorUnitario())) + "00000000" + "|");
            arquivo.write(FormatarValoreMonetarios(Formatacao.foramtarDoubleString(listaProdutoBean.get(i).getValortotal())) + "|");
            arquivo.write(verificarCodgioBarras(listaProdutoBean.get(i).getProduto().getIdProduto()) + "|");
            arquivo.write(listaProdutoBean.get(i).getProduto().getUnidade() + "|");
            arquivo.write(FormatarValoreMonetarios(Formatacao.foramtarDoubleString(listaProdutoBean.get(i).getQuantidade())) +"00" + "|");
            arquivo.write(FormatarValoreMonetarios(Formatacao.foramtarDoubleString(listaProdutoBean.get(i).getValorUnitario())) + "00000000" + "|");
            arquivo.write("|");
            arquivo.write("|");
            if (listaProdutoBean.get(i).getValorDesconto()==0){
                arquivo.write("|");
            }else arquivo.write(FormatarValoreMonetarios(Formatacao.foramtarDoubleString(listaProdutoBean.get(i).getValorDesconto())) + "|");
            arquivo.write(FormatarValoreMonetarios(Formatacao.foramtarDoubleString(listaProdutoBean.get(i).getValoracessorios())) + "00000000" + "|");
            arquivo.write("1" + "|");
            arquivo.write("|");
            arquivo.write("|");
            arquivo.write("\r\n");
            arquivo.write("M|");
            arquivo.write(FormatarValoreMonetarios(Formatacao.foramtarDoubleString(listaProdutoBean.get(i).getValorTributoFederal() + listaProdutoBean.get(i).getValorTributoEstadual())) + "|");
            arquivo.write("\r\n");
            arquivo.write("N|");
            arquivo.write("\r\n");
            if (tipoOperacaojComboBox.getSelectedItem().toString().equalsIgnoreCase("Remessa")){
                arquivo.write("N10g|0|400||||");
            }else {
                arquivo.write("N10h|0|900||||");
            }
            arquivo.write("\r\n");
            gerarPisSimplesNacional();
            gerarCofinsSimplesNacional();

        }
    }


    public void gerarTotaisSimplesNacional() throws IOException{
        arquivo.write("W|");
        arquivo.write("\r\n");
        arquivo.write("W02|");
        arquivo.write("0.00" + "|");//w03
        arquivo.write("0.00" + "|");//w04
        arquivo.write("0.00" + "|");//w04a
        arquivo.write("0.00" + "|");//w05
        arquivo.write("0.00" + "|");//w06
        arquivo.write(FormatarValoreMonetarios(Formatacao.foramtarDoubleString(notaSaidaBean.getTotalValoProdutos())) + "|");//w07
        arquivo.write("0.00" + "|");//w08
        arquivo.write("0.00" + "|");//w09
        arquivo.write(FormatarValoreMonetarios(Formatacao.foramtarDoubleString(notaSaidaBean.getValorDesconto())) + "|");//w10
        arquivo.write("0.00" + "|");//w11
        arquivo.write("0.00" + "|");//w12
        arquivo.write("0.00" + "|");//w13
        arquivo.write("0.00" + "|");//w14
        arquivo.write(FormatarValoreMonetarios(Formatacao.foramtarDoubleString(notaSaidaBean.getDespesasacessorias())) + "|");//w15
        arquivo.write(FormatarValoreMonetarios(Formatacao.foramtarDoubleString(notaSaidaBean.getValorNota())) + "|");//w16
        arquivo.write(FormatarValoreMonetarios(Formatacao.foramtarDoubleString(notaSaidaBean.getTotalTributiosFederal() + notaSaidaBean.getTotalTributiosEstadual())) + "|");//w16a
        arquivo.write("\r\n");
       
        
    }
    
    public void gerarTrasnporte() throws IOException{
        String modalidade = modalidadeFrete();
        arquivo.write("X|");
        arquivo.write(modalidade + "|");
        arquivo.write(retirarPontos(cnpjtransportadorajTextField.getText()) + "|");
        arquivo.write("\r\n");
        if (nomeTransportadorajTextField.getText().length()>0) {
            arquivo.write("X03" + "|");
            if (ietransportadorajTextField.getText().length() > 0) {
                arquivo.write(retirarPontos(ietransportadorajTextField.getText()) + "|");
            }
            arquivo.write(enderecotransportadorajTextField.getText() + "|");
            arquivo.write(ciadetransportadorajTextField.getText() + "|");
            arquivo.write(uftransportadorajTextField.getText() + "|");
            arquivo.write("\r\n");
        }
        arquivo.write("X26" + "|");
        arquivo.write(nvolumesjTextField.getText() + "|");
        arquivo.write(evolumesjTextField.getText() + "|");
        arquivo.write(pesobrutojTextField.getText() + "|");
        arquivo.write(pesoliquidojTextField.getText() + "|");
        
         arquivo.write("\r\n");
         arquivo.write("Z||" + notaSaidaBean.getInfoTexto() + " a)      EMPRESA ME OU EPP OPTANTE PELO SIMPLES NACIONAL;b) NÃO GERA DIREITO A CRÉDITO FISCAL DE IPI. Valor aproximado dos tributos com base na lei  12.741/2012 "
                + " Federal R$ " + Formatacao.foramtarDoubleString(notaSaidaBean.getTotalTributiosFederal()) + "; Estadual R$ " +  Formatacao.foramtarDoubleString(notaSaidaBean.getTotalTributiosEstadual()) +
                ";municipal R$ 0,00. FONTE: IBPT." + infojTextArea.getText() + "|");
        
    }

    public void gerarPisSimplesNacional() throws IOException{
        arquivo.write("Q|");
        arquivo.write("\r\n");
        arquivo.write("Q05|");
        arquivo.write("99"+ "|");
        arquivo.write("0.00"+ "|");
        arquivo.write("\r\n");
        arquivo.write("Q07|");
        arquivo.write("0.00"+ "|");
        arquivo.write("0.00"+ "|");
        arquivo.write("\r\n");
    }

    public void gerarCofinsSimplesNacional() throws IOException{
        arquivo.write("S|");
        arquivo.write("\r\n");
        arquivo.write("S05|");
        arquivo.write("99"+ "|");
        arquivo.write("0.00"+ "|");
        arquivo.write("\r\n");
        arquivo.write("S07|");
        arquivo.write("0.00"+ "|");
        arquivo.write("0.00"+ "|");
        arquivo.write("\r\n");
    }
    
    
    
    public String modalidadeFrete(){
        if (modalidadefretejComboBox.getSelectedItem().toString().equalsIgnoreCase("0 - Por conta do Emitente")){
            return "0";
        }else if (modalidadefretejComboBox.getSelectedItem().toString().equalsIgnoreCase("1 - Por conta do destinatário/remetente")){
            return "1";
        }
        if (modalidadefretejComboBox.getSelectedItem().toString().equalsIgnoreCase("2 - Por conta de terceiros")){
            return "2";
        }
        if (modalidadefretejComboBox.getSelectedItem().toString().equalsIgnoreCase("9 - Sem frete")){
            return "9";
        }
        return "9";
    }
    

    public void gerarFatura() throws IOException{
        arquivo.write("Y|");
        arquivo.write("\r\n");
        arquivo.write("Y02|");
        arquivo.write(notaSaidaBean.getFatura().getNumero() + "|");
        arquivo.write(FormatarValoreMonetarios(Formatacao.foramtarFloatString(notaSaidaBean.getFatura().getValorOrigianl())) + "|");
        arquivo.write(FormatarValoreMonetarios(Formatacao.foramtarFloatString(notaSaidaBean.getFatura().getValorDesconto())) + "|");
        arquivo.write(FormatarValoreMonetarios(Formatacao.foramtarFloatString(notaSaidaBean.getFatura().getValorLiquido())) + "|");
        arquivo.write("\r\n");
    }

    public void gerarDuplicatas() throws IOException{
        for(int i=0;i<notaSaidaBean.getFatura().getListaDuplicata().size();i++){
            arquivo.write("Y07|");
            arquivo.write(notaSaidaBean.getFatura().getListaDuplicata().get(i).getNumero() + "|");
            arquivo.write(Formatacao.ConvercaoDataDANFEDuplicata(notaSaidaBean.getFatura().getListaDuplicata().get(i).getDataVencimento()) + "|");
            arquivo.write(FormatarValoreMonetarios(Formatacao.foramtarFloatString(notaSaidaBean.getFatura().getListaDuplicata().get(i).getValor()))+ "|");
            arquivo.write("\r\n");
        }
    }

    public String retirarPontos(String dado){
        String formatado = "";
        char c = ' ';
        if (dado != null) {
            for (int i = 0; i < dado.length(); i++) {
                c = dado.charAt(i);
                if ((c != '.') && (c != ',') && (c != '-') && (c != '/') && (c != '(') && (c != ')')) {
                    formatado += c;
                }
            }
        }
        return formatado;
    }

    public String FormatarValoreMonetarios(String dado){
        String formatado ="";
        char c = ' ';
        for(int i=0;i<dado.length();i++){
            c = dado.charAt(i);
            if ((c!='.')){
               if (c==','){
                   formatado+= '.';
               } else {
                   formatado+= c;
               }
            }
        }
        return formatado;
    }


    public String verificarFormaPagamento(){
        if (formaPagamentojComboBox.getSelectedItem().toString().equalsIgnoreCase("A VISTA")){
            return "0";
        }else if (formaPagamentojComboBox.getSelectedItem().toString().equalsIgnoreCase("A PRAZO")){
            return "1";
        }else return "2";
    }

    public String verificarTipoNFe(){
        if (tipoNFejComboBox.getSelectedItem().toString().equalsIgnoreCase("Saida")){
            return "1";
        }else if (tipoNFejComboBox.getSelectedItem().toString().equalsIgnoreCase("Entrada")){
            return "0";
        }else {
            return "1";
        }
    }

    public String verificarMMAACupomFiscal() {
        String dados;
        if (notaSaidaBean.getDataEmissaoCupomFiscal() != null) {
            dados = Formatacao.ConvercaoDataPadrao(notaSaidaBean.getDataEmissaoCupomFiscal());
            String ano = dados.substring(8, 9);
            String mes = dados.substring(3, 5);
            return ano + mes;
        }
        return "";
    }

    public String validarTamanho(String dados){
        if (dados.length()>60){
            return dados.substring(0, 59);
        }else return dados;
    }

    public String verificarCodgioBarras(int idProduto){
//        CodigoBarrasController codigoBarrasController = new CodigoBarrasController();
//        List<CodigoBarras> listaCodigoBarras = codigoBarrasController.pesquisarProduto(idProduto);
//        if (listaCodigoBarras!=null){
//            if (listaCodigoBarras.size()>0){
//                return listaCodigoBarras.get(0).getBarras();
//            }
//        }
        return "";
    }

    public String gerarCodigoNumeroChaveNFe(String numero){
        String zeros = "00000000";
        String dados = zeros.substring(numero.length()) + numero;
        return dados;
    }

    public void finalizarBuscaTerminalCliente(Terminalcliente terminalCliente) {

        TerminalVendasFacade terminalVendasFacade = new TerminalVendasFacade();
        List<Terminalproduto>  listaTerminalProduto = null;
        try {
            listaTerminalProduto = terminalVendasFacade.consultaTerminalProduto(terminalCliente);
        } catch (SQLException ex) {
            Logger.getLogger(FrmEmitirNotaFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        String stvalor="0";
        for (int i=0;i<listaTerminalProduto.size();i++){
            Terminalproduto terminalProduto = listaTerminalProduto.get(i);
            NotaSaidaProdutoBean notaSaidaProdutoBean = new NotaSaidaProdutoBean();
            Produto produto = new Produto();
            ProdutoController produtoController = new ProdutoController();
            EstoqueController estoqueController = new EstoqueController();
            produto= produtoController.consultarProdutoid(terminalProduto.getProduto());
            if (produto!=null){
                Estoque estoque = estoqueController.consultarEstoque(produto.getIdProduto(), config.getEmpresa().getIdempresa());
                notaSaidaProdutoBean.setProduto(produto);
                notaSaidaProdutoBean.setQuantidade(terminalProduto.getQuantidade());
                notaSaidaProdutoBean.setValorDesconto(0.0f);
                stvalor = Formatacao.foramtarFloatString(estoque.getValorCompra().floatValue());
                notaSaidaProdutoBean.setValorUnitario(Formatacao.formatarStringfloat(stvalor));
                stvalor = Formatacao.foramtarDoubleString( notaSaidaProdutoBean.getValorUnitario() * notaSaidaProdutoBean.getQuantidade());
                notaSaidaProdutoBean.setValortotal(Formatacao.formatarStringfloat(stvalor));
                notaSaidaProdutoBean.setValoracessorios(0);
                String aliquota = pesquisarAliquota(notaSaidaProdutoBean.getProduto().getAliquota());
                if (aliquota.equalsIgnoreCase("ST")){
                    Codigofiscal cf = (Codigofiscal) comSTjComboBox.getSelectedItem();
                    notaSaidaProdutoBean.setCfop(cf.getCfop());
                }else{
                    Codigofiscal cf = (Codigofiscal) semSTjComboBox.getSelectedItem();
                    notaSaidaProdutoBean.setCfop(cf.getCfop());
                }
                listaProdutoBean.add(notaSaidaProdutoBean);
            }
        }
        setModelProduto();
    }

    

    public void gerarNumeroNFe(){
        //Empresa emp = new Empresa();
        //emp = this.config.getEmpresa();
        NotaSaidaController notaSaidaController = new NotaSaidaController();
        numeroNFE = notaSaidaController.consultarUltimaNotaEmitida();//emp.getNumeroNFe();
        if (numeroNFE>0){
            numeroNFE = numeroNFE + 1;
            numeroNFejTextField.setText(String.valueOf(numeroNFE));
            seriejTextField.setText(String.valueOf(this.config.getEmpresa().getSerieNFe()));
        }else {
            JOptionPane.showMessageDialog(rootPane, "Erro Gerar Numero Nota Fiscal");
        }
    }

//    public void salvarNumeroNFe(){
//        Empresa emp = new Empresa();
//        emp = this.config.getEmpresa();
//        emp.setNumeroNFe(Integer.parseInt(numeroNFejTextField.getText()));
//        EmpresaController empresaController = new EmpresaController();
//        emp = empresaController.salvar(emp);
//        this.config.setEmpresa(emp);
//    }


     public void calcularTotaisNotaFiscal(){
        notaSaidaBean.setValorDesconto(Formatacao.ConvercaoMonetariaDouble(valorDescontojTextField.getText()));
        calcularRateioDesconto();
        double valorTotalProdutos=0;
        double valorTributosFederal=0;
        double valorTributosEstadual=0;
        double totalDesconto=0;
        double novoValorDesconto=0;
        if (notaSaidaBean.getPercentualDesconto()<=0){
            novoValorDesconto= Formatacao.formatarStringDouble(valorDescontojTextField.getText());
        }
        double valorCalcualdo=0;
        CestController ibptController = new CestController();
        for(int i=0;i<listaProdutoBean.size();i++){
            valorTotalProdutos+=listaProdutoBean.get(i).getValortotal();
            Ibpt ibpt = new Ibpt();
            ibpt = ibptController.cunsultarIbpt(listaProdutoBean.get(i).getProduto().getNcm());
            double valorFederal =0.0;
            double valorEstadual = 0.0;
            if (ibpt!=null){
                valorFederal = listaProdutoBean.get(i).getValortotal()*(ibpt.getNacionalfederal()/100);
                if (ibpt.getEstadual()>0){
                    valorEstadual = listaProdutoBean.get(i).getValortotal() *(ibpt.getEstadual()/100);
                }
            }else {
                valorFederal = listaProdutoBean.get(i).getValortotal()*(26.75/100);
                valorEstadual = listaProdutoBean.get(i).getValortotal()*(17/100);
            }
            String novoValorFederal = Formatacao.foramtarDoubleString(valorFederal);
            String novoValorEstadual = Formatacao.foramtarDoubleString(valorEstadual);
            valorFederal = Formatacao.formatarStringDouble(novoValorFederal);
            valorEstadual = Formatacao.formatarStringDouble(novoValorEstadual);
            listaProdutoBean.get(i).setValorTributoFederal(valorFederal);
            listaProdutoBean.get(i).setValorTributoEstadual(valorEstadual);
            valorTributosFederal+=listaProdutoBean.get(i).getValorTributoFederal();
            valorTributosEstadual+=listaProdutoBean.get(i).getValorTributoEstadual();
            if (notaSaidaBean.getPercentualDesconto()>0){
                double valorDesconto =  (listaProdutoBean.get(i).getValortotal() * notaSaidaBean.getPercentualDesconto());
                String vd = Formatacao.foramtarDoubleString(valorDesconto);
                valorDesconto = Formatacao.formatarStringDouble(vd);
                totalDesconto = totalDesconto + valorDesconto;
                if (totalDesconto> notaSaidaBean.getValorDesconto()){
                    valorDesconto = notaSaidaBean.getValorDesconto() - (totalDesconto - valorDesconto);
                }
                if (valorDesconto>0){
                    listaProdutoBean.get(i).setValorDesconto(valorDesconto);
                }else listaProdutoBean.get(i).setValorDesconto(0);
                valorCalcualdo = valorCalcualdo + listaProdutoBean.get(i).getValorDesconto();
            }else {
                if (novoValorDesconto>0){
                    if (listaProdutoBean.get(i).getValortotal()>novoValorDesconto){
                        listaProdutoBean.get(i).setValorDesconto(novoValorDesconto);
                        notaSaidaBean.setValorDesconto(novoValorDesconto);
                        totalDesconto=novoValorDesconto;
                        novoValorDesconto=0;
                    }
                }
            }
        }
        valorDescontoCalculadojTextField.setText(Formatacao.foramtarDoubleString(totalDesconto));
        double nvvd = Formatacao.formatarStringDouble(valorDescontojTextField.getText());
        if (totalDesconto>nvvd){
            somarValoresNFe();
        }
        notaSaidaBean.setTotalValoProdutos(valorTotalProdutos);
        notaSaidaBean.setValorNota(valorTotalProdutos - notaSaidaBean.getValorDesconto());
        notaSaidaBean.setTotalBaseICMS(0);
        notaSaidaBean.setTotalValorICMS(0);
        notaSaidaBean.setTotalTributiosFederal(valorTributosFederal);
        notaSaidaBean.setTotalTributiosEstadual(valorTributosEstadual);
        totalProdutojTextField.setText(Formatacao.foramtarDoubleString(notaSaidaBean.getTotalValoProdutos()));
        totalNotajTextField.setText(Formatacao.foramtarDoubleString(notaSaidaBean.getValorNota()));
        valorTributosjTextField.setText(Formatacao.foramtarDoubleString(notaSaidaBean.getTotalTributiosFederal()+ notaSaidaBean.getTotalTributiosEstadual()));
        gerarjButton.setEnabled(true);
    }
     
     
    public void somarValoresNFe(){
        double valorTotalProdutos = 0;
        double valorTributosFederal = 0;
        double valorTributosEstadual = 0;
        double totalDesconto = 0;
        double novoValorDesconto = 0;
        double valorCalcualdo = 0;
        CestController ibptController = new CestController();
        for (int i = 0; i < listaProdutoBean.size(); i++) {
            valorTotalProdutos += listaProdutoBean.get(i).getValortotal();
            valorTributosFederal += listaProdutoBean.get(i).getValorTributoFederal();
            valorTributosEstadual += listaProdutoBean.get(i).getValorTributoEstadual();
            totalDesconto = totalDesconto + listaProdutoBean.get(i).getValorDesconto();
        }
        valorDescontoCalculadojTextField.setText(Formatacao.foramtarDoubleString(totalDesconto));
        notaSaidaBean.setTotalValoProdutos(valorTotalProdutos);
        notaSaidaBean.setValorNota(valorTotalProdutos - notaSaidaBean.getValorDesconto());
        notaSaidaBean.setTotalBaseICMS(0);
        notaSaidaBean.setTotalValorICMS(0);
        notaSaidaBean.setTotalTributiosFederal(valorTributosFederal);
        notaSaidaBean.setTotalTributiosEstadual(valorTributosEstadual);
        totalProdutojTextField.setText(Formatacao.foramtarDoubleString(notaSaidaBean.getTotalValoProdutos()));
        totalNotajTextField.setText(Formatacao.foramtarDoubleString(notaSaidaBean.getValorNota()));
        valorTributosjTextField.setText(Formatacao.foramtarDoubleString(notaSaidaBean.getTotalTributiosFederal() + notaSaidaBean.getTotalTributiosEstadual()));
        gerarjButton.setEnabled(true);
    }



   public String validarDadosNFe(){
       String erro=null;
       if (notaSaidaBean.getCodigoMunicipio()=="0"){
           erro = "Falta código Municipio";
           return erro;
       }
       if (emailjTextField.getText().length()==0){
           erro = "Email inválido";
           return erro;
       }
       for(int i=0;i<listaProdutoBean.size();i++){
           if (listaProdutoBean.get(i).getProduto().getNcm().equalsIgnoreCase("0")){
               erro="Lista de Produtos possui NCM inválido";
               return erro;
           }
       }
       if (formaPagamentojComboBox.getSelectedItem().toString().equalsIgnoreCase("A PRAZO")){
           if (notaSaidaBean.getFatura()==null){
               erro = "Forma de Pagamento A PRAZO - sem Farura";
               return erro;
           }
           if (notaSaidaBean.getFatura().getListaDuplicata()==null){
               erro = "Fatura sem parcelas de Dupplicatas";
               return erro;
           }else {
               if (notaSaidaBean.getFatura().getListaDuplicata().size()==0){
                    erro = "Fatura sem parcelas de Dupplicatas";
                    return erro;
                }
           }
       }
       return erro;
   }

   public Notasaida gravarNotaSaida(){
       Notasaida notaSaida = new Notasaida();
       notaSaida.setIdcliente(notaSaidaBean.getCodigoCliente());
       notaSaida.setIdfornecedor(notaSaidaBean.getCodigoFornecedor());
       if (tipoOperacaojComboBox.getSelectedItem().toString().equalsIgnoreCase("Venda")){
           notaSaida.setTipo("V");
       }else notaSaida.setTipo("D");
       notaSaida.setDataEmissao(notaSaidaBean.getDataEmissao());
       notaSaida.setEmpresa(this.config.getEmpresa().getIdempresa());
       notaSaida.setNumero(Integer.parseInt(notaSaidaBean.getNuemro()));
       notaSaida.setSerie(Integer.parseInt(notaSaidaBean.getSerie1()));
       notaSaida.setSituacao("AUTORIZADA");
       notaSaida.setNomeArquivoXML(this.arquivoXML.getName());
       notaSaida.setUsuarios(this.usuarioLogado.getUsuario().getIdusuarios());
       Double valor = notaSaidaBean.getValorNota();
       notaSaida.setValorNotaFiscal(valor.floatValue());
       valor = notaSaidaBean.getTotalValoProdutos();
       notaSaida.setValorProdutos(valor.floatValue());
        try {
            notaSaida.setXml(carregarXML());
        } catch (Exception ex) {
            Logger.getLogger(FrmEmitirNotaFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        notaSaida.setChaveAutorizacao(chaveAutorizacao);
        notaSaida.setNome(nomejTextField.getText());
        notaSaida.setCnpj(cpfjFormattedTextField.getText());
        notaSaida.setIe(rgjTextField.getText());
        notaSaida.setFonefixo(foneFixojFormattedTextField.getText());
        notaSaida.setEmail(emailjTextField.getText());
        notaSaida.setLogradouro(logradourojTextFiel.getText());
        notaSaida.setComplemento(complementojTextField.getText());
        notaSaida.setBairro(bairrojTextField.getText());
        notaSaida.setCidade(cidadejTextField.getText());
        notaSaida.setCep(cepjFormattedTextField.getText());
        notaSaida.setEstado(estadojTextField.getText());
        valor = notaSaidaBean.getDespesasacessorias();
        notaSaida.setDespesasacessorias(valor.floatValue());
        NotaSaidaController notaSaidaController = new NotaSaidaController();
        notaSaida = notaSaidaController.salvarNotaSaida(notaSaida);
        return notaSaida;
   }

    public byte[] carregarXML() throws IOException {
        File file = this.arquivoXML;
        InputStream is = new FileInputStream(file);
        byte[] xml = new byte[(int) file.length()];
        int offset = 0;
        int numRead = 0;
        while (offset < xml.length
                && (numRead = is.read(xml, offset, xml.length - offset)) >= 0) {
            offset += numRead;
        }
        return xml;
    }

    public void carregarArquivoXMLLocalizado(File file) {
        if (file != null) {
            this.arquivoXML = file;
            this.notaCarregarda = true;
            if (notaCarregarda) {
                Notasaida notasaida = gravarNotaSaida();
                try {
                    enviarEmailNFeCliente(notasaida);
                    Thread.sleep(5000);
                } catch (IOException ex) {
                    Logger.getLogger(FrmEmitirNotaFornecedor.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, "Erro Enviar E-mail NF-e " + ex);
                } catch (InterruptedException ex) {
                    Logger.getLogger(FrmEmitirNotaFornecedor.class.getName()).log(Level.SEVERE, null, ex);
                }
                imprimirDANFE();
            }
            this.telaConsulta.setModel();
            this.dispose();

        } else {
            JOptionPane.showMessageDialog(rootPane, "Erro carregar Arquivo XML");
            this.notaCarregarda = false;
        }
    }

    public void enviarEmailNFeCliente(Notasaida notaSaida) throws FileNotFoundException, IOException{
        String caminho = this.config.getCaminhoNFe() + notaSaida.getNomeArquivoXML();
        File file = new File(caminho);
        FileOutputStream in = new FileOutputStream(file) ;
        in.write(notaSaida.getXml());
        in.close();
        String cEmailDestino = emailjTextField.getText();
        String cArqXML = this.config.getCaminhoNFe() + this.arquivoXML.getName();
        String cEnviaPDF = "1";
        String cAssunto = "Segue em Anexo NF-e da empresa " + this.config.getEmpresa().getRazaoSocial();
        String cEmailsCopias = "";
        String texto = "NFe.EnviarEmail(" + cEmailDestino+ "," +
                cArqXML + "," + cEnviaPDF + "," + cAssunto + "," +
                        cEmailsCopias + ")";
        gerarArquivoAcbr(texto);
    }



    public void imprimirDANFE(){
        String cArqXML = this.config.getCaminhoNFe() + this.arquivoXML.getName();
        String texto = "NFe.ImprimirDANFE("+ cArqXML + ")";
        gerarArquivoAcbr(texto);
    }

    
    public void setModel() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public void filtrarNotaSaida(String sql) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public void consultaFornecedor(Fornecedor fornecedor) {
        if (fornecedor != null) {
            nomejTextField.setText(fornecedor.getRazaoSocial());
            cpfjFormattedTextField.setText(fornecedor.getCnpj());
            rgjTextField.setText(fornecedor.getIe());
            foneFixojFormattedTextField.setText(fornecedor.getTelefone());
            emailjTextField.setText(fornecedor.getEmail());
            logradourojTextFiel.setText(fornecedor.getEndereco());
            complementojTextField.setText(fornecedor.getComplemento());
            bairrojTextField.setText(fornecedor.getBairro());
            cidadejTextField.setText(fornecedor.getCidade());
            cepjFormattedTextField.setText(fornecedor.getCep());
            estadojTextField.setText(fornecedor.getUf());
            if (emailjTextField.getText().length() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Email é obrigatório");
            }
            notaSaidaBean.setCodigoFornecedor(fornecedor.getIdfornecedor());
            String municipio = getCodigoMunicipio(fornecedor.getMunicipios());
            notaSaidaBean.setCodigoMunicipio(municipio);
            contribuintejComboBox.setSelectedIndex(0);
        }
    }

    public void setMunicipio(Municipios municipios) {
        if (municipios!=null){
            cidadejTextField.setText(municipios.getNomeMunicipio());
            estadojTextField.setText(municipios.getEstado());
            notaSaidaBean.setCodigoMunicipio(municipios.getCodigo());
        }
    }

    public void inlcluirProdutoContas(Object objeto) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public void carregarFaturas(FaturaBean fatura, List<DuplicataBean> listaDuplicata) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public void utilizarCreditos(List<CreditoBean> listaCreditos) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public void setDocEntrada(Docentrada docEntrada) {
        if (docEntrada!=null){
            EntradaProdutoController entradaProdutoController = new EntradaProdutoController();
            Nfentrada notaRef = entradaProdutoController.consultarNotaFiscalEntrada(docEntrada.getIdDocEntrada());
            codigoUFjTextField.setText(notaSaidaBean.getCodigoMunicipio());
            String dataEmisao = Formatacao.ConvercaoDataPadrao(notaRef.getDataEmissao());
            String mes = dataEmisao.substring(8,10) +  dataEmisao.substring(3,5);
            mesanojTextField.setText(mes);
            FornecedorController fornecedorController = new FornecedorController();
            Fornecedor Fornec = fornecedorController.consultarFornecedor(docEntrada.getFornecedor());
            if (Fornec!=null){
                cnpjreferenciajTextField.setText(Fornec.getCnpj());
                MunicipiosController municipiosController = new MunicipiosController();
                Municipios mun = municipiosController.getMunicipio(Fornec.getMunicipios());
                if (mun!=null){
                    codigoUFjTextField.setText(mun.getEstado());
                }
            }
            modeloreferenciajTextField.setText("01");
            sereireferenciajTextField.setText(notaRef.getSerie());
            numeroNFereferenciajTextField.setText(notaRef.getNumero());
            chaveACessojTextField.setText(notaRef.getChave());
        }
    }



    class RemindTask extends TimerTask {
        public void run() {
            try {
                lerArquivoSaidaAcbr();
            } catch (IOException ex) {
                Logger.getLogger(FrmEmitirNotaFornecedor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    public void carregarCahveAutorizacao(BufferedReader leitor){
        String linha=null;
        for(int i=0;i<1000;i++){
            try {
                linha = leitor.readLine();
                String dados = linha.substring(0, 5);
                if (dados.equalsIgnoreCase("ChNFe")){
                    chaveAutorizacao = linha.substring(6);
                    i=5000;
                }
            } catch (IOException ex) {
                Logger.getLogger(FrmEmitirNotaFornecedor.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }

    public boolean verificarRetornoNFe(BufferedReader leitor) {
        String linha = null;
        for (int i = 0; i < 1000; i++) {
            try {
                linha = leitor.readLine();
                String dados = "";
                if (linha != null) {
                    if (linha.length() > 8) {
                        dados = linha.substring(0, 7);
                    } else {
                        dados = linha.substring(0);
                    }
                } else {
                    linha = " ";
                }
                if (dados.equalsIgnoreCase("XMotivo")) {
                    String motivo = linha.substring(8);
                    if (motivo.equalsIgnoreCase("Autorizado o uso da NF-e")) {
                        JOptionPane.showMessageDialog(rootPane, motivo);
                        i = 5000;
                        return true;
                    }else {
                        if (!motivo.equalsIgnoreCase("Lote recebido com sucesso")){
                            JOptionPane.showMessageDialog(rootPane, motivo);
                            i = 5000;
                        }
                    }
                }
            } catch (IOException ex) {
                Logger.getLogger(FrmEmitirNotaFornecedor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            leitor.close();
        } catch (IOException ex) {
            Logger.getLogger(FrmEmitirNotaFornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    public String consultarCodgioMunicipio(int idMunicipio) {
        MunicipiosController municipiosController = new MunicipiosController();
        Municipios municipios = new Municipios();
        municipios = municipiosController.getMunicipio(idMunicipio);
        if (municipios != null) {
            return municipios.getCodigo();
        } else {
            return "0";
        }
    }

    public String validarFaturaDuplicata() {
        String erro = "0";
        if (numeroFaturajTextField.getText().equalsIgnoreCase("")) {
            erro = "Numero da Fatura em Branco";
            return erro;
        }
        if (valorDescontoFaturajTextField.getText().equalsIgnoreCase("")) {
            erro = "Valor do Desconto em Branco";
            return erro;
        }
        if (valorLiquidoFaturajTextField.getText().equalsIgnoreCase("")){
            erro = "Valor Liquido em Branco";
            return erro;
        }
        if (valorOriginalFaturajTextField.getText().equalsIgnoreCase("")){
            erro = "Valor Original em Branco";
            return erro;
        }
        if (numeroDuplicatajTextField.getText().equalsIgnoreCase("")){
            erro = "Numero Duplicata em Branco";
            return erro;
        }
        if (valorDuplicatajTextField.getText().equalsIgnoreCase("")){
            erro = "Valor Duplicata em Branco";
            return erro;
        }
        if (dataVencimentoDuplicatajDateChooser.getDate()==null){
            erro = "Data de Vencimento da Fatura inválida";
            return erro;
        }
        return erro;

    }



    public void calcularRateioDesconto(){
        Float desconto = Formatacao.formatarStringfloat(valorDescontojTextField.getText());
        Float valorTotal = Formatacao.formatarStringfloat(totalNotajTextField.getText());
        Float perDesconto= (desconto*100) / valorTotal;
        perDesconto = perDesconto/100;
        String vDesconto="";
        if (perDesconto>0){
            vDesconto = Formatacao.foramtarFloatString(perDesconto);
            perDesconto = Formatacao.formatarStringfloat(vDesconto);
        }

        notaSaidaBean.setPercentualDesconto(perDesconto);
    }

    public void apagarArquivoSaidaAcbr() throws IOException {
        File arqSaida = new File(this.config.getCaminhoAcbr() + "sainfe.txt");
        if (arqSaida.exists()) {
            arqSaida.delete();
        }
        arqSaida = new File(this.config.getCaminhoAcbr() + "LOG.txt");
        if (arqSaida.exists()) {
            arqSaida.delete();
        }
        File folder = new File(this.config.getCaminhoNFe());
        if (folder.isDirectory()) {
            File[] sun = folder.listFiles();
            for (File toDelete : sun) {
                toDelete.delete();
            }
        }
    }

    public String verficiarOepracao(){
        String estEmpresa = config.getEmpresa().getUf();
        String estDestinatario = estadojTextField.getText();
        if (estEmpresa.equalsIgnoreCase(estDestinatario)){
            return "1";
        }else return "2";
    }

    public String verificarClienteICMS(){
        String tipoContribuinte = contribuintejComboBox.getSelectedItem().toString();
        if (tipoContribuinte.equalsIgnoreCase("1 - Contribuinto do ICMS")){
            return "1";
        }else if (tipoContribuinte.equalsIgnoreCase("2 - Contribuinte isento de IE")){
            return "2";
        }else return "9";
    }

    public String converterDataUTC(){
        SimpleDateFormat fmtHora = new SimpleDateFormat("HH:mm:ss");
        SimpleDateFormat fmtData = new SimpleDateFormat("yyyy-MM-dd");
        Date data = dataEmissaojDateChooser.getDate();
        String sHora = fmtHora.format(data);   // isto faz com que mostre do jeito que você quer
        String sData = fmtData.format(data);
        return sData + "T" + sHora+"-03:00";
    }

    

    

    public boolean verificarCFOP(){
        Codigofiscal cfopST = (Codigofiscal) comSTjComboBox.getSelectedItem();
        if (estadojTextField.getText().equalsIgnoreCase("SC")){
            if (!cfopST.getEstadopadrao().equalsIgnoreCase("SC")){
                JOptionPane.showMessageDialog(rootPane, "CFOP c/ST não é para SC");
                return false;
            }
        }else {
            if (cfopST.getEstadopadrao().equalsIgnoreCase("SC")){
               JOptionPane.showMessageDialog(rootPane, "CFOP c/ST é para SC");
               return false;
            }
        }
        if (cfopST.getTipoemissao().equalsIgnoreCase("S")){
            if (!tipoNFejComboBox.getSelectedItem().toString().equalsIgnoreCase("Saida")){
                JOptionPane.showMessageDialog(rootPane, "CFOP c/ST não é para Saída");
                return false;
            }
        }else {
            if (cfopST.getTipoemissao().equalsIgnoreCase("E")){
                if (tipoNFejComboBox.getSelectedItem().toString().equalsIgnoreCase("Saida")){
                    JOptionPane.showMessageDialog(rootPane, "CFOP c/ST nõa é para Entrada");
                    return false;
                }
            }
        }
        Codigofiscal cfop = (Codigofiscal) semSTjComboBox.getSelectedItem();
        if (estadojTextField.getText().equalsIgnoreCase("SC")){
            if (!cfop.getEstadopadrao().equalsIgnoreCase("SC")){
                JOptionPane.showMessageDialog(rootPane, "CFOP s/ST não é para SC");
                return false;
            }
        }else {
            if (cfop.getEstadopadrao().equalsIgnoreCase("SC")){
               JOptionPane.showMessageDialog(rootPane, "CFOP s/ST é para SC");
               return false;
            }
        }
        if (cfop.getTipoemissao().equalsIgnoreCase("S")){
            if (!tipoNFejComboBox.getSelectedItem().toString().equalsIgnoreCase("Saida")){
                JOptionPane.showMessageDialog(rootPane, "CFOP c/ST não é para Saída");
                return false;
            }
        }else {
            if (cfop.getTipoemissao().equalsIgnoreCase("E")){
                if (tipoNFejComboBox.getSelectedItem().toString().equalsIgnoreCase("Saida")){
                    JOptionPane.showMessageDialog(rootPane, "CFOP c/ST nõa é para Entrada");
                    return false;
                }
            }
        }
        return true;
    }
    
    public String verificarNCM(){
        String msg="";
        for(int i=0;i<listaProdutoBean.size();i++){
            if (listaProdutoBean.get(i).getProduto().getNcm().length()!=8){
                listaProdutoBean.get(i).setSituacao("ERRO");
                msg = "Existem produtos com problemas de NCM";
            }
        }
        return msg;
    }
}
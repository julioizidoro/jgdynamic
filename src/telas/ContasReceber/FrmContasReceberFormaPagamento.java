/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package telas.ContasReceber;

import Regras.ContasReceberController;
import Regras.Formatacao;
import com.toedter.calendar.JTextFieldDateEditor;
import controler.Config;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import telas.ContasReceber.FormaPagamento.CrFomaDiasBean;

/**
 *
 * @author wolverine
 */
public class FrmContasReceberFormaPagamento extends javax.swing.JFrame {
    
    
    private String datePattern;
    private String maskPattern;
    private char placeHolder;
    private ContasReceberFormaPagamentoTableModel modelForma;
    private List<CrFomaDiasBean> listaFormas;
    private List<ContasReceberFormaPagamentoBean> listaContas;
    private Config config;

    /**
     * Creates new form FrmContasReceberFormaPagamento
     */
    public FrmContasReceberFormaPagamento(Config config) {
        datePattern = "dd/MM/yyyy";
        maskPattern = "##/##/####";
        placeHolder = '_';
        this.config = config;
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo_mini.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dataIniciojDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
            maskPattern, placeHolder));
    dataFinaljDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
        maskPattern, placeHolder));
jLabel2 = new javax.swing.JLabel();
jButton1 = new javax.swing.JButton();
jButton2 = new javax.swing.JButton();
jPanel2 = new javax.swing.JPanel();
jScrollPane1 = new javax.swing.JScrollPane();
formajTable = new javax.swing.JTable();

setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
setTitle("Formas de Recebimento");

jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

jLabel1.setText("Data Inicial");

jLabel2.setText("Data Final");

jButton1.setText("Gerar");
jButton1.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
    }
    });

    jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/door_in.png"))); // NOI18N
    jButton2.setText("Fechar");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1)
                .addComponent(dataIniciojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel2)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(dataFinaljDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 493, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(23, 23, 23))))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dataFinaljDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dataIniciojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    formajTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null}
        },
        new String [] {
            "Data ", "Dinheiro", "Cheque", "Cheque Pre", "Cartão Débito", "Cartão Crédito", "Sicob", "Créditos", "Total"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, true, false, false, false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jScrollPane1.setViewportView(formajTable);
    formajTable.getColumnModel().getColumn(0).setResizable(false);
    formajTable.getColumnModel().getColumn(1).setResizable(false);
    formajTable.getColumnModel().getColumn(2).setResizable(false);
    formajTable.getColumnModel().getColumn(3).setResizable(false);
    formajTable.getColumnModel().getColumn(4).setResizable(false);
    formajTable.getColumnModel().getColumn(5).setResizable(false);
    formajTable.getColumnModel().getColumn(6).setResizable(false);
    formajTable.getColumnModel().getColumn(7).setResizable(false);
    formajTable.getColumnModel().getColumn(8).setResizable(false);

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1)
            .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
            .addContainerGap())
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if ((dataIniciojDateChooser.getDate()==null) || (dataFinaljDateChooser.getDate()==null)){
            JOptionPane.showMessageDialog(rootPane, " Favor Verificar Datas Informadas");
        }else {
            gerarListaPosicaoFinanceira();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser dataFinaljDateChooser;
    private com.toedter.calendar.JDateChooser dataIniciojDateChooser;
    private javax.swing.JTable formajTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    public void setModelForma(){
        if (listaFormas==null){
            listaFormas = new ArrayList<CrFomaDiasBean>();
        }
        
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.RIGHT);
        modelForma = new ContasReceberFormaPagamentoTableModel(listaFormas);
        formajTable.setModel(modelForma);
        formajTable.getColumnModel().getColumn(0).setPreferredWidth(40);
        formajTable.getColumnModel().getColumn(1).setCellRenderer(renderer);
        formajTable.getColumnModel().getColumn(1).setPreferredWidth(40);
        formajTable.getColumnModel().getColumn(2).setCellRenderer(renderer);
        formajTable.getColumnModel().getColumn(2).setPreferredWidth(40);
        formajTable.getColumnModel().getColumn(3).setCellRenderer(renderer);
        formajTable.getColumnModel().getColumn(3).setPreferredWidth(40);
        formajTable.getColumnModel().getColumn(4).setCellRenderer(renderer);
        formajTable.getColumnModel().getColumn(4).setPreferredWidth(40);
        formajTable.getColumnModel().getColumn(5).setCellRenderer(renderer);
        formajTable.getColumnModel().getColumn(5).setPreferredWidth(40);
        formajTable.getColumnModel().getColumn(6).setCellRenderer(renderer);
        formajTable.getColumnModel().getColumn(6).setPreferredWidth(40);
        formajTable.getColumnModel().getColumn(7).setCellRenderer(renderer);
        formajTable.getColumnModel().getColumn(7).setPreferredWidth(40);
        formajTable.getColumnModel().getColumn(8).setCellRenderer(renderer);
        formajTable.getColumnModel().getColumn(8).setPreferredWidth(40);
        formajTable.repaint(); 
    }
    
    private void gerarListaPosicaoFinanceira(){
        this.listaFormas = new ArrayList<CrFomaDiasBean>();
        Date data = dataIniciojDateChooser.getDate();
        listaFormas = new ArrayList<CrFomaDiasBean>();
        int numerodias = calcularNumeroDias();
        for(int i=0;i<numerodias;i++){
            Date dataAtual = Formatacao.SomarDiasData(data, i);
            listaFormas.add(calcularValores(dataAtual));
        }
        setModelForma();
    }
    
    private int calcularNumeroDias(){
        int numeroDias =0;
        if (dataIniciojDateChooser.getDate()==dataFinaljDateChooser.getDate()){
            numeroDias=1;
        }else {
            numeroDias = Formatacao.subtrairDatas(dataFinaljDateChooser.getDate(), dataIniciojDateChooser.getDate());
            numeroDias+=1;
        }
        return numeroDias;
    }
    
    public CrFomaDiasBean calcularValores(Date data){
        String sData = Formatacao.ConvercaoDataSql(data);
        CrFomaDiasBean forma = new CrFomaDiasBean();
        carregarListaCostas(sData);
        forma.setData(data);
        if (listaContas!=null){
            for(int i=0;i<listaContas.size();i++){
                if (listaContas.get(i).getIdForma()==1){
                    forma.setDineiro(listaContas.get(i).getValorPago());
                }else if (listaContas.get(i).getIdForma()==2){
                    forma.setCheque(listaContas.get(i).getValorPago());
                }else if (listaContas.get(i).getIdForma()==3){
                    forma.setChequePre(listaContas.get(i).getValorPago());
                }else if (listaContas.get(i).getIdForma()==9){
                    forma.setSicob(listaContas.get(i).getValorPago());
                }else if (listaContas.get(i).getIdForma()==17){
                    forma.setCreditoCliente(listaContas.get(i).getValorPago());
                }else if((listaContas.get(i).getIdForma()==4) || (listaContas.get(i).getIdForma()==6) 
                        || (listaContas.get(i).getIdForma()==12) || (listaContas.get(i).getIdForma()==14)){
                    forma.setCartaoDebito(forma.getCartaoDebito() + listaContas.get(i).getValorPago());
                }else if ((listaContas.get(i).getIdForma()==5) || (listaContas.get(i).getIdForma()==7)
                        || (listaContas.get(i).getIdForma()==11) || (listaContas.get(i).getIdForma()==13)
                        || (listaContas.get(i).getIdForma()==15) || (listaContas.get(i).getIdForma()==16)
                        || (listaContas.get(i).getIdForma()==18) || (listaContas.get(i).getIdForma()==19)
                        || (listaContas.get(i).getIdForma()==20) || (listaContas.get(i).getIdForma()==21)){
                    forma.setCartaoCredito(forma.getCartaoCredito() + listaContas.get(i).getValorPago());
                }
                forma.setTotal(forma.getTotal() + listaContas.get(i).getValorPago());
            }
        }
        return forma;
    }
    
    public void carregarListaCostas(String data){
        ContasReceberController contasReceberController = new ContasReceberController();
        ResultSet rs = null;
        try {
            rs = contasReceberController.listarContasReceberFormaPagamento(data, this.config.getEmpresa().getIdempresa());
        } catch (SQLException ex) {
            Logger.getLogger(FrmContasReceberFormaPagamento.class.getName()).log(Level.SEVERE, null, ex);
        }
        listaContas = new ArrayList<ContasReceberFormaPagamentoBean>();
        if(rs!=null){
            try {
                while (rs.next()) {
                   ContasReceberFormaPagamentoBean forma = new ContasReceberFormaPagamentoBean();
                   forma.setValorPago(rs.getDouble("valorPago"));
                   forma.setContador(rs.getInt("contforma"));
                   forma.setDescricao(rs.getString("descricao"));
                   forma.setIdForma(rs.getInt("idforma"));
                   listaContas.add(forma);
               }
            } catch (SQLException ex) {
                Logger.getLogger(FrmContasReceberFormaPagamento.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Erro Gerar Contas Receber Forma Pagamento " + ex);
            }
        }
    }


}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmCadastrarContaPagar.java
 *
 * Created on 09/02/2012, 07:45:25
 */
package telas.ContasReceber;

import Interfaces.ItelaConsulta;
import Regras.ClienteController;
import Regras.ContasReceberController;
import Regras.Formatacao;
import Regras.VendedorController;
import beanController.NfDuplicatas;
import beanController.NfProdutos;
import beanController.NotaEletronica;
import com.toedter.calendar.JTextFieldDateEditor;
import controler.Config;
import controler.UsuarioLogado;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.net.URL;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import model.*;
import telas.Cliente.FrmConsultaClientes;

/**
 *
 * @author Wolverine
 */
public class FrmCadastrarContaReceber extends javax.swing.JFrame implements ItelaConsulta{

    /** Creates new form FrmCadastrarContaPagar */
    
    private Contasreceber contasReceber;
    private String datePattern;
    private String maskPattern;
    private char placeHolder;
    Config config;
    IContasReceber telaConsulta;
    Planoconta planoConta;
    Cliente cliente;
    UsuarioLogado usuarioLogado;
    
    
    public FrmCadastrarContaReceber(Config config, Contasreceber contasReceber, IContasReceber telaConsulta, int tipo, UsuarioLogado usuarioLogado) {
        datePattern = "dd/MM/yyyy";
        maskPattern = "##/##/##";
        this.usuarioLogado = usuarioLogado;
        placeHolder = '_';
        this.config = config;
        this.contasReceber = contasReceber;
        this.telaConsulta = telaConsulta;
        initComponents();
        if (this.contasReceber!=null){
            preencherCampos();
            if (tipo==1){
                funcaoVisualizar();
            }
        }else {
            this.contasReceber = new Contasreceber();
        }
        datalancamentojDateChooser.setDate(new Date());
        URL url = this.getClass().getResource("/imagens/logo_mini.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        numeroDocumentojTextField = new javax.swing.JTextField();
        datalancamentojDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
            maskPattern, placeHolder));
    jLabel2 = new javax.swing.JLabel();
    dataVencimentojDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
        maskPattern, placeHolder));
jLabel3 = new javax.swing.JLabel();
jLabel4 = new javax.swing.JLabel();
clientejTextField = new javax.swing.JTextField();
jLabel5 = new javax.swing.JLabel();
valorContajTextField = new javax.swing.JTextField();
jLabel8 = new javax.swing.JLabel();
observacaojTextField = new javax.swing.JTextField();
nomeClientejTextField = new javax.swing.JTextField();
jPanel4 = new javax.swing.JPanel();
salvarjButton2 = new javax.swing.JButton();
jButton2 = new javax.swing.JButton();

setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
setTitle("Cadastrar Contas a Pagar");

jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

jLabel1.setText("Nº Documento");

datalancamentojDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusGained(java.awt.event.FocusEvent evt) {
        datalancamentojDateChooserFocusGained(evt);
    }
    });

    jLabel2.setText("Data Lançamento");

    dataVencimentojDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dataVencimentojDateChooserFocusGained(evt);
        }
    });

    jLabel3.setText("Data Vencimento");

    jLabel4.setText("Cliente ( F2 para Consultar)");

    clientejTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            clientejTextFieldKeyPressed(evt);
        }
    });

    jLabel5.setText("Valor da Conta R$");

    valorContajTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    valorContajTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            valorContajTextFieldKeyReleased(evt);
        }
    });

    jLabel8.setText("Observação");

    nomeClientejTextField.setEditable(false);
    nomeClientejTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            nomeClientejTextFieldKeyPressed(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(numeroDocumentojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addGap(28, 28, 28)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(datalancamentojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addGap(19, 19, 19))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addComponent(dataVencimentojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel4)
                    .addContainerGap())
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addComponent(clientejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(nomeClientejTextField)
                    .addGap(23, 23, 23))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(valorContajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(observacaojTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addGap(20, 20, 20))))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(jLabel2)
                .addComponent(jLabel3))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(numeroDocumentojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(datalancamentojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(dataVencimentojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel4)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(clientejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(nomeClientejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel5)
                .addComponent(jLabel8))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(valorContajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(observacaojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    salvarjButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    salvarjButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tick.png"))); // NOI18N
    salvarjButton2.setText("Salvar");
    salvarjButton2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    salvarjButton2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
    salvarjButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            salvarjButton2ActionPerformed(evt);
        }
    });
    jPanel4.add(salvarjButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

    jButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cross.png"))); // NOI18N
    jButton2.setText("Fechar");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });
    jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(64, 64, 64))))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void datalancamentojDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_datalancamentojDateChooserFocusGained

    }//GEN-LAST:event_datalancamentojDateChooserFocusGained

    private void dataVencimentojDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataVencimentojDateChooserFocusGained

    }//GEN-LAST:event_dataVencimentojDateChooserFocusGained

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void salvarjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarjButton2ActionPerformed
        if (validarCampos()) {
            ContasReceberController contasReceberController = new ContasReceberController();
            Contasreceberpagamento contasreceberpagamento = contasReceberController.consultarContaReceberPagamento(1);
            VendedorController vendedorController = new VendedorController();
            Vendedor vendedor = vendedorController.consultarVendedorId(1);
            contasReceber.setCliente(cliente);
            contasReceber.setDataLancamento(datalancamentojDateChooser.getDate());
            contasReceber.setDataVencimento(dataVencimentojDateChooser.getDate());
            contasReceber.setEmpresa(config.getEmpresa());
            contasReceber.setNumeroDocumento(numeroDocumentojTextField.getText());
            contasReceber.setValorConta(Formatacao.formatarStringDouble(valorContajTextField.getText()));
            contasReceber.setContasreceberpagamento(contasreceberpagamento);
            contasReceber.setVendedor(vendedor);
            contasReceber.setPagamento("NAO");
            contasReceber.setTipo("C");
            contasReceberController.salvarContasReceber(contasReceber);
            telaConsulta.carregarContas();
            this.dispose();
        }
    }//GEN-LAST:event_salvarjButton2ActionPerformed

    private void clientejTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clientejTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F2){
            new FrmConsultaClientes(config, this.usuarioLogado, this);
        }
    }//GEN-LAST:event_clientejTextFieldKeyPressed

    private void valorContajTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorContajTextFieldKeyReleased
        valorContajTextField.setText(Formatacao.decinalValorMonetario(valorContajTextField.getText()));
    }//GEN-LAST:event_valorContajTextFieldKeyReleased

    private void nomeClientejTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomeClientejTextFieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeClientejTextFieldKeyPressed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField clientejTextField;
    private com.toedter.calendar.JDateChooser dataVencimentojDateChooser;
    private com.toedter.calendar.JDateChooser datalancamentojDateChooser;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField nomeClientejTextField;
    private javax.swing.JTextField numeroDocumentojTextField;
    private javax.swing.JTextField observacaojTextField;
    private javax.swing.JButton salvarjButton2;
    private javax.swing.JTextField valorContajTextField;
    // End of variables declaration//GEN-END:variables
    
    private void preencherCampos(){
        numeroDocumentojTextField.setText(contasReceber.getNumeroDocumento());
        datalancamentojDateChooser.setDate(contasReceber.getDataLancamento());
        dataVencimentojDateChooser.setDate(contasReceber.getDataVencimento());
        cliente = contasReceber.getCliente();
        if (cliente!=null){
            clientejTextField.setText(String.valueOf(cliente.getIdcliente()));
            nomeClientejTextField.setText(cliente.getNome());
        }
        valorContajTextField.setText(Formatacao.foramtarDoubleString(contasReceber.getValorConta()));
    }
    
    private void funcaoVisualizar(){
        numeroDocumentojTextField.setEditable(false);
        datalancamentojDateChooser.setEnabled(false);
        dataVencimentojDateChooser.setEnabled(false);
        clientejTextField.setEditable(false);
        valorContajTextField.setEditable(false);
        observacaojTextField.setEditable(false);
        salvarjButton2.setEnabled(false);
    }
    
    private void consultaCliente(int idCliente){
        ClienteController clienteController = new ClienteController();
        cliente = clienteController.consultarClienteId(idCliente);
    }

    public void setData(Object objeto) {
        
    }

    public void setBanco(Banco banco) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setModelProduto(Produto produto, Estoque estoque) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setNFe(List<NfProdutos> listaProdutos, List<NfDuplicatas> listaDuplicatas, NotaEletronica nota, Fornecedor fornecedor) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setAlterarValorVenda(Estoque estoque) {
        throw new UnsupportedOperationException("Not supported yet.");
    }


    public void setForPedido(Object objeto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    public boolean validarCampos(){
        String erros = "";
        boolean retorno = true;
        if (dataVencimentojDateChooser.getDate()==null){
            retorno = false;
            erros = erros + "Data Vencimento não é válida\\n";
        }
        if (datalancamentojDateChooser.getDate()==null){
            erros = erros +  "Data Lançamento não é válida\\n";
            retorno = false;
        }
        if (clientejTextField.getText().length()<=0){
            erros = erros +  "Campo cliente não preenchido\\n";
            retorno = false;
        }
        if (this.cliente==null){
            erros = erros + "cliente não selecionado\\n";
            retorno = false;
        }
        if (valorContajTextField.getText().length()<=0){
            erros = erros + "Valor da Conta dever ser preenchido";
        }
        if (retorno==false){
            JOptionPane.showMessageDialog(rootPane, erros);
        }
        return retorno;
    }

    public void setPlanoContas(Object objeto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setCliente(Object objeto) {
        this.cliente = new Cliente();
        this.cliente = (Cliente) objeto;
        if(cliente!=null){
            clientejTextField.setText(String.valueOf(cliente.getIdcliente()));
            nomeClientejTextField.setText(cliente.getNome());
        }
    }

    public void setFornecedor(Object objeto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setProdutoXML(Produto produto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setArquivo(File arquivo) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
   


}


//*
 //* To change this template, choose Tools | Templates
 //* and open the template in the editor.
 //*///

/*
 * FrmConsultaCaixa.java
 *
 * Created on 23/09/2009, 14:02:05
 */

package telas.movimentoBanco;


import Regras.Formatacao;
import controler.ImprimirJtable;
import controler.ItelaConsulta;
import beanController.NfDuplicatas;
import beanController.NfProdutos;
import beanController.NotaEletronica;
import facade.BancoFacade;
import facade.MovimentoBancoFacade;
import java.awt.Component;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import model.Banco;
import model.Estoque;
import model.Fornecedor;
import model.Movimentobanco;


/**
 *
 * @author Wolverine
 */
public class FrmConsultaBanco extends javax.swing.JFrame  implements ItelaConsulta{

    private ConsultaMovimentoBancoTableModel model;
    private Movimentobanco banco;
    private String inicio;
    private String fim;
    private DefaultTableCellRenderer renderer;
    private Banco bancoselecionado;
   

    /** Creates new form FrmConsultaCaixa */
    public FrmConsultaBanco() throws Exception {
           
            this.renderer = new DefaultTableCellRenderer(){
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                        boolean isSelected, boolean hasFocus, int row, int column) {

                    String valorFormatado;
                    if (value instanceof Double) {
                        Double valor = (Double) value;

                        NumberFormat format = NumberFormat.getCurrencyInstance();
                        format.setMinimumFractionDigits(2);
                        valorFormatado = format.format(valor);
                    } else {
                        valorFormatado = value.toString();
                    }

                    Component comp = super.getTableCellRendererComponent(table, valorFormatado,
                            isSelected, hasFocus, row, column);

                    return comp;
                }
        };
        renderer.setHorizontalAlignment(SwingConstants.RIGHT);
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo_mini.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        gerarData();
        List<Banco> listaBanco = new ArrayList<Banco>();
        BancoFacade facade = new BancoFacade();
        listaBanco = facade.listar();
        Formatacao.preencherComobox(listaBanco, bancojComboBox);
        this.setVisible(true);
    }

    public String getFim() {
        return fim;
    }

    public void setFim(String fim) {
        this.fim = fim;
    }

    public String getInicio() {
        return inicio;
    }

    public void setInicio(String inicio) {
        this.inicio = inicio;
    }



    public final void gerarData(){
        Calendar cal = Calendar.getInstance();//Instancia um Calendario
        cal.setTime(new Date (System.currentTimeMillis()));//Seta da data de inicio no calendario
        DateFormat df = new SimpleDateFormat("yyy/MM/dd");
        setFim(df.format(cal.getTime()));
        cal.add(Calendar.DAY_OF_WEEK, -30);//adiciona mais um dia na data do calendario
        setInicio(df.format(cal.getTime()));

        
    }


    public Movimentobanco getCaixa() {
        return banco;
    }

    public void setCaixa(Movimentobanco caixa) {
        this.banco = caixa;
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AssociadosjPanel = new javax.swing.JPanel();
        HistoricojTextField = new javax.swing.JTextField();
        TabeladeAssociadosScrollPane = new javax.swing.JScrollPane();
        ConsultaCaixajTable = new javax.swing.JTable();
        NomedoAssociadojLabel = new javax.swing.JLabel();
        BarradeTarefasjToolBar = new javax.swing.JToolBar();
        caixaAdicionarjButton = new javax.swing.JButton();
        estornojButton = new javax.swing.JButton();
        caixaPesquisarjButton = new javax.swing.JButton();
        SeparadordeTarefasjSeparator = new javax.swing.JToolBar.Separator();
        caixaImprimirjButton = new javax.swing.JButton();
        caixaVisualizarjButton = new javax.swing.JButton();
        caixaRelatoriojButton = new javax.swing.JButton();
        caixaVoltarjButton = new javax.swing.JButton();
        bancojComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta Movimento de Caixa");
        setIconImages(null);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AssociadosjPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        AssociadosjPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        AssociadosjPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        HistoricojTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                HistoricojTextFieldKeyReleased(evt);
            }
        });
        AssociadosjPanel.add(HistoricojTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 460, -1));

        ConsultaCaixajTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No. Lancamento", "Data", "Histórico", "Valor Entrada", "Valor Saída"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ConsultaCaixajTable.setToolTipText("");
        ConsultaCaixajTable.setAutoscrolls(false);
        ConsultaCaixajTable.getColumnModel().getColumn(0).setPreferredWidth(30);
        ConsultaCaixajTable.getColumnModel().getColumn(1).setPreferredWidth(30);
        ConsultaCaixajTable.getColumnModel().getColumn(2).setPreferredWidth(300);
        ConsultaCaixajTable.getColumnModel().getColumn(3).setPreferredWidth(30);
        ConsultaCaixajTable.getColumnModel().getColumn(4).setPreferredWidth(30);
        ConsultaCaixajTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConsultaCaixajTableMouseClicked(evt);
            }
        });
        TabeladeAssociadosScrollPane.setViewportView(ConsultaCaixajTable);
        ConsultaCaixajTable.getColumnModel().getColumn(0).setPreferredWidth(20);
        ConsultaCaixajTable.getColumnModel().getColumn(1).setPreferredWidth(20);
        ConsultaCaixajTable.getColumnModel().getColumn(2).setResizable(false);
        ConsultaCaixajTable.getColumnModel().getColumn(2).setPreferredWidth(300);
        ConsultaCaixajTable.getColumnModel().getColumn(3).setPreferredWidth(30);
        ConsultaCaixajTable.getColumnModel().getColumn(4).setPreferredWidth(30);

        AssociadosjPanel.add(TabeladeAssociadosScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 820, 250));

        NomedoAssociadojLabel.setText("Histórico");
        AssociadosjPanel.add(NomedoAssociadojLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 23, -1, -1));

        BarradeTarefasjToolBar.setFloatable(false);
        BarradeTarefasjToolBar.setRollover(true);

        caixaAdicionarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/dinheiromais.png"))); // NOI18N
        caixaAdicionarjButton.setText("Lançar");
        caixaAdicionarjButton.setToolTipText("Voltar");
        caixaAdicionarjButton.setFocusable(false);
        caixaAdicionarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        caixaAdicionarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        caixaAdicionarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        caixaAdicionarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        caixaAdicionarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        caixaAdicionarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caixaAdicionarjButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar.add(caixaAdicionarjButton);

        estornojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/dinheiromenos.png"))); // NOI18N
        estornojButton.setText("Estornar");
        estornojButton.setToolTipText("Excluir Lançamento");
        estornojButton.setEnabled(false);
        estornojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        estornojButton.setMaximumSize(new java.awt.Dimension(80, 90));
        estornojButton.setMinimumSize(new java.awt.Dimension(80, 90));
        estornojButton.setPreferredSize(new java.awt.Dimension(80, 90));
        estornojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        estornojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estornojButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar.add(estornojButton);

        caixaPesquisarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        caixaPesquisarjButton.setText("Pesquisar");
        caixaPesquisarjButton.setToolTipText("Pesquisar Lançamento");
        caixaPesquisarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        caixaPesquisarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        caixaPesquisarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        caixaPesquisarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        caixaPesquisarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        caixaPesquisarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caixaPesquisarjButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar.add(caixaPesquisarjButton);
        BarradeTarefasjToolBar.add(SeparadordeTarefasjSeparator);

        caixaImprimirjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/impressao.png"))); // NOI18N
        caixaImprimirjButton.setText("Imprimir");
        caixaImprimirjButton.setToolTipText("Imprimir");
        caixaImprimirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        caixaImprimirjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        caixaImprimirjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        caixaImprimirjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        caixaImprimirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        caixaImprimirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caixaImprimirjButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar.add(caixaImprimirjButton);

        caixaVisualizarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/visualizar.png"))); // NOI18N
        caixaVisualizarjButton.setText("Visualizar");
        caixaVisualizarjButton.setToolTipText("Visualizar Lançamento");
        caixaVisualizarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        caixaVisualizarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        caixaVisualizarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        caixaVisualizarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        caixaVisualizarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        caixaVisualizarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caixaVisualizarjButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar.add(caixaVisualizarjButton);

        caixaRelatoriojButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/relatorio.png"))); // NOI18N
        caixaRelatoriojButton.setText("Relatórios");
        caixaRelatoriojButton.setToolTipText("Relatórios");
        caixaRelatoriojButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        caixaRelatoriojButton.setMaximumSize(new java.awt.Dimension(80, 90));
        caixaRelatoriojButton.setMinimumSize(new java.awt.Dimension(80, 90));
        caixaRelatoriojButton.setPreferredSize(new java.awt.Dimension(80, 90));
        caixaRelatoriojButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        caixaRelatoriojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caixaRelatoriojButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar.add(caixaRelatoriojButton);

        caixaVoltarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/voltar.png"))); // NOI18N
        caixaVoltarjButton.setText("Voltar");
        caixaVoltarjButton.setToolTipText("Voltar");
        caixaVoltarjButton.setFocusable(false);
        caixaVoltarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        caixaVoltarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        caixaVoltarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        caixaVoltarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        caixaVoltarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        caixaVoltarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caixaVoltarjButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar.add(caixaVoltarjButton);

        AssociadosjPanel.add(BarradeTarefasjToolBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, 590, 80));

        bancojComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bancojComboBoxItemStateChanged(evt);
            }
        });
        AssociadosjPanel.add(bancojComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 40, 320, -1));

        jLabel1.setText("Selecione o Banco para Utilização");
        AssociadosjPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 25, -1, -1));

        getContentPane().add(AssociadosjPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 430));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void caixaVoltarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaVoltarjButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_caixaVoltarjButtonActionPerformed

    private void caixaAdicionarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaAdicionarjButtonActionPerformed
        try {
            try {
                new FrmLancamentoBanco(this, null, bancoselecionado);
            } catch (ParseException ex) {
                Logger.getLogger(FrmConsultaBanco.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Lançar no Banco\n" + ex);
        }
    }//GEN-LAST:event_caixaAdicionarjButtonActionPerformed

    private void estornojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estornojButtonActionPerformed
         Movimentobanco estorno = new Movimentobanco();
        if (ConsultaCaixajTable.getSelectedRow()>=0){
            banco = model.getMovimentobanco(ConsultaCaixajTable.getSelectedRow());
            estorno.setDataMovimento(banco.getDataMovimento());
            estorno.setPlanoconta(banco.getPlanoconta());
            estorno.setDescricao("Estorno " + banco.getDescricao());
            float valor;
            if (banco.getValorEntrada()>0){
                valor = estorno.getValorEntrada();
                estorno.setValorSaida(banco.getValorEntrada());
                estorno.setValorEntrada(valor);
            }else if (banco.getValorSaida()>0){
                valor = estorno.getValorEntrada();
                estorno.setValorEntrada(banco.getValorSaida());
                estorno.setValorSaida(valor);
            }
            try {
                MovimentoBancoFacade facade = new MovimentoBancoFacade();
                facade.salvarBanco(estorno);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Erro lancas Estorno\n" + ex);
            }
        }
    }//GEN-LAST:event_estornojButtonActionPerformed

    private void HistoricojTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HistoricojTextFieldKeyReleased
        try {
            MovimentoBancoFacade facade = new MovimentoBancoFacade();
            List<Movimentobanco> listaBanco = facade.conusltarMovimentoBanco(HistoricojTextField.getText(), bancoselecionado);
            model = new ConsultaMovimentoBancoTableModel(listaBanco);
            ConsultaCaixajTable.setModel(model);
        } catch (Exception ex) {
            Logger.getLogger(FrmConsultaBanco.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_HistoricojTextFieldKeyReleased

    private void caixaPesquisarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaPesquisarjButtonActionPerformed
        new FrmPesquisaBanco(this, bancoselecionado);
    }//GEN-LAST:event_caixaPesquisarjButtonActionPerformed

    private void caixaVisualizarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaVisualizarjButtonActionPerformed
        try {
            if (ConsultaCaixajTable.getSelectedRow()>=0){
                banco = model.getMovimentobanco(ConsultaCaixajTable.getSelectedRow());
                try {
                    new FrmLancamentoBanco(this, banco, bancoselecionado);
                } catch (ParseException ex) {
                    Logger.getLogger(FrmConsultaBanco.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmConsultaBanco.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_caixaVisualizarjButtonActionPerformed

    private void caixaImprimirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaImprimirjButtonActionPerformed
        new ImprimirJtable(ConsultaCaixajTable, this.getTitle());
        //       URL url = this.getClass().getClassLoader().getResource("caixa\\relatorios\\reportCaixa.jasper");
//       Connection conn = null;
//       try{
//           conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/previsj","root","");
//           JDialog viewer = new JDialog();
//           viewer.setSize(800, 600);
//           viewer.setLocationRelativeTo(null);
//
//            Map parameters = new HashMap();
//
//            parameters.put("REPORT_CONNECTION", conn);
//            parameters.put("codigo", 2);
//            JasperReport relatoriosJasper = (JasperReport) JRLoader.loadObject(url);
//
//            JasperPrint jasperPrint = JasperFillManager.fillReport(relatoriosJasper, parameters);
//            JRViewer jrViewer = new JRViewer(jasperPrint);
//            //JasperViewer jrViewer = new JasperViewer(jasperPrint, true);
//            viewer.getContentPane().add(jrViewer);
//            viewer.setVisible(true);
//
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(this, "Não foi possível gerar o relatório");
//            ex.printStackTrace();
//
//        } finally {
//            try {
//                if (conn != null) {
//                    conn.close();
//                }
//            } catch (SQLException ex) {
//                ex.printStackTrace();
//            }
//
//        }
   
    }//GEN-LAST:event_caixaImprimirjButtonActionPerformed

    private void ConsultaCaixajTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConsultaCaixajTableMouseClicked
       if (evt.getClickCount()>0){
           estornojButton.setEnabled(true);
       }
    }//GEN-LAST:event_ConsultaCaixajTableMouseClicked

    private void caixaRelatoriojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaRelatoriojButtonActionPerformed
       new FrmPesquisaBanco();
    }//GEN-LAST:event_caixaRelatoriojButtonActionPerformed

    private void bancojComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bancojComboBoxItemStateChanged
        this.bancoselecionado = (Banco) bancojComboBox.getSelectedItem();
    }//GEN-LAST:event_bancojComboBoxItemStateChanged

    /**
    * @param args the command line arguments
    */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AssociadosjPanel;
    private javax.swing.JToolBar BarradeTarefasjToolBar;
    private javax.swing.JTable ConsultaCaixajTable;
    private javax.swing.JTextField HistoricojTextField;
    private javax.swing.JLabel NomedoAssociadojLabel;
    private javax.swing.JToolBar.Separator SeparadordeTarefasjSeparator;
    private javax.swing.JScrollPane TabeladeAssociadosScrollPane;
    private javax.swing.JComboBox bancojComboBox;
    private javax.swing.JButton caixaAdicionarjButton;
    private javax.swing.JButton caixaImprimirjButton;
    private javax.swing.JButton caixaPesquisarjButton;
    private javax.swing.JButton caixaRelatoriojButton;
    private javax.swing.JButton caixaVisualizarjButton;
    private javax.swing.JButton caixaVoltarjButton;
    private javax.swing.JButton estornojButton;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    public void setData(Object obejeto) {
        MovimentoBancoFacade facade = new MovimentoBancoFacade();
        try {
            List<Movimentobanco> listaBanco;
            listaBanco = facade.consutlarMovimentoBanco(getInicio(), getFim(), bancoselecionado);
            model = new ConsultaMovimentoBancoTableModel(listaBanco);
       } catch (Exception ex) {
           ex.printStackTrace();
           model = new ConsultaMovimentoBancoTableModel(new ArrayList<Movimentobanco>());
       }
        ConsultaCaixajTable.setModel(model);
        ConsultaCaixajTable.setDefaultRenderer(Double.class, renderer);
        ConsultaCaixajTable.getColumnModel().getColumn(0).setPreferredWidth(30);
        ConsultaCaixajTable.getColumnModel().getColumn(1).setPreferredWidth(20);
        ConsultaCaixajTable.getColumnModel().getColumn(2).setPreferredWidth(300);
        ConsultaCaixajTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        ConsultaCaixajTable.getColumnModel().getColumn(4).setPreferredWidth(50);
    }

    public void setBanco(Banco banco) {
        this.bancoselecionado = banco;
        try {
             MovimentoBancoFacade facade = new MovimentoBancoFacade();

            List<Movimentobanco> listaBanco = new ArrayList<Movimentobanco>();
            listaBanco= facade.consutlarMovimentoBanco(getInicio(), getFim(), bancoselecionado);
            model = new ConsultaMovimentoBancoTableModel(listaBanco);
       } catch (Exception ex) {
           ex.printStackTrace();
           model = new ConsultaMovimentoBancoTableModel(new ArrayList<Movimentobanco>());
       }
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo_mini.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        ConsultaCaixajTable.setModel(model);
        ConsultaCaixajTable.setDefaultRenderer(Double.class, renderer);
        ConsultaCaixajTable.getColumnModel().getColumn(0).setPreferredWidth(30);
        ConsultaCaixajTable.getColumnModel().getColumn(1).setPreferredWidth(20);
        ConsultaCaixajTable.getColumnModel().getColumn(2).setPreferredWidth(300);
        ConsultaCaixajTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        ConsultaCaixajTable.getColumnModel().getColumn(4).setPreferredWidth(50);
    }

    public void setModelProduto() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setNFe() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setNFe(List<NfProdutos> listaProdutos, List<NfDuplicatas> listaDuplicatas, NotaEletronica nota, Fornecedor fornecedor) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setAlterarValorVenda(Estoque estoque) {
        throw new UnsupportedOperationException("Not supported yet.");
    }



}

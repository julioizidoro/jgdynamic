/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package telas.ContasPagar;

import Regras.*;
import com.toedter.calendar.JTextFieldDateEditor;
import controler.Config;
import controler.UsuarioLogado;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import model.*;
import telas.ControleCheques.ControleChequeBean;
import telas.ControleCheques.FrmControleCheques;

/**
 *
 * @author Wolverine
 */
public class FrmPagamento extends javax.swing.JFrame implements IContasPagar{
    
    private List<FormaPagamento> listaFormaPagamento;
    private List<Contaspagar> listaPagamento;
    
    private PagamentoTableModel modelContas;
    private FormaPagamentoTableModel1 modelForma;
    
    private String datePattern;
    private String maskPattern;
    private char placeHolder;
    
    private IContasPagar iContasPagar;
    
    private Pagamentocontaspagar pagamentoContasPagar;
    private int tipoPagamento;
    private Config config;
    private UsuarioLogado usuario;
    List<ControleChequeBean> listaCheque;

    /**
     * Creates new form FrmPagamento
     */
    public FrmPagamento(List<Contaspagar> listaPagamento, IContasPagar iContasPagar, int tipoPagamento, Config config, UsuarioLogado usuario) {
        this.iContasPagar= iContasPagar;
        this.tipoPagamento= tipoPagamento;
        this.config = config;
        this.usuario = usuario;
        this.listaPagamento = listaPagamento;
        datePattern = "dd/MM/yyyy";
        maskPattern = "##/##/##";
        placeHolder = '_';
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo_mini.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        dataVencimentojDateChooser.setDate(new Date());
        carregarBancos();
        carregarModelContasPagar();
        carregarModelFormaPagamento();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pagamentojTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        formaPagamentojTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        valorPagamentojTextField = new javax.swing.JTextField();
        valorDiferencaojTextField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        formaPagamentojComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        valorPagojTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        dataVencimentojDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
            maskPattern, placeHolder));
    jLabel5 = new javax.swing.JLabel();
    jLabel6 = new javax.swing.JLabel();
    valorDescontojTextField = new javax.swing.JTextField();
    jLabel7 = new javax.swing.JLabel();
    valorAcrescimojTextField = new javax.swing.JTextField();
    bancojComboBox = new javax.swing.JComboBox();
    jLabel8 = new javax.swing.JLabel();
    jButton4 = new javax.swing.JButton();
    jPanel4 = new javax.swing.JPanel();
    salvarjButton2 = new javax.swing.JButton();
    jButton3 = new javax.swing.JButton();

    jTable2.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
    ));
    jScrollPane2.setViewportView(jTable2);

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Pagamento de Contas");

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contas para Pagamento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

    pagamentojTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4", "Título 5"
        }
    ));
    jScrollPane1.setViewportView(pagamentojTable);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1)
            .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
            .addContainerGap())
    );

    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Formas de Pagamento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

    formaPagamentojTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null},
            {null, null},
            {null, null},
            {null, null}
        },
        new String [] {
            "Title 2", "Title 4"
        }
    ));
    jScrollPane3.setViewportView(formaPagamentojTable);

    jLabel3.setText("Total Para Pagamento");

    jLabel4.setText("Diferença a Pagar");

    valorPagamentojTextField.setEditable(false);
    valorPagamentojTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

    valorDiferencaojTextField.setEditable(false);
    valorDiferencaojTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(valorPagamentojTextField))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(valorDiferencaojTextField))))
            .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3)
                .addComponent(jLabel4))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(valorPagamentojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(valorDiferencaojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(0, 0, Short.MAX_VALUE))
    );

    jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jLabel1.setText("Forma de Pagamento");

    formaPagamentojComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Caixa", "Cheque", "Debito CC", "Frente Caixa", "Internet", " " }));
    formaPagamentojComboBox.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            formaPagamentojComboBoxItemStateChanged(evt);
        }
    });

    jLabel2.setText("Valor Pago");

    valorPagojTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    valorPagojTextField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            valorPagojTextFieldFocusGained(evt);
        }
    });
    valorPagojTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            valorPagojTextFieldKeyPressed(evt);
        }
        public void keyReleased(java.awt.event.KeyEvent evt) {
            valorPagojTextFieldKeyReleased(evt);
        }
    });

    jButton1.setText("Incluir Forma");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    jButton2.setText("Excluir Forma");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    dataVencimentojDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dataVencimentojDateChooserFocusGained(evt);
        }
    });

    jLabel5.setText("Data Pagamento");

    jLabel6.setText("Valor Desconto");

    valorDescontojTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    valorDescontojTextField.setToolTipText("Pressione ENTER para aceitar Valor");
    valorDescontojTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            valorDescontojTextFieldKeyPressed(evt);
        }
        public void keyReleased(java.awt.event.KeyEvent evt) {
            valorDescontojTextFieldKeyReleased(evt);
        }
    });

    jLabel7.setText("Valor Acrescimo");

    valorAcrescimojTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    valorAcrescimojTextField.setToolTipText("Pressione ENTER para aceitar Valor");
    valorAcrescimojTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            valorAcrescimojTextFieldKeyPressed(evt);
        }
        public void keyReleased(java.awt.event.KeyEvent evt) {
            valorAcrescimojTextFieldKeyReleased(evt);
        }
    });

    bancojComboBox.setEnabled(false);

    jLabel8.setText("Banco");

    jButton4.setText("Cheques");
    jButton4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton4ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jButton1)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(formaPagamentojComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5)
                    .addComponent(dataVencimentojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(25, 25, 25)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(jLabel6)
                                .addComponent(valorDescontojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(9, 9, 9)
                                    .addComponent(jLabel7))
                                .addComponent(valorAcrescimojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(bancojComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(18, 18, 18)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(valorPagojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addContainerGap())
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addComponent(jButton2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4)
                    .addGap(30, 30, 30))))
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6)
                        .addComponent(jLabel7))
                    .addGap(6, 6, 6)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(valorDescontojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(valorAcrescimojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(dataVencimentojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(jLabel2)
                .addComponent(jLabel8))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(formaPagamentojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(valorPagojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(bancojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton1)
                .addComponent(jButton2)
                .addComponent(jButton4))
            .addContainerGap())
    );

    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    salvarjButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    salvarjButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tick.png"))); // NOI18N
    salvarjButton2.setText("Efetuar Pagamento");
    salvarjButton2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    salvarjButton2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
    salvarjButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            salvarjButton2ActionPerformed(evt);
        }
    });

    jButton3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cross.png"))); // NOI18N
    jButton3.setText("Fechar");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addGap(61, 61, 61)
            .addComponent(salvarjButton2)
            .addGap(82, 82, 82)
            .addComponent(jButton3)
            .addContainerGap(99, Short.MAX_VALUE))
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton3)
                .addComponent(salvarjButton2))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addContainerGap())
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        double valorDiferencao = Formatacao.ConvercaoMonetariaDouble(valorDiferencaojTextField.getText());
        if (valorDiferencao > 0) {
            String forma = (String) formaPagamentojComboBox.getSelectedItem();
            boolean achou = false;
            double valorForma = Formatacao.ConvercaoMonetariaDouble(valorPagojTextField.getText());
            if (valorDiferencao >= valorForma) {
                for (int i = 0; i < listaFormaPagamento.size(); i++) {
                    if (listaFormaPagamento.get(i).getDescricao().equalsIgnoreCase(forma)) {
                        listaFormaPagamento.get(i).setValor(Formatacao.ConvercaoMonetariaDouble(valorPagojTextField.getText()));
                        achou = true;
                        i = listaFormaPagamento.size() + 10;
                    }
                }
                if (!achou) {
                    FormaPagamento fp = new FormaPagamento();
                    fp.setDescricao(forma);
                    if ((forma.equalsIgnoreCase("caixa")) || (forma.equalsIgnoreCase("Frente Caixa"))){
                        fp.setIdBanco(0);
                    }else {
                        Banco banco = (Banco) bancojComboBox.getSelectedItem();
                        fp.setIdBanco(banco.getIdbanco());
                    }
                    fp.setValor(Formatacao.formatarStringDouble(valorPagojTextField.getText()));
                    listaFormaPagamento.add(fp);
                    valorPagojTextField.setText("");
                }
                carregarModelFormaPagamento();
            } else {
                JOptionPane.showMessageDialog(null, "Verifique valores");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Verifique valores");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         String forma = (String) formaPagamentojComboBox.getSelectedItem();
        for(int i=0;i<listaFormaPagamento.size();i++){
            if (listaFormaPagamento.get(i).getDescricao().equalsIgnoreCase(forma)){
                listaFormaPagamento.get(i).setValor(0);
                i = listaFormaPagamento.size() + 10;
            }
        }
        carregarModelFormaPagamento();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.listaPagamento = null;
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void valorPagojTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorPagojTextFieldKeyReleased
        valorPagojTextField.setText(Formatacao.decinalValorMonetario(valorPagojTextField.getText()));
    }//GEN-LAST:event_valorPagojTextFieldKeyReleased

    private void salvarjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarjButton2ActionPerformed
        double diferenca = Formatacao.ConvercaoMonetariaDouble(valorDiferencaojTextField.getText());
        if (diferenca == 0) {
            salvarPagamentoConta();
            salvarFormaPagamentoConta();
            salvarContasPagar();
            if (listaCheque!=null){
                salvarSituacaoCheque("Pagto", "Pagto");
            }
            iContasPagar.setPagamento();
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Valor não confere");
        }
    }//GEN-LAST:event_salvarjButton2ActionPerformed

    private void dataVencimentojDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataVencimentojDateChooserFocusGained

            }//GEN-LAST:event_dataVencimentojDateChooserFocusGained

    private void valorDescontojTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorDescontojTextFieldKeyReleased
        valorDescontojTextField.setText(Formatacao.decinalValorMonetario(valorDescontojTextField.getText()));
    }//GEN-LAST:event_valorDescontojTextFieldKeyReleased

    private void valorAcrescimojTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorAcrescimojTextFieldKeyReleased
        valorAcrescimojTextField.setText(Formatacao.decinalValorMonetario(valorAcrescimojTextField.getText()));
    }//GEN-LAST:event_valorAcrescimojTextFieldKeyReleased

    private void formaPagamentojComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_formaPagamentojComboBoxItemStateChanged
        String forma = (String) formaPagamentojComboBox.getSelectedItem();
        if (!forma.equalsIgnoreCase("Caixa")){
            bancojComboBox.setEnabled(true);
        }else bancojComboBox.setEnabled(true);
    }//GEN-LAST:event_formaPagamentojComboBoxItemStateChanged

    private void valorDescontojTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorDescontojTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            carregarModelFormaPagamento();
        }
    }//GEN-LAST:event_valorDescontojTextFieldKeyPressed

    private void valorAcrescimojTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorAcrescimojTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            carregarModelFormaPagamento();
        }
    }//GEN-LAST:event_valorAcrescimojTextFieldKeyPressed

    private void valorPagojTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorPagojTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            jButton1ActionPerformed(null);
        }
    }//GEN-LAST:event_valorPagojTextFieldKeyPressed

    private void valorPagojTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valorPagojTextFieldFocusGained
        valorPagojTextField.selectAll();
    }//GEN-LAST:event_valorPagojTextFieldFocusGained

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        new FrmControleCheques(config, usuario, this);
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox bancojComboBox;
    private com.toedter.calendar.JDateChooser dataVencimentojDateChooser;
    private javax.swing.JComboBox formaPagamentojComboBox;
    private javax.swing.JTable formaPagamentojTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable pagamentojTable;
    private javax.swing.JButton salvarjButton2;
    private javax.swing.JTextField valorAcrescimojTextField;
    private javax.swing.JTextField valorDescontojTextField;
    private javax.swing.JTextField valorDiferencaojTextField;
    private javax.swing.JTextField valorPagamentojTextField;
    private javax.swing.JTextField valorPagojTextField;
    // End of variables declaration//GEN-END:variables

    public void carregarModelContasPagar(){
        if (listaPagamento==null){
            listaPagamento = new ArrayList<Contaspagar>();
        }
        modelContas = new PagamentoTableModel(listaPagamento);
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.RIGHT);
        pagamentojTable.setModel(modelContas);
        pagamentojTable.getColumnModel().getColumn(0).setPreferredWidth(20);
        pagamentojTable.getColumnModel().getColumn(1).setPreferredWidth(300);
        pagamentojTable.getColumnModel().getColumn(2).setPreferredWidth(40);
        pagamentojTable.getColumnModel().getColumn(3).setPreferredWidth(40);
        pagamentojTable.repaint();
        
        double valorPagamento = 0;
        for (int i=0;i<listaPagamento.size();i++){
            if (listaPagamento.get(i).getValorParcial()>0){
                valorPagamento = valorPagamento + listaPagamento.get(i).getValorParcial();
            }else valorPagamento = valorPagamento + listaPagamento.get(i).getValorConta();
        }
        valorPagamentojTextField.setText(Formatacao.foramtarDoubleString(valorPagamento));
        valorPagojTextField.setText(Formatacao.foramtarDoubleString(valorPagamento));

    }
    
    public void carregarModelFormaPagamento(){
        if (listaFormaPagamento==null){
         listaFormaPagamento = new ArrayList<FormaPagamento>();
        }
        modelForma = new FormaPagamentoTableModel1(listaFormaPagamento);
       
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.RIGHT);
        formaPagamentojTable.setModel(modelForma);
        formaPagamentojTable.getColumnModel().getColumn(0).setPreferredWidth(30);
        formaPagamentojTable.getColumnModel().getColumn(1).setCellRenderer(renderer);
        formaPagamentojTable.getColumnModel().getColumn(1).setPreferredWidth(40);
        formaPagamentojTable.repaint();
        
        double valorforma = 0;
        for (int i=0;i<listaFormaPagamento.size();i++){
            valorforma = valorforma + listaFormaPagamento.get(i).getValor();
        }
        double valorPagamento = Formatacao.ConvercaoMonetariaDouble(valorPagamentojTextField.getText());
        
        double valorDesconto = 0;
        if (valorDescontojTextField.getText().length()>0){
            valorDesconto = Formatacao.formatarStringDouble(valorDescontojTextField.getText());
        }
        
        double valorAcrescimo = 0;
        if (valorAcrescimojTextField.getText().length()>0){
            valorAcrescimo = Formatacao.formatarStringDouble(valorAcrescimojTextField.getText());
        }
        double valorDiferencao = (valorPagamento + valorAcrescimo) - (valorforma + valorDesconto);
        valorDiferencaojTextField.setText(Formatacao.foramtarDoubleString(valorDiferencao));
        valorPagojTextField.setText(Formatacao.foramtarDoubleString(valorDiferencao));
    }
    
    
    public void salvarPagamentoConta(){
        pagamentoContasPagar  = new Pagamentocontaspagar();
        pagamentoContasPagar.setDataPagamento(dataVencimentojDateChooser.getDate());
         double valorDesconto = 0;
        if (valorDescontojTextField.getText().length()>0){
            valorDesconto = Formatacao.formatarStringDouble(valorDescontojTextField.getText());
        }
        
        double valorAcrescimo = 0;
        if (valorAcrescimojTextField.getText().length()>0){
            valorAcrescimo = Formatacao.formatarStringDouble(valorAcrescimojTextField.getText());
        }
        pagamentoContasPagar.setDescontos(valorDesconto);
        pagamentoContasPagar.setJuros(valorAcrescimo);
        
        double valorPagamento = Formatacao.ConvercaoMonetariaDouble(valorPagamentojTextField.getText());
        valorPagamento = (valorPagamento + valorAcrescimo) - valorDesconto;
        pagamentoContasPagar.setValorPago(valorPagamento);
        pagamentoContasPagar.setEmpresa(this.config.getEmpresa().getIdempresa());
        
        ContasPagarController contasPagarController = new ContasPagarController();
        pagamentoContasPagar = contasPagarController.salvarPagamentoContasPagar(pagamentoContasPagar);
        
    }
    
    public void salvarFormaPagamentoConta(){
        ContasPagarController contasPagarController = new ContasPagarController();
        for (int i=0;i<listaFormaPagamento.size();i++){
            Formacontaspagar formaContasPagar = new Formacontaspagar();
            formaContasPagar.setFormaPagamento(listaFormaPagamento.get(i).getDescricao());
            formaContasPagar.setIdBanco(listaFormaPagamento.get(i).getIdBanco());
            formaContasPagar.setPagamentocontaspagar(pagamentoContasPagar.getIdpagamentoContasPagar());
            formaContasPagar.setValorPago(listaFormaPagamento.get(i).getValor());
            if (!formaContasPagar.getFormaPagamento().equalsIgnoreCase("Frente Caixa")) {
                if (formaContasPagar.getFormaPagamento().equalsIgnoreCase("Caixa")) {
                    lancarPagamentoCaixa(formaContasPagar);
                } else {
                    lancarPagamentoBanco(formaContasPagar);
                }
            }
            contasPagarController.salvarFormaContasPagar(formaContasPagar);
           
        }
    }
    
    public void lancarPagamentoCaixa(Formacontaspagar formaContasPagar) {
        MovimentoCaixaController movimentoCaixaController = new MovimentoCaixaController();
        Movimentocaixa caixa = new Movimentocaixa();
        caixa.setDataMovimento(this.pagamentoContasPagar.getDataPagamento());
        if (this.listaPagamento.size()==1){
            caixa.setDescricao("Pagto "  + listaPagamento.get(0).getCredor());
        }else caixa.setDescricao("PAGAMENTO DE CONTAS PAGAR");
        caixa.setEmpresa(this.config.getEmpresa().getIdempresa());
        caixa.setPlanoconta(listaPagamento.get(0).getPlanoconta());
        caixa.setUsuarioLancamento(this.usuario.getUsuario().getNome());
        caixa.setValorSaida(formaContasPagar.getValorPago().floatValue());
        caixa.setValorEntrada(0.0f);
        caixa = movimentoCaixaController.salvarCaixa(caixa);
        if (this.listaCheque!=null){
            salvarMovimentoControleCheques(caixa);
        }
    }
    
    public void lancarPagamentoBanco(Formacontaspagar formaContasPagar) {
        MovimentoBancoController movimentoBancoController = new MovimentoBancoController();
        Movimentobanco banco = new Movimentobanco();
        banco.setBanco(formaContasPagar.getIdBanco());
        banco.setDataLancamento(this.pagamentoContasPagar.getDataPagamento());
        banco.setDataMovimento(this.pagamentoContasPagar.getDataPagamento());
        banco.setValorEntrada(0.0f);
        banco.setValorSaida(formaContasPagar.getValorPago().floatValue());
        if (this.listaPagamento.size()==1){
            banco.setDescricao("Pagto "  + this.listaPagamento.get(0).getCredor());
        }else banco.setDescricao("PAGAMENTO DE CONTAS A PAGAR");
        banco.setEmpresa(this.config.getEmpresa().getIdempresa());
        banco.setPlanoconta(listaPagamento.get(0).getPlanoconta());
        movimentoBancoController.salvarBanco(banco);
    }
    
    public void salvarContasPagar(){
        ContasPagarController contasPagarController = new ContasPagarController();
        for(int i=0;i<listaPagamento.size();i++){
            Contaspagar contasPagar = new Contaspagar();
            contasPagar = listaPagamento.get(i);
            contasPagar.setPagamentocontaspagar(pagamentoContasPagar.getIdpagamentoContasPagar());
            contasPagarController.salvar(contasPagar);
            if (listaPagamento.get(i).getValorParcial()>0){
                criarContaParcial(listaPagamento.get(i));
            }
        }
    }
    
    public void carregarBancos(){
        List<Banco> listaBanco = new ArrayList<Banco>();
        BancoController bancoController = new BancoController();
        listaBanco = bancoController.listar();
        bancojComboBox.addItem(null);
        for (int i=0;i<listaBanco.size();i++){
            bancojComboBox.addItem(listaBanco.get(i));
        }
    }
    
    public void registrarMovimentoFinanceiro(){
       for(int i=0;i<this.listaFormaPagamento.size();i++){
           if (this.listaFormaPagamento.get(i).getDescricao().equalsIgnoreCase(datePattern)){
               
           }
       }
    }

    public void setNovaConta() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setPagamento() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setRelContasPagarPeriodo(Date dataInicial, Date dataFinal) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setRelContasPagarFornecedor(int idFornecedor, String razaoSocial) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setRelContasVencidasGeral() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setRelContasVencidasFornecedor(Date dataInicial, Date dataFinal, int idFornecedor, String razaoSocial) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setRelContasPagasPeriodo(Date dataInicial, Date dataFinal) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setRelContasPagasFornecedor(int idFornecedor, String razaoSocial, Date dataInicial, Date dataFinal) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setRelContasPagasPlanoContas(int idConta, String descricao, Date dataInicial, Date dataFinal) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setListaCheques(List<ControleChequeBean> listaCheque, double valorFornecedor) {
        if (listaCheque!=null){
            this.listaCheque = new ArrayList<ControleChequeBean>();
            this.listaCheque = listaCheque;
            for(int i=0;i<listaCheque.size();i++){
                valorFornecedor = valorFornecedor + listaCheque.get(i).getCheque().getValorCheque();
            }
            valorPagojTextField.setText(Formatacao.foramtarDoubleString(valorFornecedor));
            valorPagojTextField.requestFocus();
            valorPagojTextField.selectAll();
        }
    }
    
    public void salvarMovimentoControleCheques(Movimentocaixa caixa){
        ControleChequeController controleChequeController = new ControleChequeController();
        for (int i=0;i<listaCheque.size();i++){
            ChequeMovCaixa mvCaixa = new ChequeMovCaixa();
            mvCaixa.setControlecheques(listaCheque.get(i).getCheque().getIdControleCheques());
            mvCaixa.setMovimentocaixa(caixa.getIdmovimentoCaixa());
            controleChequeController.salvarChequeMovCaixa(mvCaixa);
        } 
    }
    
    public void salvarSituacaoCheque(String local, String situacao){
        ControleChequeController controleChequeController = new ControleChequeController();
        for(int i=0;i<listaCheque.size();i++){
            Controlecheques controlecheques = new Controlecheques();
            controlecheques = listaCheque.get(i).getCheque();
            controlecheques.setLocal(local);
            controlecheques.setSituacao(situacao);
            controleChequeController.salvarCehque(controlecheques);
        }
    }
    
    public void criarContaParcial(Contaspagar contas){
        contas.setValorConta(contas.getValorConta() - contas.getValorParcial());
        contas.setValorParcial(0.0);
        contas.setIdcontasPagar(null);
        contas.setPagamentocontaspagar(1);
        contas.setPagamento("");
        ContasPagarController contasPagarController = new ContasPagarController();
        contasPagarController.salvar(contas);
    }
    
}

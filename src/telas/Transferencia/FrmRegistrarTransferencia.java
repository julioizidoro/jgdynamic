/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmRegistrarTransferencia.java
 *
 * Created on 11/08/2011, 14:16:56
 */
package telas.Transferencia;


import Interfaces.ItelaConsulta;
import Regras.*;
import beanController.NfDuplicatas;
import beanController.NfProdutos;
import beanController.NotaEletronica;
import com.toedter.calendar.JTextFieldDateEditor;
import controler.Config;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.net.URL;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import model.*;
import telas.Produtos.FrmConsultaProdutos;




/**
 *
 * @author Wolverine
 */
public class FrmRegistrarTransferencia extends javax.swing.JFrame implements ItelaConsulta{
    
    private String datePattern;
    private String maskPattern;
    private char placeHolder;
    private Config config;
    private ConsultaTransferencia transferencia;
    private TransferenciaEntradaProdutoTableModel produtoModel;
    private ConsultaTransferencia  alteracao;
    private int linhaAlterar;
    private consultaTransferenciaProduto ConTransferenciaProduto;
    private ITransferenciaEntrada telaConsultaTRansferenciaEntrada;
    private Produto produto;
    private Estoque estoque;

    /** Creates new form FrmRegistrarTransferencia */
    public FrmRegistrarTransferencia(Config config, ConsultaTransferencia listaConsultaTransferencias, ITransferenciaEntrada telaConsultaTRansferenciaEntrada) {
        this.config = config;
        datePattern = "dd/MM/yyyy";
        maskPattern = "##/##/##";
        placeHolder = '_';
        linhaAlterar = -1;
        this.telaConsultaTRansferenciaEntrada = telaConsultaTRansferenciaEntrada;
        this.transferencia = new ConsultaTransferencia();
        this.alteracao = listaConsultaTransferencias;
        initComponents();
        if (alteracao!=null){
            DateFormat ds = new SimpleDateFormat("dd/MM/yyyy");
            transferencia.setListaTransferenciaProduto(alteracao.getListaTransferenciaProduto());
            transferencia.setTransferencia(alteracao.getTransferencia());
            dataFinaljDateChooser.setDate(transferencia.getTransferencia().getDataInicio());
            dataIniciojDateChooser.setDate(transferencia.getTransferencia().getDataFinal());
            calcilarTotais();
        }

        URL url = this.getClass().getResource("/imagens/logo_mini.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        preencherCampos();
        gerarProdutoModel();
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        emitentejComboBox = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        valorTotaljTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        dataIniciojDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
            maskPattern, placeHolder));
    dataFinaljDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
        maskPattern, placeHolder));
jPanel2 = new javax.swing.JPanel();
jLabel19 = new javax.swing.JLabel();
codigojTextField = new javax.swing.JTextField();
quantidadejTextField = new javax.swing.JTextField();
valorUnitariojTextField = new javax.swing.JTextField();
descricaojTextField = new javax.swing.JTextField();
jLabel20 = new javax.swing.JLabel();
jLabel3 = new javax.swing.JLabel();
jLabel4 = new javax.swing.JLabel();
jLabel5 = new javax.swing.JLabel();
estoquejTextField = new javax.swing.JTextField();
jLabel6 = new javax.swing.JLabel();
valorVendajTextField = new javax.swing.JTextField();
valorCustojTextField = new javax.swing.JTextField();
jLabel7 = new javax.swing.JLabel();
jPanel3 = new javax.swing.JPanel();
jScrollPane1 = new javax.swing.JScrollPane();
produtosjTable = new javax.swing.JTable();
jPanel4 = new javax.swing.JPanel();
jButton6 = new javax.swing.JButton();
jButton7 = new javax.swing.JButton();
jButton8 = new javax.swing.JButton();

setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
setTitle("Registrar Transfenrecias");

jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

jLabel1.setText("Empresa Emitente");

jLabel11.setText("Data Final");

jLabel10.setText("Data Inicio");

valorTotaljTextField.setEditable(false);
valorTotaljTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
valorTotaljTextField.setText("0,00");

jLabel2.setText("Valor Total");

dataIniciojDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusGained(java.awt.event.FocusEvent evt) {
        dataIniciojDateChooserFocusGained(evt);
    }
    });

    dataFinaljDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dataFinaljDateChooserFocusGained(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(emitentejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel1))
            .addGap(18, 18, 18)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel10)
                    .addGap(69, 69, 69)
                    .addComponent(jLabel11))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(dataIniciojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(dataFinaljDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(20, 20, 20)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel2)
                .addComponent(valorTotaljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(64, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(16, 16, 16)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel11)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(valorTotaljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dataIniciojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dataFinaljDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(emitentejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jLabel19.setText("CÃ³digo");

    codigojTextField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            codigojTextFieldFocusGained(evt);
        }
    });
    codigojTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            codigojTextFieldKeyPressed(evt);
        }
    });

    quantidadejTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    quantidadejTextField.setText("0,000");
    quantidadejTextField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            quantidadejTextFieldFocusGained(evt);
        }
    });

    valorUnitariojTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    valorUnitariojTextField.setText("0,00");
    valorUnitariojTextField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            valorUnitariojTextFieldFocusGained(evt);
        }
    });
    valorUnitariojTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            valorUnitariojTextFieldKeyPressed(evt);
        }
    });

    descricaojTextField.setEditable(false);

    jLabel20.setText("DescriÃ§Ã£o");

    jLabel3.setText("Quantidade");

    jLabel4.setText("Valor UnitÃ¡rio");

    jLabel5.setText("Estoque");

    estoquejTextField.setEditable(false);
    estoquejTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

    jLabel6.setText("Valor Venda");

    valorVendajTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

    valorCustojTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    valorCustojTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            valorCustojTextFieldKeyPressed(evt);
        }
    });

    jLabel7.setText("Valor Custo");

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel19)
                        .addComponent(codigojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(quantidadejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(valorUnitariojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(descricaojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel20))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(estoquejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(valorVendajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7)
                        .addComponent(valorCustojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addContainerGap(128, Short.MAX_VALUE))
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jLabel19)
                    .addGap(1, 1, 1)
                    .addComponent(codigojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4))
                    .addGap(1, 1, 1)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(quantidadejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(valorUnitariojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel20)
                .addComponent(jLabel5)
                .addComponent(jLabel6)
                .addComponent(jLabel7))
            .addGap(1, 1, 1)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(descricaojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(estoquejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(valorVendajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(valorCustojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(19, Short.MAX_VALUE))
    );

    jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    produtosjTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
    ));
    jScrollPane1.setViewportView(produtosjTable);

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 770, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tick.png"))); // NOI18N
    jButton6.setText("Confirmar");
    jButton6.setToolTipText("Confirma Transferencia");
    jButton6.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton6ActionPerformed(evt);
        }
    });

    jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cross.png"))); // NOI18N
    jButton7.setText("Cancelar");
    jButton7.setToolTipText("Cancelar Transferencia");
    jButton7.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton7ActionPerformed(evt);
        }
    });

    jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cross.png"))); // NOI18N
    jButton8.setText("Excluir Produto");
    jButton8.setToolTipText("Exclui Produto na Lista de Registro");
    jButton8.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton8ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
            .addContainerGap(102, Short.MAX_VALUE)
            .addComponent(jButton6)
            .addGap(109, 109, 109)
            .addComponent(jButton7)
            .addGap(87, 87, 87)
            .addComponent(jButton8)
            .addGap(173, 173, 173))
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton8)
                .addComponent(jButton6)
                .addComponent(jButton7))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codigojTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codigojTextFieldFocusGained
        codigojTextField.selectAll();
}//GEN-LAST:event_codigojTextFieldFocusGained

    private void codigojTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigojTextFieldKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            localizarProdoutoCodigo(codigojTextField.getText());
        }
        if (evt.getKeyCode() == evt.VK_F2) {
                    new FrmConsultaProdutos(this, config, false);
        }
}//GEN-LAST:event_codigojTextFieldKeyPressed

private void valorUnitariojTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorUnitariojTextFieldKeyPressed
    
}//GEN-LAST:event_valorUnitariojTextFieldKeyPressed

private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
    String msg = validarDados();
    if (msg.length() < 5) {
        if (transferencia.getTransferencia().getDataEntrada() == null) {
            transferencia.getTransferencia().setDataEntrada(new Date());
        }
        transferencia.getTransferencia().setDataFinal(dataFinaljDateChooser.getDate());
        transferencia.getTransferencia().setDataInicio(dataIniciojDateChooser.getDate());
        transferencia.getTransferencia().setEmpresa(this.config.getEmpresa().getIdempresa());
        transferencia.getTransferencia().setEmpresa1(((Empresa) emitentejComboBox.getSelectedItem()).getIdempresa());
        transferencia.getTransferencia().setValorTotal(Formatacao.ConvercaoMonetariaFloat(valorTotaljTextField.getText()));
        transferencia.getTransferencia().setObservacao("");
        if (this.alteracao != null) {
            salvarAlteracaoTransferencia();
        }
        salvarTransfenrencia();
        telaConsultaTRansferenciaEntrada.setTransferencias();
        this.dispose();
    } else {
        JOptionPane.showMessageDialog(rootPane, msg);
    }
    
}//GEN-LAST:event_jButton6ActionPerformed

private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        cancelarconfirmarProduto();
        if (alteracao!=null){
            cancelarAlteracaoTransferencia();
        }
        this.dispose();
}//GEN-LAST:event_jButton7ActionPerformed

private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
       if (produtosjTable.getSelectedRowCount()>=0){
           int linha = produtosjTable.getSelectedRow();
           this.transferencia.getListaTransferenciaProduto().get(linha).setExcluir(true);
           TransferenciaController trasTransferenciaController = new TransferenciaController();
           if (this.alteracao!=null){
               trasTransferenciaController.excluirTransferenciaProduto(this.alteracao.getListaTransferenciaProduto().get(linha).getTransTrasferenciaproduto());
           }
           calcilarTotais();
           linhaAlterar = linha;
           organizarListaProdutos();
       }else JOptionPane.showMessageDialog(null, "Selecione um porduto da lista");
}//GEN-LAST:event_jButton8ActionPerformed

private void quantidadejTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_quantidadejTextFieldFocusGained
    quantidadejTextField.selectAll();
}//GEN-LAST:event_quantidadejTextFieldFocusGained

private void valorUnitariojTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valorUnitariojTextFieldFocusGained
    valorUnitariojTextField.selectAll();
}//GEN-LAST:event_valorUnitariojTextFieldFocusGained

private void dataIniciojDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataIniciojDateChooserFocusGained
        // TODO add your handling code here:
}//GEN-LAST:event_dataIniciojDateChooserFocusGained

private void dataFinaljDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataFinaljDateChooserFocusGained
// TODO add your handling code here:
}//GEN-LAST:event_dataFinaljDateChooserFocusGained

    private void valorCustojTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorCustojTextFieldKeyPressed
       if (evt.getKeyCode() == evt.VK_ENTER) {
         registrarProdutoTransferencia();
       }
    }//GEN-LAST:event_valorCustojTextFieldKeyPressed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField codigojTextField;
    private com.toedter.calendar.JDateChooser dataFinaljDateChooser;
    private com.toedter.calendar.JDateChooser dataIniciojDateChooser;
    private javax.swing.JTextField descricaojTextField;
    private javax.swing.JComboBox emitentejComboBox;
    private javax.swing.JTextField estoquejTextField;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable produtosjTable;
    private javax.swing.JTextField quantidadejTextField;
    private javax.swing.JTextField valorCustojTextField;
    private javax.swing.JTextField valorTotaljTextField;
    private javax.swing.JTextField valorUnitariojTextField;
    private javax.swing.JTextField valorVendajTextField;
    // End of variables declaration//GEN-END:variables

    private void preencherCampos(){
        EmpresaController empresaController = new EmpresaController();
        List<Empresa> listaEmpresa = empresaController.listarEmpresas();
        if (listaEmpresa!=null){
            for (int i=0;i<listaEmpresa.size();i++){
                int idEmp01 = this.config.getEmpresa().getIdempresa();
                int idEmp02 = listaEmpresa.get(i).getIdempresa();
                if (idEmp01!=idEmp02){
                    emitentejComboBox.addItem(listaEmpresa.get(i));
                }
            }
        }
    }
    
    
    public void localizarProdoutoCodigo(String referencia) {
        this.ConTransferenciaProduto = new consultaTransferenciaProduto();
        ProdutoController produtoController = new ProdutoController();
        produto = produtoController.consultarProdutoReferencia(Integer.parseInt(referencia));
        if (produto != null) {
            if (produto.getIdProduto() != null) {
                this.ConTransferenciaProduto.setProduto(produto);
                if (this.ConTransferenciaProduto.getProduto()==null) {
                    JOptionPane.showMessageDialog(null, "Produto nÃ£o encontrado");
                    codigojTextField.requestFocus();
                    codigojTextField.selectAll();
                } else {
                    descricaojTextField.setText(ConTransferenciaProduto.getProduto().getDescricao());
                    codigojTextField.setText(String.valueOf(ConTransferenciaProduto.getProduto().getReferencia()));
                    localizarEstoque();
                    quantidadejTextField.requestFocus();
                    quantidadejTextField.selectAll();
                }
            }else {
                JOptionPane.showMessageDialog(null, "Produto nÃ£o Localizado");
            }
        }else {
            JOptionPane.showMessageDialog(null, "Produto nÃ£o Localizado");
        }
    }
    
    public void gerarProdutoModel(){
        if (transferencia!=null){
            if (transferencia.getListaTransferenciaProduto()!=null){
                produtoModel = new TransferenciaEntradaProdutoTableModel(transferencia.getListaTransferenciaProduto());
            }else produtoModel = new TransferenciaEntradaProdutoTableModel(new ArrayList<consultaTransferenciaProduto>());
        }else produtoModel = new TransferenciaEntradaProdutoTableModel(new ArrayList<consultaTransferenciaProduto>());
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.RIGHT);
        produtosjTable.setModel(produtoModel);
        produtosjTable.getColumnModel().getColumn(0).setPreferredWidth(20);
        produtosjTable.getColumnModel().getColumn(1).setPreferredWidth(300);
        produtosjTable.getColumnModel().getColumn(2).setPreferredWidth(20);
        produtosjTable.getColumnModel().getColumn(3).setCellRenderer(renderer);
        produtosjTable.getColumnModel().getColumn(3).setPreferredWidth(30);
        produtosjTable.getColumnModel().getColumn(4).setCellRenderer(renderer);
        produtosjTable.getColumnModel().getColumn(4).setPreferredWidth(20);
        produtosjTable.getColumnModel().getColumn(5).setCellRenderer(renderer);
        produtosjTable.getColumnModel().getColumn(5).setPreferredWidth(50);
        produtosjTable.repaint();
    }

    public void consultaProduto() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setData(Object objeto) {
       Produto produto = (Produto) objeto;
       localizarProdoutoCodigo(String.valueOf(produto.getReferencia()));
    }
    
    public void registrarProdutoTransferencia(){
        Tranfereciaproduto tranfereciaproduto = new Tranfereciaproduto();
        tranfereciaproduto.setQuantidade(Formatacao.ConvercaoMonetariaDouble(quantidadejTextField.getText()));
        tranfereciaproduto.setValorUnitario(Formatacao.ConvercaoMonetariaFloat(valorUnitariojTextField.getText()));
        Double quantidade = tranfereciaproduto.getQuantidade();
        tranfereciaproduto.setValorTotal(quantidade.floatValue() *  tranfereciaproduto.getValorUnitario());
        tranfereciaproduto.setProduto(this.ConTransferenciaProduto.getProduto().getIdProduto());
        ConTransferenciaProduto.setTransTrasferenciaproduto(tranfereciaproduto);
        Float valorVenda = Formatacao.ConvercaoMonetariaFloat(valorVendajTextField.getText());
        Double custoCusto = Formatacao.ConvercaoMonetariaDouble(valorCustojTextField.getText());
        salvarEstoque(valorVenda, custoCusto);
        codigojTextField.setText("");
        descricaojTextField.setText("");
        estoquejTextField.setText("");
        valorCustojTextField.setText("");
        this.valorUnitariojTextField.setText("");
        quantidadejTextField.setText("");
        transferencia.getListaTransferenciaProduto().add(ConTransferenciaProduto);
        calcilarTotais();
        gerarProdutoModel();
        this.produto =null;
        this.estoque = null;
        codigojTextField.requestFocus();
    }

    public void setBanco(Banco banco) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setModelProduto(Produto produto, Estoque estoque) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setNFe(List<NfProdutos> listaProdutos, List<NfDuplicatas> listaDuplicatas, NotaEletronica nota, Fornecedor fornecedor) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setAlterarValorVenda(Estoque estoque) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setFornecedor(Object objeto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setForPedido(Object objeto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    public void calcilarTotais(){
        double valorTotal = 0;
        for (int i=0;i<this.transferencia.getListaTransferenciaProduto().size();i++){
            if (!(this.transferencia.getListaTransferenciaProduto().get(i).isExcluir())){
                valorTotal = valorTotal + this.transferencia.getListaTransferenciaProduto().get(i).getTransTrasferenciaproduto().getValorTotal();
            }
        }
        valorTotaljTextField.setText(Formatacao.foramtarDoubleString(valorTotal));
    }
    
    public void organizarListaProdutos(){
        List<consultaTransferenciaProduto> listaOrganizada = new ArrayList<consultaTransferenciaProduto>();
        if (linhaAlterar > -1) {
            for (int i = 0; i < this.transferencia.getListaTransferenciaProduto().size(); i++) {
                if (!(this.transferencia.getListaTransferenciaProduto().get(i)).isExcluir()) {
                    listaOrganizada.add(transferencia.getListaTransferenciaProduto().get(i));
                }
            }
            this.transferencia.setListaTransferenciaProduto(new ArrayList<consultaTransferenciaProduto>());
            this.transferencia.setListaTransferenciaProduto(listaOrganizada);
        }
        gerarProdutoModel();
        cancelarconfirmarProduto();
        codigojTextField.requestFocus();
        linhaAlterar = -1;
    }
    
    public void cancelarconfirmarProduto(){
        linhaAlterar = -1;
        codigojTextField.setText("");
        quantidadejTextField.setText("0,000");
        valorUnitariojTextField.setText("0,00");
        codigojTextField.requestFocus();
        codigojTextField.selectAll();
    }
    
    public void cancelarAlteracaoTransferencia(){
        TransferenciaController trasTransferenciaController = new TransferenciaController();
        EstoqueController estoqueController = new EstoqueController();
        for (int i=0;i<this.transferencia.getListaTransferenciaProduto().size();i++){
            Estoque estoque = new Estoque();
            estoque = transferencia.getListaTransferenciaProduto().get(i).getEstoque();
            double quantidade = estoque.getQuantidadeEstoque() - this.transferencia.getListaTransferenciaProduto().get(i).getTransTrasferenciaproduto().getQuantidade();
            estoqueController.saidaEstoque(quantidade, estoque, this.config.getEmpresa().getIdempresa());
            trasTransferenciaController.excluirTransferenciaProduto(this.transferencia.getListaTransferenciaProduto().get(i).getTransTrasferenciaproduto());
        }
        
        for (int i=0;i<this.alteracao.getListaTransferenciaProduto().size();i++){
            Estoque estoque = new Estoque();
            estoque = estoqueController.consultarEstoque(alteracao.getListaTransferenciaProduto().get(i).getProduto().getIdProduto(), this.config.getEmpresa().getIdempresa());
            double quantidade = estoque.getQuantidadeEstoque() + this.alteracao.getListaTransferenciaProduto().get(i).getTransTrasferenciaproduto().getQuantidade();
            estoqueController.saidaEstoque(quantidade, estoque, this.config.getEmpresa().getIdempresa());
            trasTransferenciaController.salvarTransferenciaProduto(this.alteracao.getListaTransferenciaProduto().get(i).getTransTrasferenciaproduto());
        }
    }

   public void salvarAlteracaoTransferencia(){
        
        EstoqueController estoqueController = new EstoqueController();
        for (int i=0;i<this.alteracao.getListaTransferenciaProduto().size();i++){
            Estoque estoque = new Estoque();
            estoque = estoqueController.consultarEstoque(this.alteracao.getListaTransferenciaProduto().get(i).getTransTrasferenciaproduto().getProduto(), this.config.getEmpresa().getIdempresa());
            double quantidade =  this.alteracao.getListaTransferenciaProduto().get(i).getTransTrasferenciaproduto().getQuantidade();
            estoqueController.saidaEstoque(quantidade, estoque, this.config.getEmpresa().getIdempresa());
        }
    }
    
    public void salvarTransfenrencia(){
        Transferencia transferencia = new Transferencia();
        TransferenciaController transferenciaController = new TransferenciaController();
        transferencia = transferenciaController.salvarTransferencia(this.transferencia.getTransferencia());
        EstoqueController estoqueController = new EstoqueController();
        for (int i=0;i<this.transferencia.getListaTransferenciaProduto().size();i++){
            Estoque estoque = new Estoque();
            estoque = estoqueController.consultarEstoque(this.transferencia.getListaTransferenciaProduto().get(i).getProduto().getIdProduto(), this.config.getEmpresa().getIdempresa());
            double quantidade = this.transferencia.getListaTransferenciaProduto().get(i).getTransTrasferenciaproduto().getQuantidade();
            this.transferencia.getListaTransferenciaProduto().get(i).getTransTrasferenciaproduto().setTransferencia(transferencia.getIdtransferencia());
            estoqueController.entradaEstoque(quantidade, estoque, this.config.getEmpresa().getIdempresa(), false, 0);
            transferenciaController.salvarTransferenciaProduto(this.transferencia.getListaTransferenciaProduto().get(i).getTransTrasferenciaproduto());
        }
    }
    
    public void localizarEstoque(){
        EstoqueController estoqueController = new EstoqueController();
        estoque = estoqueController.consultarEstoque(ConTransferenciaProduto.getProduto().getIdProduto(), config.getEmpresa().getIdempresa());
        if (estoque!=null){
            estoquejTextField.setText(Formatacao.foramtarDoubleString(estoque.getQuantidadeEstoque()));
            valorCustojTextField.setText(Formatacao.foramtarDoubleString(estoque.getValorCusto()));
            valorVendajTextField.setText(Formatacao.foramtarFloatString(estoque.getValorVenda()));
            ConTransferenciaProduto.setEstoque(estoque);
        }
    }
    
    public void salvarEstoque(Float valorVenda, Double valorCusto){
        boolean salvarEstoque = false;
        if (valorVenda> estoque.getValorVenda()){
            estoque.setValorVenda(valorVenda);
            salvarEstoque = true;
        }
        if (valorCusto> estoque.getValorCusto()){
            estoque.setValorCusto(valorCusto);
            salvarEstoque = true;
        }
        if (salvarEstoque){
            EstoqueController estoqueController = new EstoqueController();
            estoque = estoqueController.salvarEstoque(estoque);
        }
    }

    public void setPlanoContas(Object objeto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setCliente(Object objeto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setProdutoXML(Produto produto) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    public String validarDados(){
        String msg ="";
        if (dataIniciojDateChooser.getDate()==null){
            msg = "Data Inicio invÃ¡lida\b\n";
        }
        if (dataFinaljDateChooser.getDate()==null){
            msg = msg + "Data Final invÃ¡lida";
        }
        return msg;
    }

    public void setArquivo(File arquivo) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}

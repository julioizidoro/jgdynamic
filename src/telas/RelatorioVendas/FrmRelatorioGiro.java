/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package telas.RelatorioVendas;

import Regras.EstoqueController;
import Regras.Formatacao;
import Regras.GiroProdutoController;
import Regras.VendaController;
import com.toedter.calendar.JTextFieldDateEditor;
import controler.Config;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import model.Fornecedor;
import model.Subgrupoproduto;
import telas.Fornecedor.FrmConsultaFornecedor;
import view.ViewConsultaProdutoFornecedor;
import view.Viewconsultaprodutoestoque;

/**
 *
 * @author wolverine
 */
public class FrmRelatorioGiro extends javax.swing.JFrame implements ItelaGiro{
    
    private String datePattern;
    private String maskPattern;
    private char placeHolder;
    private List<GiroMes> listaMes;
    private int numeroMes;
    private Config config;

    /**
     * Creates new form FrmRelatorioGiro
     */
    public FrmRelatorioGiro(Config config) {
        this.config = config;
        listaMes = new ArrayList<GiroMes>();
        datePattern = "dd/MM/yyyy";
        maskPattern = "##/##/####";
        placeHolder = '_';
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo_mini.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        datajDateChooser.setDate(new Date());
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        numeroMesjSpinner = new javax.swing.JSpinner();
        datajDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
            maskPattern, placeHolder));
    jLabel2 = new javax.swing.JLabel();
    jPanel3 = new javax.swing.JPanel();
    produtojRadioButton = new javax.swing.JRadioButton();
    fornecedorjRadioButton = new javax.swing.JRadioButton();
    grupojRadioButton = new javax.swing.JRadioButton();
    jPanel4 = new javax.swing.JPanel();
    jButton1 = new javax.swing.JButton();
    jButton2 = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Relatório de Giro dos Produtos");

    jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Meses"));

    jLabel1.setText("Nº Meses");

    jLabel2.setText("Data Final ");

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1)
                .addComponent(numeroMesjSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel2)
                .addComponent(datajDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(23, Short.MAX_VALUE))
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(numeroMesjSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(datajDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(13, Short.MAX_VALUE))
    );

    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));

    buttonGroup1.add(produtojRadioButton);
    produtojRadioButton.setText("Todos Produtos");

    buttonGroup1.add(fornecedorjRadioButton);
    fornecedorjRadioButton.setText("Fornecedor");

    buttonGroup1.add(grupojRadioButton);
    grupojRadioButton.setText("Grupo Produtos");

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addGap(18, 18, 18)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(grupojRadioButton)
                .addComponent(fornecedorjRadioButton)
                .addComponent(produtojRadioButton))
            .addContainerGap(68, Short.MAX_VALUE))
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(produtojRadioButton)
            .addGap(18, 18, 18)
            .addComponent(fornecedorjRadioButton)
            .addGap(18, 18, 18)
            .addComponent(grupojRadioButton)
            .addContainerGap(16, Short.MAX_VALUE))
    );

    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tick.png"))); // NOI18N
    jButton1.setText("Confirmar");
    jButton1.setToolTipText("Confirmar Relatório");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });
    jPanel4.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 10, -1, -1));

    jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cross.png"))); // NOI18N
    jButton2.setText("Fechar");
    jButton2.setToolTipText("Fechar Janela");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });
    jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 110, -1));

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(29, 29, 29)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.listaMes = new ArrayList<GiroMes>();
        validarMes();
        criarTabela();
        selecionarTipoRelatorio();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser datajDateChooser;
    private javax.swing.JRadioButton fornecedorjRadioButton;
    private javax.swing.JRadioButton grupojRadioButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSpinner numeroMesjSpinner;
    private javax.swing.JRadioButton produtojRadioButton;
    // End of variables declaration//GEN-END:variables
    public void validarMes(){
        if (numeroMesjSpinner.getValue()!=null){
            numeroMes = (Integer) numeroMesjSpinner.getValue();
            if (numeroMes>0){
                gerarMeses();
            }else JOptionPane.showMessageDialog(rootPane, "Número Meses não pode ser Zero");           
        }else JOptionPane.showMessageDialog(rootPane, "Número de Meses não pode ser branco");
    }
    
    public void gerarMeses(){
        String data = Formatacao.ConvercaoDataPadrao(datajDateChooser.getDate());
        String mesString = data.substring(3, 5);
        String anoString = data.substring(6, 10);
        int mesInicio = Integer.parseInt(mesString);
        int anoInicio = Integer.parseInt(anoString);
        GiroProdutoController giroProdutoController = new GiroProdutoController();
        for (int i=0;i<numeroMes;i++){
            if (mesInicio==1){
                mesInicio=12;
                anoInicio = anoInicio - 1;
            }else {
                mesInicio = mesInicio - 1;
            }
            GiroMes giroMes = new GiroMes();
            giroMes.setAno(String.valueOf(anoInicio));
            giroMes.setMes(Formatacao.nomeMes(mesInicio));
            giroMes.setNumeroMes(mesInicio);
            this.listaMes.add(giroMes);
       }
    }
    
    public void selecionarTipoRelatorio(){
        if (produtojRadioButton.isSelected()){
            gerarValoresProduto();
        }else if (fornecedorjRadioButton.isSelected()){
            new FrmConsultaFornecedor(this);
        }else if (grupojRadioButton.isSelected()){
            //teste
        }else JOptionPane.showMessageDialog(rootPane, "Selecione o tipo de relatório");
    }
    
    public void gerarValoresProduto(){
        VendaController vendaController = new VendaController();
        GiroProdutoController giroProdutoController = new GiroProdutoController();
        EstoqueController estoqueController = new EstoqueController();
        List<Viewconsultaprodutoestoque> listaProduto = estoqueController.consultarEstoqueGeral(config.getEmpresa().getIdempresa());
        if (listaProduto != null) {
            String linha1 = "Insert into relGiro(idProduto, descricao, estoque, Total";
            String linhacampos = "";
            for (int i = 0; i < listaProduto.size(); i++) {
                linhacampos = "";
                for (int m = 0; m < listaMes.size(); m++) {
                    String mes = listaMes.get(m).getMes() + listaMes.get(m).getAno();
                    linhacampos = linhacampos +  ",qtda_" + (m+1);
                }
                
                linhacampos = linhacampos + ") values (" + (listaProduto.get(i).getReferencia() + ",'" + listaProduto.get(i).getDescricao() + "'"   + 
                             "," +  listaProduto.get(i).getQuantidadeEstoque());
                String linhavalor = "";
                double quantidadeTotal=0;
                for (int m = 0; m < listaMes.size(); m++) {
                    String mes = listaMes.get(m).getMes() + listaMes.get(m).getAno();
                    String dataInicial = listaMes.get(m).getAno() + "-" + Formatacao.retornaDataInicia(listaMes.get(m).getNumeroMes());
                    String dataFinal = listaMes.get(m).getAno() + "-" + Formatacao.retornaDataFinal(listaMes.get(m).getNumeroMes());
                    double quantidade = vendaController.quantidadeVendida(listaProduto.get(i).getIdProduto(), dataInicial, dataFinal);
                    linhavalor =  linhavalor + (", " + quantidade);
                    quantidadeTotal = quantidadeTotal + quantidade;
                }
                linhavalor = linhavalor + "," + quantidadeTotal;
                String sql = linha1 + linhacampos + linhavalor + ")";
                giroProdutoController.SalvarValores(sql);
            }
        }
        exportarExcel();
    }
    
    public void gerarValoresFornecedor(int idFornecedor) {
        VendaController vendaController = new VendaController();
        GiroProdutoController giroProdutoController = new GiroProdutoController();
        List<ViewConsultaProdutoFornecedor> listaProduto = giroProdutoController.listarProdutofornecedor(idFornecedor);
        if (listaProduto != null) {
            String linha1 = "Insert into relGiro(idProduto, descricao,  estoque ";
            String linhacampos = "";
            double quantidadeTotal=0;
            for (int i = 0; i < listaProduto.size(); i++) {
                quantidadeTotal=0;
                linhacampos = "";
                for (int m = 0; m < listaMes.size(); m++) {
                    String mes = listaMes.get(m).getMes() + listaMes.get(m).getAno();
                    linhacampos = linhacampos +  ",qtda_" + (m+1);
                }
                
                linhacampos = linhacampos + ",Total) values (" + (listaProduto.get(i).getReferencia() + ",'" + listaProduto.get(i).getDescricao() + "'"   + 
                              "," +  listaProduto.get(i).getQuantidadeEstoque());
                String linhavalor = "";
                for (int m = 0; m < listaMes.size(); m++) {
                    String dataInicial = listaMes.get(m).getAno() + "-" + Formatacao.retornaDataInicia(listaMes.get(m).getNumeroMes());
                    String dataFinal = listaMes.get(m).getAno() + "-" + Formatacao.retornaDataFinal(listaMes.get(m).getNumeroMes());
                    double quantidade = vendaController.quantidadeVendida(listaProduto.get(i).getIdproduto(), dataInicial, dataFinal);
                    quantidadeTotal = quantidadeTotal + quantidade;
                    linhavalor =  linhavalor + (", " + quantidade);
                }
                linhavalor = linhavalor + "," + quantidadeTotal;
                String sql = linha1 + linhacampos + linhavalor + ")";
                giroProdutoController.SalvarValores(sql);
            }
        }
        exportarExcel();
    }
    
    
    public void criarTabela(){
        String sql = "create table relGiro(";
        sql = sql + "idProduto integer, descricao varchar(100), estoque double ";
        for(int i=0; i<listaMes.size(); i++){
           String mes = listaMes.get(i).getMes() + listaMes.get(i).getAno();
           sql = sql + ",qtda_" + (i+1) + " double ";
        }
        sql = sql + ", Total" + " double" + ")";
        GiroProdutoController griController = new GiroProdutoController();
        griController.criarTabelas(sql);
    }

    public void setFornecedor(Fornecedor fornecedor) {
        gerarValoresFornecedor(fornecedor.getIdfornecedor());
    }

    public void setGrupoProduto(Subgrupoproduto subGrupo) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    
    public void exportarExcel(){      
        GiroProdutoController giroProdutoController = new GiroProdutoController();
        giroProdutoController.listarGiro("relGiroProdutos");
    }
    
    
}
